{"version":3,"file":"_hyperscript_web.modern.js","sources":["../src/lib/utils.js","../src/lib/core.js","../src/lib/web.js","../src/web/_hyperscript_web.js"],"sourcesContent":["\n/**\n * mergeObjects combines the keys from obj2 into obj2, then returns obj1\n *\n * @param {object} obj1\n * @param {object} obj2\n * @returns object\n */\nexport function mergeObjects(obj1, obj2) {\n\tfor (var key in obj2) {\n\t\tif (obj2.hasOwnProperty(key)) {\n\t\t\tobj1[key] = obj2[key];\n\t\t}\n\t}\n\treturn obj1;\n}\n\nexport function getOrInitObject(root, prop) {\n\tvar value = root[prop];\n\tif (value) {\n\t\treturn value;\n\t} else {\n\t\tvar newObj = {};\n\t\troot[prop] = newObj;\n\t\treturn newObj;\n\t}\n}\n\n/**\n * parseJSON parses a JSON string into a corresponding value.  If the\n * value passed in is not valid JSON, then it logs an error and returns `null`.\n *\n * @param {string} jString\n * @returns any\n */\nexport function parseJSON(jString) {\n\ttry {\n\t\treturn JSON.parse(jString);\n\t} catch (error) {\n\t\tlogError(error);\n\t\treturn null;\n\t}\n}\n\n/**\n * logError writes an error message to the Javascript console.  It can take any\n * value, but msg should commonly be a simple string.\n * @param {*} msg\n */\nexport function logError(msg) {\n\tif (console.error) {\n\t\tconsole.error(msg);\n\t} else if (console.log) {\n\t\tconsole.log(\"ERROR: \", msg);\n\t}\n}\n\n// TODO: JSDoc description of what's happening here\nexport function varargConstructor(Cls, args) {\n\treturn new (Cls.bind.apply(Cls, [Cls].concat(args)))();\n}\n","\t///=========================================================================\n\t/// This module provides the core runtime and grammar for hyperscript\n\t///=========================================================================\n\n\timport { getOrInitObject, mergeObjects, parseJSON, varargConstructor } from \"./utils\";\n\n\n\t/**\n\t * @type {HyperscriptObject}\n\t */\n\tlet _hyperscript\n\n\tvar globalScope = globalThis;\n\n\t//====================================================================\n\t// Standard library\n\t//====================================================================\n\n\tclass ElementCollection {\n\t\tconstructor(css, relativeToElement) {\n\t\t\tthis._css = css;\n\t\t\tthis.relativeToElement = relativeToElement;\n\t\t}\n\n\t\tget css() {\n\t\t\treturn _runtime.escapeSelector(this._css);\n\t\t}\n\n\t\tget className() {\n\t\t\treturn this._css.substr(1);\n\t\t}\n\n\t\tget id() {\n\t\t\treturn this.className();\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\treturn _runtime.getRootNode(this.relativeToElement)\n\t\t\t\t.querySelectorAll(this.css)\n\t\t\t\t[Symbol.iterator]();\n\t\t}\n\t}\n\n\t//====================================================================\n\t// Lexer\n\t//====================================================================\n\n\t/** @type LexerObject */\n\tvar _lexer = (function () {\n\t\tvar OP_TABLE = {\n\t\t\t\"+\": \"PLUS\",\n\t\t\t\"-\": \"MINUS\",\n\t\t\t\"*\": \"MULTIPLY\",\n\t\t\t\"/\": \"DIVIDE\",\n\t\t\t\".\": \"PERIOD\",\n\t\t\t\"..\": \"ELLIPSIS\",\n\t\t\t\"\\\\\": \"BACKSLASH\",\n\t\t\t\":\": \"COLON\",\n\t\t\t\"%\": \"PERCENT\",\n\t\t\t\"|\": \"PIPE\",\n\t\t\t\"!\": \"EXCLAMATION\",\n\t\t\t\"?\": \"QUESTION\",\n\t\t\t\"#\": \"POUND\",\n\t\t\t\"&\": \"AMPERSAND\",\n\t\t\t$: \"DOLLAR\",\n\t\t\t\";\": \"SEMI\",\n\t\t\t\",\": \"COMMA\",\n\t\t\t\"(\": \"L_PAREN\",\n\t\t\t\")\": \"R_PAREN\",\n\t\t\t\"<\": \"L_ANG\",\n\t\t\t\">\": \"R_ANG\",\n\t\t\t\"<=\": \"LTE_ANG\",\n\t\t\t\">=\": \"GTE_ANG\",\n\t\t\t\"==\": \"EQ\",\n\t\t\t\"===\": \"EQQ\",\n\t\t\t\"!=\": \"NEQ\",\n\t\t\t\"!==\": \"NEQQ\",\n\t\t\t\"{\": \"L_BRACE\",\n\t\t\t\"}\": \"R_BRACE\",\n\t\t\t\"[\": \"L_BRACKET\",\n\t\t\t\"]\": \"R_BRACKET\",\n\t\t\t\"=\": \"EQUALS\",\n\t\t};\n\n\t\t/**\n\t\t * isValidCSSClassChar returns `true` if the provided character is valid in a CSS class.\n\t\t * @param {string} c\n\t\t * @returns boolean\n\t\t */\n\t\tfunction isValidCSSClassChar(c) {\n\t\t\treturn isAlpha(c) || isNumeric(c) || c === \"-\" || c === \"_\" || c === \":\";\n\t\t}\n\n\t\t/**\n\t\t * isValidCSSIDChar returns `true` if the provided character is valid in a CSS ID\n\t\t * @param {string} c\n\t\t * @returns boolean\n\t\t */\n\t\tfunction isValidCSSIDChar(c) {\n\t\t\treturn isAlpha(c) || isNumeric(c) || c === \"-\" || c === \"_\" || c === \":\";\n\t\t}\n\n\t\t/**\n\t\t * isWhitespace returns `true` if the provided character is whitespace.\n\t\t * @param {string} c\n\t\t * @returns boolean\n\t\t */\n\t\tfunction isWhitespace(c) {\n\t\t\treturn c === \" \" || c === \"\\t\" || isNewline(c);\n\t\t}\n\n\t\t/**\n\t\t * positionString returns a string representation of a Token's line and column details.\n\t\t * @param {Token} token\n\t\t * @returns string\n\t\t */\n\t\tfunction positionString(token) {\n\t\t\treturn \"[Line: \" + token.line + \", Column: \" + token.column + \"]\";\n\t\t}\n\n\t\t/**\n\t\t * isNewline returns `true` if the provided character is a carrage return or newline\n\t\t * @param {string} c\n\t\t * @returns boolean\n\t\t */\n\t\tfunction isNewline(c) {\n\t\t\treturn c === \"\\r\" || c === \"\\n\";\n\t\t}\n\n\t\t/**\n\t\t * isNumeric returns `true` if the provided character is a number (0-9)\n\t\t * @param {string} c\n\t\t * @returns boolean\n\t\t */\n\t\tfunction isNumeric(c) {\n\t\t\treturn c >= \"0\" && c <= \"9\";\n\t\t}\n\n\t\t/**\n\t\t * isAlpha returns `true` if the provided character is a letter in the alphabet\n\t\t * @param {string} c\n\t\t * @returns boolean\n\t\t */\n\t\tfunction isAlpha(c) {\n\t\t\treturn (c >= \"a\" && c <= \"z\") || (c >= \"A\" && c <= \"Z\");\n\t\t}\n\n\t\t/**\n\t\t * @param {string} c\n\t\t * @param {boolean} [dollarIsOp]\n\t\t * @returns boolean\n\t\t */\n\t\tfunction isIdentifierChar(c, dollarIsOp) {\n\t\t\treturn c === \"_\" || c === \"$\";\n\t\t}\n\n\t\t/**\n\t\t * @param {string} c\n\t\t * @returns boolean\n\t\t */\n\t\tfunction isReservedChar(c) {\n\t\t\treturn c === \"`\" || c === \"^\";\n\t\t}\n\n\t\t/**\n\t\t * @param {Token[]} tokens\n\t\t * @param {Token[]} consumed\n\t\t * @param {string} source\n\t\t * @returns {TokensObject}\n\t\t */\n\t\tfunction makeTokensObject(tokens, consumed, source) {\n\t\t\tconsumeWhitespace(); // consume initial whitespace\n\n\t\t\t/** @type Token | null */\n\t\t\tvar _lastConsumed = null;\n\n\t\t\tfunction consumeWhitespace() {\n\t\t\t\twhile (token(0, true).type === \"WHITESPACE\") {\n\t\t\t\t\tconsumed.push(tokens.shift());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {TokensObject} tokens\n\t\t\t * @param {*} error\n\t\t\t */\n\t\t\tfunction raiseError(tokens, error) {\n\t\t\t\t_parser.raiseParseError(tokens, error);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} value\n\t\t\t * @returns {Token}\n\t\t\t */\n\t\t\tfunction requireOpToken(value) {\n\t\t\t\tvar token = matchOpToken(value);\n\t\t\t\tif (token) {\n\t\t\t\t\treturn token;\n\t\t\t\t} else {\n\t\t\t\t\traiseError(this, \"Expected '\" + value + \"' but found '\" + currentToken().value + \"'\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} op1\n\t\t\t * @param {string} [op2]\n\t\t\t * @param {string} [op3]\n\t\t\t * @returns {Token | void}\n\t\t\t */\n\t\t\tfunction matchAnyOpToken(op1, op2, op3) {\n\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\t\tvar opToken = arguments[i];\n\t\t\t\t\tvar match = matchOpToken(opToken);\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\treturn match;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} op1\n\t\t\t * @param {string} [op2]\n\t\t\t * @param {string} [op3]\n\t\t\t * @returns {Token | void}\n\t\t\t */\n\t\t\tfunction matchAnyToken(op1, op2, op3) {\n\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\t\tvar opToken = arguments[i];\n\t\t\t\t\tvar match = matchToken(opToken);\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\treturn match;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} value\n\t\t\t * @returns {Token | void}\n\t\t\t */\n\t\t\tfunction matchOpToken(value) {\n\t\t\t\tif (currentToken() && currentToken().op && currentToken().value === value) {\n\t\t\t\t\treturn consumeToken();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} type1\n\t\t\t * @param {string} [type2]\n\t\t\t * @param {string} [type3]\n\t\t\t * @param {string} [type4]\n\t\t\t * @returns {Token}\n\t\t\t */\n\t\t\tfunction requireTokenType(type1, type2, type3, type4) {\n\t\t\t\tvar token = matchTokenType(type1, type2, type3, type4);\n\t\t\t\tif (token) {\n\t\t\t\t\treturn token;\n\t\t\t\t} else {\n\t\t\t\t\traiseError(this, \"Expected one of \" + JSON.stringify([type1, type2, type3]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} type1\n\t\t\t * @param {string} [type2]\n\t\t\t * @param {string} [type3]\n\t\t\t * @param {string} [type4]\n\t\t\t * @returns {Token | void}\n\t\t\t */\n\t\t\tfunction matchTokenType(type1, type2, type3, type4) {\n\t\t\t\tif (\n\t\t\t\t\tcurrentToken() &&\n\t\t\t\t\tcurrentToken().type &&\n\t\t\t\t\t[type1, type2, type3, type4].indexOf(currentToken().type) >= 0\n\t\t\t\t) {\n\t\t\t\t\treturn consumeToken();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} value\n\t\t\t * @param {string} [type]\n\t\t\t * @returns {Token}\n\t\t\t */\n\t\t\tfunction requireToken(value, type) {\n\t\t\t\tvar token = matchToken(value, type);\n\t\t\t\tif (token) {\n\t\t\t\t\treturn token;\n\t\t\t\t} else {\n\t\t\t\t\traiseError(this, \"Expected '\" + value + \"' but found '\" + currentToken().value + \"'\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} value\n\t\t\t * @param {string} [type]\n\t\t\t * @returns {Token | void}\n\t\t\t */\n\t\t\tfunction matchToken(value, type) {\n\t\t\t\tif (follows.indexOf(value) !== -1) {\n\t\t\t\t\treturn; // disallowed token here\n\t\t\t\t}\n\t\t\t\tvar type = type || \"IDENTIFIER\";\n\t\t\t\tif (currentToken() && currentToken().value === value && currentToken().type === type) {\n\t\t\t\t\treturn consumeToken();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {Token}\n\t\t\t */\n\t\t\tfunction consumeToken() {\n\t\t\t\tvar match = tokens.shift();\n\t\t\t\tconsumed.push(match);\n\t\t\t\t_lastConsumed = match;\n\t\t\t\tconsumeWhitespace(); // consume any whitespace\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} value\n\t\t\t * @param {string} [type]\n\t\t\t * @returns {Token[]}\n\t\t\t */\n\t\t\tfunction consumeUntil(value, type) {\n\t\t\t\t/** @type Token[] */\n\t\t\t\tvar tokenList = [];\n\t\t\t\tvar currentToken = token(0, true);\n\n\t\t\t\twhile (\n\t\t\t\t\t(type == null || currentToken.type !== type) &&\n\t\t\t\t\t(value == null || currentToken.value !== value) &&\n\t\t\t\t\tcurrentToken.type !== \"EOF\"\n\t\t\t\t) {\n\t\t\t\t\tvar match = tokens.shift();\n\t\t\t\t\tconsumed.push(match);\n\t\t\t\t\ttokenList.push(currentToken);\n\t\t\t\t\tcurrentToken = token(0, true);\n\t\t\t\t}\n\t\t\t\tconsumeWhitespace(); // consume any whitespace\n\t\t\t\treturn tokenList;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tfunction lastWhitespace() {\n\t\t\t\tif (consumed[consumed.length - 1] && consumed[consumed.length - 1].type === \"WHITESPACE\") {\n\t\t\t\t\treturn consumed[consumed.length - 1].value;\n\t\t\t\t} else {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction consumeUntilWhitespace() {\n\t\t\t\treturn consumeUntil(null, \"WHITESPACE\");\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tfunction hasMore() {\n\t\t\t\treturn tokens.length > 0;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {number} n\n\t\t\t * @param {boolean} [dontIgnoreWhitespace]\n\t\t\t * @returns {Token}\n\t\t\t */\n\t\t\tfunction token(n, dontIgnoreWhitespace) {\n\t\t\t\tvar /**@type {Token}*/ token;\n\t\t\t\tvar i = 0;\n\t\t\t\tdo {\n\t\t\t\t\tif (!dontIgnoreWhitespace) {\n\t\t\t\t\t\twhile (tokens[i] && tokens[i].type === \"WHITESPACE\") {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttoken = tokens[i];\n\t\t\t\t\tn--;\n\t\t\t\t\ti++;\n\t\t\t\t} while (n > -1);\n\t\t\t\tif (token) {\n\t\t\t\t\treturn token;\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"EOF\",\n\t\t\t\t\t\tvalue: \"<<<EOF>>>\",\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {Token}\n\t\t\t */\n\t\t\tfunction currentToken() {\n\t\t\t\treturn token(0);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {Token | null}\n\t\t\t */\n\t\t\tfunction lastMatch() {\n\t\t\t\treturn _lastConsumed;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tfunction sourceFor() {\n\t\t\t\treturn source.substring(this.startToken.start, this.endToken.end);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tfunction lineFor() {\n\t\t\t\treturn source.split(\"\\n\")[this.startToken.line - 1];\n\t\t\t}\n\n\t\t\tvar follows = [];\n\n\t\t\tfunction pushFollow(str) {\n\t\t\t\tfollows.push(str);\n\t\t\t}\n\n\t\t\tfunction popFollow() {\n\t\t\t\tfollows.pop();\n\t\t\t}\n\n\t\t\tfunction clearFollows() {\n\t\t\t\tvar tmp = follows;\n\t\t\t\tfollows = [];\n\t\t\t\treturn tmp;\n\t\t\t}\n\n\t\t\tfunction restoreFollows(f) {\n\t\t\t\tfollows = f;\n\t\t\t}\n\n\t\t\t/** @type {TokensObject} */\n\t\t\treturn {\n\t\t\t\tpushFollow: pushFollow,\n\t\t\t\tpopFollow: popFollow,\n\t\t\t\tclearFollow: clearFollows,\n\t\t\t\trestoreFollow: restoreFollows,\n\t\t\t\tmatchAnyToken: matchAnyToken,\n\t\t\t\tmatchAnyOpToken: matchAnyOpToken,\n\t\t\t\tmatchOpToken: matchOpToken,\n\t\t\t\trequireOpToken: requireOpToken,\n\t\t\t\tmatchTokenType: matchTokenType,\n\t\t\t\trequireTokenType: requireTokenType,\n\t\t\t\tconsumeToken: consumeToken,\n\t\t\t\tmatchToken: matchToken,\n\t\t\t\trequireToken: requireToken,\n\t\t\t\tlist: tokens,\n\t\t\t\tconsumed: consumed,\n\t\t\t\tsource: source,\n\t\t\t\thasMore: hasMore,\n\t\t\t\tcurrentToken: currentToken,\n\t\t\t\tlastMatch: lastMatch,\n\t\t\t\ttoken: token,\n\t\t\t\tconsumeUntil: consumeUntil,\n\t\t\t\tconsumeUntilWhitespace: consumeUntilWhitespace,\n\t\t\t\tlastWhitespace: lastWhitespace,\n\t\t\t\tsourceFor: sourceFor,\n\t\t\t\tlineFor: lineFor,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * @param {Token[]} tokens\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction isValidSingleQuoteStringStart(tokens) {\n\t\t\tif (tokens.length > 0) {\n\t\t\t\tvar previousToken = tokens[tokens.length - 1];\n\t\t\t\tif (\n\t\t\t\t\tpreviousToken.type === \"IDENTIFIER\" ||\n\t\t\t\t\tpreviousToken.type === \"CLASS_REF\" ||\n\t\t\t\t\tpreviousToken.type === \"ID_REF\"\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (previousToken.op && (previousToken.value === \">\" || previousToken.value === \")\")) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} string\n\t\t * @param {boolean} [template]\n\t\t * @returns {TokensObject}\n\t\t */\n\t\tfunction tokenize(string, template) {\n\t\t\tvar tokens = /** @type {Token[]}*/ [];\n\t\t\tvar source = string;\n\t\t\tvar position = 0;\n\t\t\tvar column = 0;\n\t\t\tvar line = 1;\n\t\t\tvar lastToken = \"<START>\";\n\t\t\tvar templateBraceCount = 0;\n\n\t\t\tfunction inTemplate() {\n\t\t\t\treturn template && templateBraceCount === 0;\n\t\t\t}\n\n\t\t\twhile (position < source.length) {\n\t\t\t\tif (currentChar() === \"-\" && nextChar() === \"-\") {\n\t\t\t\t\tconsumeComment();\n\t\t\t\t} else {\n\t\t\t\t\tif (isWhitespace(currentChar())) {\n\t\t\t\t\t\ttokens.push(consumeWhitespace());\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t!possiblePrecedingSymbol() &&\n\t\t\t\t\t\tcurrentChar() === \".\" &&\n\t\t\t\t\t\t(isAlpha(nextChar()) || nextChar() === \"{\")\n\t\t\t\t\t) {\n\t\t\t\t\t\ttokens.push(consumeClassReference());\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t!possiblePrecedingSymbol() &&\n\t\t\t\t\t\tcurrentChar() === \"#\" &&\n\t\t\t\t\t\t(isAlpha(nextChar()) || nextChar() === \"{\")\n\t\t\t\t\t) {\n\t\t\t\t\t\ttokens.push(consumeIdReference());\n\t\t\t\t\t} else if (currentChar() === \"[\" && nextChar() === \"@\") {\n\t\t\t\t\t\ttokens.push(consumeAttributeReference());\n\t\t\t\t\t} else if (currentChar() === \"@\") {\n\t\t\t\t\t\ttokens.push(consumeShortAttributeReference());\n\t\t\t\t\t} else if (isAlpha(currentChar()) || (!inTemplate() && isIdentifierChar(currentChar()))) {\n\t\t\t\t\t\ttokens.push(consumeIdentifier());\n\t\t\t\t\t} else if (isNumeric(currentChar())) {\n\t\t\t\t\t\ttokens.push(consumeNumber());\n\t\t\t\t\t} else if (!inTemplate() && (currentChar() === '\"' || currentChar() === \"`\")) {\n\t\t\t\t\t\ttokens.push(consumeString());\n\t\t\t\t\t} else if (!inTemplate() && currentChar() === \"'\") {\n\t\t\t\t\t\tif (isValidSingleQuoteStringStart(tokens)) {\n\t\t\t\t\t\t\ttokens.push(consumeString());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttokens.push(consumeOp());\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (OP_TABLE[currentChar()]) {\n\t\t\t\t\t\tif (lastToken === \"$\" && currentChar() === \"{\") {\n\t\t\t\t\t\t\ttemplateBraceCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (currentChar() === \"}\") {\n\t\t\t\t\t\t\ttemplateBraceCount--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttokens.push(consumeOp());\n\t\t\t\t\t} else if (inTemplate() || isReservedChar(currentChar())) {\n\t\t\t\t\t\ttokens.push(makeToken(\"RESERVED\", consumeChar()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (position < source.length) {\n\t\t\t\t\t\t\tthrow Error(\"Unknown token: \" + currentChar() + \" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn makeTokensObject(tokens, [], source);\n\n\t\t\t/**\n\t\t\t * @param {string} [type]\n\t\t\t * @param {string} [value]\n\t\t\t * @returns {Token}\n\t\t\t */\n\t\t\tfunction makeOpToken(type, value) {\n\t\t\t\tvar token = makeToken(type, value);\n\t\t\t\ttoken.op = true;\n\t\t\t\treturn token;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} [type]\n\t\t\t * @param {string} [value]\n\t\t\t * @returns {Token}\n\t\t\t */\n\t\t\tfunction makeToken(type, value) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: type,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tstart: position,\n\t\t\t\t\tend: position + 1,\n\t\t\t\t\tcolumn: column,\n\t\t\t\t\tline: line,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfunction consumeComment() {\n\t\t\t\twhile (currentChar() && !isNewline(currentChar())) {\n\t\t\t\t\tconsumeChar();\n\t\t\t\t}\n\t\t\t\tconsumeChar();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns Token\n\t\t\t */\n\t\t\tfunction consumeClassReference() {\n\t\t\t\tvar classRef = makeToken(\"CLASS_REF\");\n\t\t\t\tvar value = consumeChar();\n\t\t\t\tif (currentChar() === \"{\") {\n\t\t\t\t\tclassRef.template = true;\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t\twhile (currentChar() && currentChar() !== \"}\") {\n\t\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t\t}\n\t\t\t\t\tif (currentChar() !== \"}\") {\n\t\t\t\t\t\tthrow Error(\"Unterminated class reference\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue += consumeChar(); // consume final curly\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twhile (isValidCSSClassChar(currentChar())) {\n\t\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclassRef.value = value;\n\t\t\t\tclassRef.end = position;\n\t\t\t\treturn classRef;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns Token\n\t\t\t */\n\t\t\tfunction consumeAttributeReference() {\n\t\t\t\tvar attributeRef = makeToken(\"ATTRIBUTE_REF\");\n\t\t\t\tvar value = consumeChar();\n\t\t\t\twhile (position < source.length && currentChar() !== \"]\") {\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\tif (currentChar() === \"]\") {\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\tattributeRef.value = value;\n\t\t\t\tattributeRef.end = position;\n\t\t\t\treturn attributeRef;\n\t\t\t}\n\n\t\t\tfunction consumeShortAttributeReference() {\n\t\t\t\tvar attributeRef = makeToken(\"ATTRIBUTE_REF\");\n\t\t\t\tvar value = consumeChar();\n\t\t\t\twhile (isValidCSSIDChar(currentChar())) {\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\tattributeRef.value = value;\n\t\t\t\tattributeRef.end = position;\n\t\t\t\treturn attributeRef;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns Token\n\t\t\t */\n\t\t\tfunction consumeIdReference() {\n\t\t\t\tvar idRef = makeToken(\"ID_REF\");\n\t\t\t\tvar value = consumeChar();\n\t\t\t\tif (currentChar() === \"{\") {\n\t\t\t\t\tidRef.template = true;\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t\twhile (currentChar() && currentChar() !== \"}\") {\n\t\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t\t}\n\t\t\t\t\tif (currentChar() !== \"}\") {\n\t\t\t\t\t\tthrow Error(\"Unterminated id reference\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsumeChar(); // consume final quote\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twhile (isValidCSSIDChar(currentChar())) {\n\t\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tidRef.value = value;\n\t\t\t\tidRef.end = position;\n\t\t\t\treturn idRef;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns Token\n\t\t\t */\n\t\t\tfunction consumeIdentifier() {\n\t\t\t\tvar identifier = makeToken(\"IDENTIFIER\");\n\t\t\t\tvar value = consumeChar();\n\t\t\t\twhile (isAlpha(currentChar()) || isIdentifierChar(currentChar())) {\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\tidentifier.value = value;\n\t\t\t\tidentifier.end = position;\n\t\t\t\treturn identifier;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns Token\n\t\t\t */\n\t\t\tfunction consumeNumber() {\n\t\t\t\tvar number = makeToken(\"NUMBER\");\n\t\t\t\tvar value = consumeChar();\n\t\t\t\twhile (isNumeric(currentChar())) {\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\tif (currentChar() === \".\" && isNumeric(nextChar())) {\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\twhile (isNumeric(currentChar())) {\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\tnumber.value = value;\n\t\t\t\tnumber.end = position;\n\t\t\t\treturn number;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns Token\n\t\t\t */\n\t\t\tfunction consumeOp() {\n\t\t\t\tvar op = makeOpToken();\n\t\t\t\tvar value = consumeChar(); // consume leading char\n\t\t\t\twhile (currentChar() && OP_TABLE[value + currentChar()]) {\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\top.type = OP_TABLE[value];\n\t\t\t\top.value = value;\n\t\t\t\top.end = position;\n\t\t\t\treturn op;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns Token\n\t\t\t */\n\t\t\tfunction consumeString() {\n\t\t\t\tvar string = makeToken(\"STRING\");\n\t\t\t\tvar startChar = consumeChar(); // consume leading quote\n\t\t\t\tvar value = \"\";\n\t\t\t\twhile (currentChar() && currentChar() !== startChar) {\n\t\t\t\t\tif (currentChar() === \"\\\\\") {\n\t\t\t\t\t\tconsumeChar(); // consume escape char and move on\n\t\t\t\t\t}\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\tif (currentChar() !== startChar) {\n\t\t\t\t\tthrow Error(\"Unterminated string at \" + positionString(string));\n\t\t\t\t} else {\n\t\t\t\t\tconsumeChar(); // consume final quote\n\t\t\t\t}\n\t\t\t\tstring.value = value;\n\t\t\t\tstring.end = position;\n\t\t\t\tstring.template = startChar === \"`\";\n\t\t\t\treturn string;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns string\n\t\t\t */\n\t\t\tfunction currentChar() {\n\t\t\t\treturn source.charAt(position);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns string\n\t\t\t */\n\t\t\tfunction nextChar() {\n\t\t\t\treturn source.charAt(position + 1);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns string\n\t\t\t */\n\t\t\tfunction consumeChar() {\n\t\t\t\tlastToken = currentChar();\n\t\t\t\tposition++;\n\t\t\t\tcolumn++;\n\t\t\t\treturn lastToken;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns boolean\n\t\t\t */\n\t\t\tfunction possiblePrecedingSymbol() {\n\t\t\t\treturn (\n\t\t\t\t\tisAlpha(lastToken) ||\n\t\t\t\t\tisNumeric(lastToken) ||\n\t\t\t\t\tlastToken === \")\" ||\n\t\t\t\t\tlastToken === \"}\" ||\n\t\t\t\t\tlastToken === \"]\"\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns Token\n\t\t\t */\n\t\t\tfunction consumeWhitespace() {\n\t\t\t\tvar whitespace = makeToken(\"WHITESPACE\");\n\t\t\t\tvar value = \"\";\n\t\t\t\twhile (currentChar() && isWhitespace(currentChar())) {\n\t\t\t\t\tif (isNewline(currentChar())) {\n\t\t\t\t\t\tcolumn = 0;\n\t\t\t\t\t\tline++;\n\t\t\t\t\t}\n\t\t\t\t\tvalue += consumeChar();\n\t\t\t\t}\n\t\t\t\twhitespace.value = value;\n\t\t\t\twhitespace.end = position;\n\t\t\t\treturn whitespace;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttokenize: tokenize,\n\t\t\tmakeTokensObject: makeTokensObject,\n\t\t};\n\t})();\n\n\t//====================================================================\n\t// Parser\n\t//====================================================================\n\n\t/** @type ParserObject */\n\tvar _parser = (function () {\n\t\t/** @type {Object<string,GrammarDefinition>} */\n\t\tvar GRAMMAR = {};\n\n\t\t/** @type {Object<string,GrammarDefinition>} */\n\t\tvar COMMANDS = {};\n\n\t\t/** @type {Object<string,GrammarDefinition>} */\n\t\tvar FEATURES = {};\n\n\t\tvar LEAF_EXPRESSIONS = [];\n\t\tvar INDIRECT_EXPRESSIONS = [];\n\n\t\t/**\n\t\t * @param {*} parseElement\n\t\t * @param {*} start\n\t\t * @param {TokensObject} tokens\n\t\t */\n\t\tfunction initElt(parseElement, start, tokens) {\n\t\t\tparseElement.startToken = start;\n\t\t\tparseElement.sourceFor = tokens.sourceFor;\n\t\t\tparseElement.lineFor = tokens.lineFor;\n\t\t\tparseElement.programSource = tokens.source;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {TokensObject} tokens\n\t\t * @param {GrammarElement?} root\n\t\t * @returns GrammarElement\n\t\t */\n\t\tfunction parseElement(type, tokens, root = undefined) {\n\t\t\tvar elementDefinition = GRAMMAR[type];\n\t\t\tif (elementDefinition) {\n\t\t\t\tvar start = tokens.currentToken();\n\t\t\t\tvar parseElement = elementDefinition(_parser, _runtime, tokens, root);\n\t\t\t\tif (parseElement) {\n\t\t\t\t\tinitElt(parseElement, start, tokens);\n\t\t\t\t\tparseElement.endToken = parseElement.endToken || tokens.lastMatch();\n\t\t\t\t\tvar root = parseElement.root;\n\t\t\t\t\twhile (root != null) {\n\t\t\t\t\t\tinitElt(root, start, tokens);\n\t\t\t\t\t\troot = root.root;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn parseElement;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {TokensObject} tokens\n\t\t * @param {string} [message]\n\t\t * @param {*} [root]\n\t\t * @returns {GrammarElement}\n\t\t */\n\t\tfunction requireElement(type, tokens, message, root) {\n\t\t\tvar result = parseElement(type, tokens, root);\n\t\t\tif (!result) raiseParseError(tokens, message || \"Expected \" + type);\n\t\t\t// @ts-ignore\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * @param {string[]} types\n\t\t * @param {TokensObject} tokens\n\t\t * @returns {GrammarElement}\n\t\t */\n\t\tfunction parseAnyOf(types, tokens) {\n\t\t\tfor (var i = 0; i < types.length; i++) {\n\t\t\t\tvar type = types[i];\n\t\t\t\tvar expression = parseElement(type, tokens);\n\t\t\t\tif (expression) {\n\t\t\t\t\treturn expression;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {GrammarDefinition} definition\n\t\t */\n\t\tfunction addGrammarElement(name, definition) {\n\t\t\tGRAMMAR[name] = definition;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} keyword\n\t\t * @param {GrammarDefinition} definition\n\t\t */\n\t\tfunction addCommand(keyword, definition) {\n\t\t\tvar commandGrammarType = keyword + \"Command\";\n\t\t\tvar commandDefinitionWrapper = function (parser, runtime, tokens) {\n\t\t\t\tconst commandElement = definition(parser, runtime, tokens);\n\t\t\t\tif (commandElement) {\n\t\t\t\t\tcommandElement.type = commandGrammarType;\n\t\t\t\t\tcommandElement.execute = function (context) {\n\t\t\t\t\t\tcontext.meta.command = commandElement;\n\t\t\t\t\t\treturn runtime.unifiedExec(this, context);\n\t\t\t\t\t};\n\t\t\t\t\treturn commandElement;\n\t\t\t\t}\n\t\t\t};\n\t\t\tGRAMMAR[commandGrammarType] = commandDefinitionWrapper;\n\t\t\tCOMMANDS[keyword] = commandDefinitionWrapper;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} keyword\n\t\t * @param {GrammarDefinition} definition\n\t\t */\n\t\tfunction addFeature(keyword, definition) {\n\t\t\tvar featureGrammarType = keyword + \"Feature\";\n\n\t\t\t/** @type {GrammarDefinition} */\n\t\t\tvar featureDefinitionWrapper = function (parser, runtime, tokens) {\n\t\t\t\tvar featureElement = definition(parser, runtime, tokens);\n\t\t\t\tif (featureElement) {\n\t\t\t\t\tfeatureElement.keyword = keyword;\n\t\t\t\t\tfeatureElement.type = featureGrammarType;\n\t\t\t\t\treturn featureElement;\n\t\t\t\t}\n\t\t\t};\n\t\t\tGRAMMAR[featureGrammarType] = featureDefinitionWrapper;\n\t\t\tFEATURES[keyword] = featureDefinitionWrapper;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {GrammarDefinition} definition\n\t\t */\n\t\tfunction addLeafExpression(name, definition) {\n\t\t\tLEAF_EXPRESSIONS.push(name);\n\t\t\taddGrammarElement(name, definition);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {GrammarDefinition} definition\n\t\t */\n\t\tfunction addIndirectExpression(name, definition) {\n\t\t\tINDIRECT_EXPRESSIONS.push(name);\n\t\t\taddGrammarElement(name, definition);\n\t\t}\n\n\t\t/* ============================================================================================ */\n\t\t/* Core hyperscript Grammar Elements                                                            */\n\t\t/* ============================================================================================ */\n\t\taddGrammarElement(\"feature\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchOpToken(\"(\")) {\n\t\t\t\tvar featureElement = parser.requireElement(\"feature\", tokens);\n\t\t\t\ttokens.requireOpToken(\")\");\n\t\t\t\treturn featureElement;\n\t\t\t}\n\n\t\t\tvar featureDefinition = FEATURES[tokens.currentToken().value];\n\t\t\tif (featureDefinition) {\n\t\t\t\treturn featureDefinition(parser, runtime, tokens);\n\t\t\t}\n\t\t});\n\n\t\taddGrammarElement(\"command\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchOpToken(\"(\")) {\n\t\t\t\tconst commandElement = parser.requireElement(\"command\", tokens);\n\t\t\t\ttokens.requireOpToken(\")\");\n\t\t\t\treturn commandElement;\n\t\t\t}\n\n\t\t\tvar commandDefinition = COMMANDS[tokens.currentToken().value];\n\t\t\tlet commandElement;\n\t\t\tif (commandDefinition) {\n\t\t\t\tcommandElement = commandDefinition(parser, runtime, tokens);\n\t\t\t} else if (tokens.currentToken().type === \"IDENTIFIER\" && tokens.token(1).value === \"(\") {\n\t\t\t\tcommandElement = parser.requireElement(\"pseudoCommand\", tokens);\n\t\t\t}\n\t\t\tif (commandElement) {\n\t\t\t\treturn parser.parseElement(\"indirectStatement\", tokens, commandElement);\n\t\t\t}\n\n\t\t\treturn commandElement;\n\t\t});\n\n\t\taddGrammarElement(\"commandList\", function (parser, runtime, tokens) {\n\t\t\tvar cmd = parser.parseElement(\"command\", tokens);\n\t\t\tif (cmd) {\n\t\t\t\ttokens.matchToken(\"then\");\n\t\t\t\tconst next = parser.parseElement(\"commandList\", tokens);\n\t\t\t\tif (next) cmd.next = next;\n\t\t\t\treturn cmd;\n\t\t\t}\n\t\t});\n\n\t\taddGrammarElement(\"leaf\", function (parser, runtime, tokens) {\n\t\t\tvar result = parseAnyOf(LEAF_EXPRESSIONS, tokens);\n\t\t\t// symbol is last so it doesn't consume any constants\n\t\t\tif (result == null) {\n\t\t\t\treturn parseElement(\"symbol\", tokens);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t});\n\n\t\taddGrammarElement(\"indirectExpression\", function (parser, runtime, tokens, root) {\n\t\t\tfor (var i = 0; i < INDIRECT_EXPRESSIONS.length; i++) {\n\t\t\t\tvar indirect = INDIRECT_EXPRESSIONS[i];\n\t\t\t\troot.endToken = tokens.lastMatch();\n\t\t\t\tvar result = parser.parseElement(indirect, tokens, root);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn root;\n\t\t});\n\n\t\taddGrammarElement(\"indirectStatement\", function (parser, runtime, tokens, root) {\n\t\t\tif (tokens.matchToken(\"unless\")) {\n\t\t\t\troot.endToken = tokens.lastMatch();\n\t\t\t\tvar conditional = parser.requireElement(\"expression\", tokens);\n\t\t\t\tvar unless = {\n\t\t\t\t\ttype: \"unlessStatementModifier\",\n\t\t\t\t\targs: [conditional],\n\t\t\t\t\top: function (context, conditional) {\n\t\t\t\t\t\tif (conditional) {\n\t\t\t\t\t\t\treturn this.next;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn root;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\texecute: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedExec(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\troot.parent = unless;\n\t\t\t\treturn unless;\n\t\t\t}\n\t\t\treturn root;\n\t\t});\n\n\t\taddGrammarElement(\"primaryExpression\", function (parser, runtime, tokens) {\n\t\t\tvar leaf = parser.parseElement(\"leaf\", tokens);\n\t\t\tif (leaf) {\n\t\t\t\treturn parser.parseElement(\"indirectExpression\", tokens, leaf);\n\t\t\t}\n\t\t\tparser.raiseParseError(tokens, \"Unexpected value: \" + tokens.currentToken().value);\n\t\t});\n\n\t\t/* ============================================================================================ */\n\t\t/* END Core hyperscript Grammar Elements                                                        */\n\n\t\t/* ============================================================================================ */\n\n\t\t/**\n\t\t *\n\t\t * @param {TokensObject} tokens\n\t\t * @returns string\n\t\t */\n\t\tfunction createParserContext(tokens) {\n\t\t\tvar currentToken = tokens.currentToken();\n\t\t\tvar source = tokens.source;\n\t\t\tvar lines = source.split(\"\\n\");\n\t\t\tvar line = currentToken && currentToken.line ? currentToken.line - 1 : lines.length - 1;\n\t\t\tvar contextLine = lines[line];\n\t\t\tvar offset = currentToken && currentToken.line ? currentToken.column : contextLine.length - 1;\n\t\t\treturn contextLine + \"\\n\" + \" \".repeat(offset) + \"^^\\n\\n\";\n\t\t}\n\n\t\t/**\n\t\t * @param {TokensObject} tokens\n\t\t * @param {string} [message]\n\t\t */\n\t\tfunction raiseParseError(tokens, message) {\n\t\t\tmessage =\n\t\t\t\t(message || \"Unexpected Token : \" + tokens.currentToken().value) + \"\\n\\n\" + createParserContext(tokens);\n\t\t\tvar error = new Error(message);\n\t\t\terror[\"tokens\"] = tokens;\n\t\t\tthrow error;\n\t\t}\n\n\t\t/**\n\t\t * @param {TokensObject} tokens\n\t\t * @returns {GrammarElement}\n\t\t */\n\t\tfunction parseHyperScript(tokens) {\n\t\t\tvar result = parseElement(\"hyperscript\", tokens);\n\t\t\tif (tokens.hasMore()) raiseParseError(tokens);\n\t\t\tif (result) return result;\n\t\t}\n\n\t\t/**\n\t\t * @param {GrammarElement} elt\n\t\t * @param {GrammarElement} parent\n\t\t */\n\t\tfunction setParent(elt, parent) {\n\t\t\tif (elt) {\n\t\t\t\telt.parent = parent;\n\t\t\t\tsetParent(elt.next, parent);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {Token} token\n\t\t * @returns {GrammarDefinition}\n\t\t */\n\t\tfunction commandStart(token) {\n\t\t\treturn COMMANDS[token.value];\n\t\t}\n\n\t\t/**\n\t\t * @param {Token} token\n\t\t * @returns {GrammarDefinition}\n\t\t */\n\t\tfunction featureStart(token) {\n\t\t\treturn FEATURES[token.value];\n\t\t}\n\n\t\t/**\n\t\t * @param {Token} token\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction commandBoundary(token) {\n\t\t\tif (\n\t\t\t\ttoken.value == \"end\" ||\n\t\t\t\ttoken.value == \"then\" ||\n\t\t\t\ttoken.value == \"else\" ||\n\t\t\t\ttoken.value == \")\" ||\n\t\t\t\tcommandStart(token) ||\n\t\t\t\tfeatureStart(token) ||\n\t\t\t\ttoken.type == \"EOF\"\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * @param {TokensObject} tokens\n\t\t * @returns {(string | GrammarElement)[]}\n\t\t */\n\t\tfunction parseStringTemplate(tokens) {\n\t\t\t/** @type {(string | GrammarElement)[]} */\n\t\t\tvar returnArr = [\"\"];\n\t\t\tdo {\n\t\t\t\treturnArr.push(tokens.lastWhitespace());\n\t\t\t\tif (tokens.currentToken().value === \"$\") {\n\t\t\t\t\ttokens.consumeToken();\n\t\t\t\t\tvar startingBrace = tokens.matchOpToken(\"{\");\n\t\t\t\t\treturnArr.push(requireElement(\"expression\", tokens));\n\t\t\t\t\tif (startingBrace) {\n\t\t\t\t\t\ttokens.requireOpToken(\"}\");\n\t\t\t\t\t}\n\t\t\t\t\treturnArr.push(\"\");\n\t\t\t\t} else if (tokens.currentToken().value === \"\\\\\") {\n\t\t\t\t\ttokens.consumeToken(); // skip next\n\t\t\t\t\ttokens.consumeToken();\n\t\t\t\t} else {\n\t\t\t\t\tvar token = tokens.consumeToken();\n\t\t\t\t\treturnArr[returnArr.length - 1] += token ? token.value : \"\";\n\t\t\t\t}\n\t\t\t} while (tokens.hasMore());\n\t\t\treturnArr.push(tokens.lastWhitespace());\n\t\t\treturn returnArr;\n\t\t}\n\n\t\t// parser API\n\t\treturn {\n\t\t\tsetParent: setParent,\n\t\t\trequireElement: requireElement,\n\t\t\tparseElement: parseElement,\n\t\t\tfeatureStart: featureStart,\n\t\t\tcommandStart: commandStart,\n\t\t\tcommandBoundary: commandBoundary,\n\t\t\tparseAnyOf: parseAnyOf,\n\t\t\tparseHyperScript: parseHyperScript,\n\t\t\traiseParseError: raiseParseError,\n\t\t\taddGrammarElement: addGrammarElement,\n\t\t\taddCommand: addCommand,\n\t\t\taddFeature: addFeature,\n\t\t\taddLeafExpression: addLeafExpression,\n\t\t\taddIndirectExpression: addIndirectExpression,\n\t\t\tparseStringTemplate: parseStringTemplate,\n\t\t};\n\t})();\n\n\t//====================================================================\n\t// Runtime\n\t//====================================================================\n\n\tvar CONVERSIONS = {\n\t\tdynamicResolvers: /** @type DynamicConversionFunction[] */ [],\n\t\tString: function (val) {\n\t\t\tif (val.toString) {\n\t\t\t\treturn val.toString();\n\t\t\t} else {\n\t\t\t\treturn \"\" + val;\n\t\t\t}\n\t\t},\n\t\tInt: function (val) {\n\t\t\treturn parseInt(val);\n\t\t},\n\t\tFloat: function (val) {\n\t\t\treturn parseFloat(val);\n\t\t},\n\t\tNumber: function (val) {\n\t\t\tconsole.log(val);\n\t\t\treturn Number(val);\n\t\t},\n\t\tDate: function (val) {\n\t\t\treturn new Date(val);\n\t\t},\n\t\tArray: function (val) {\n\t\t\treturn Array.from(val);\n\t\t},\n\t\tJSON: function (val) {\n\t\t\treturn JSON.stringify(val);\n\t\t},\n\t\tObject: function (val) {\n\t\t\tif (val instanceof String) {\n\t\t\t\tval = val.toString();\n\t\t\t}\n\t\t\tif (typeof val === \"string\") {\n\t\t\t\treturn JSON.parse(val);\n\t\t\t} else {\n\t\t\t\treturn mergeObjects({}, val);\n\t\t\t}\n\t\t},\n\t};\n\n\t/********************************************\n\t * RUNTIME OBJECT\n\t ********************************************/\n\n\t/** @type {RuntimeObject} */\n\tvar _runtime = (function () {\n\t\t/**\n\t\t * @param {HTMLElement} elt\n\t\t * @param {string} selector\n\t\t * @returns boolean\n\t\t */\n\t\tfunction matchesSelector(elt, selector) {\n\t\t\t// noinspection JSUnresolvedVariable\n\t\t\tvar matchesFunction =\n\t\t\t\t// @ts-ignore\n\t\t\t\telt.matches || elt.matchesSelector || elt.msMatchesSelector || elt.mozMatchesSelector || elt.webkitMatchesSelector || elt.oMatchesSelector;\n\t\t\treturn matchesFunction && matchesFunction.call(elt, selector);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} eventName\n\t\t * @param {Object} [detail]\n\t\t * @returns {Event}\n\t\t */\n\t\tfunction makeEvent(eventName, detail) {\n\t\t\tvar evt;\n\t\t\tif (globalScope.Event && typeof globalScope.Event === \"function\") {\n\t\t\t\tevt = new Event(eventName, {\n\t\t\t\t\tbubbles: true,\n\t\t\t\t\tcancelable: true,\n\t\t\t\t});\n\t\t\t\tevt['detail'] = detail;\n\t\t\t} else {\n\t\t\t\tevt = document.createEvent(\"CustomEvent\");\n\t\t\t\tevt.initCustomEvent(eventName, true, true, detail);\n\t\t\t}\n\t\t\treturn evt;\n\t\t}\n\n\t\t/**\n\t\t * @param {Element} elt\n\t\t * @param {string} eventName\n\t\t * @param {Object} [detail]\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction triggerEvent(elt, eventName, detail) {\n\t\t\tdetail = detail || {};\n\t\t\tdetail[\"sentBy\"] = elt;\n\t\t\tvar event = makeEvent(eventName, detail);\n\t\t\tvar eventResult = elt.dispatchEvent(event);\n\t\t\treturn eventResult;\n\t\t}\n\n\t\t/**\n\t\t * isArrayLike returns `true` if the provided value is an array or\n\t\t * a NodeList (which is close enough to being an array for our purposes).\n\t\t *\n\t\t * @param {any} value\n\t\t * @returns {value is Array | NodeList}\n\t\t */\n\t\tfunction isArrayLike(value) {\n\t\t\treturn Array.isArray(value) || (typeof NodeList !== 'undefined' && value instanceof NodeList);\n\t\t}\n\n\t\t/**\n\t\t * isIterable returns `true` if the provided value supports the\n\t\t * iterator protocol.\n\t\t *\n\t\t * @param {any} value\n\t\t * @returns {value is Iterable}\n\t\t */\n\t\tfunction isIterable(value) {\n\t\t\treturn typeof value === 'object'\n\t\t\t\t&& Symbol.iterator in value\n\t\t\t\t&& typeof value[Symbol.iterator] === 'function';\n\t\t}\n\n\t\t/**\n\t\t * shouldAutoIterate returns `true` if the provided value\n\t\t * should be implicitly iterated over when accessing properties,\n\t\t * and as the target of some commands.\n\t\t *\n\t\t * Currently, this is when the value is an {ElementCollection}\n\t\t * or {isArrayLike} returns true.\n\t\t *\n\t\t * @param {any} value\n\t\t * @returns {value is any[] | NodeList | ElementCollection}\n\t\t */\n\t\tfunction shouldAutoIterate(value) {\n\t\t\treturn value instanceof ElementCollection || isArrayLike(value);\n\t\t}\n\n\t\t/**\n\t\t * forEach executes the provided `func` on every item in the `value` array.\n\t\t * if `value` is a single item (and not an array) then `func` is simply called\n\t\t * once.  If `value` is null, then no further actions are taken.\n\t\t *\n\t\t * @template T\n\t\t * @param {T | Iterable<T>} value\n\t\t * @param {(item: T) => void} func\n\t\t */\n\t\tfunction forEach(value, func) {\n\t\t\tif (value == null) {\n\t\t\t\t// do nothing\n\t\t\t} else if (isIterable(value)) {\n\t\t\t\tfor (const nth of value) {\n\t\t\t\t\tfunc(nth);\n\t\t\t\t}\n\t\t\t} else if (isArrayLike(value)) {\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tfunc(value[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfunc(value);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * implicitLoop executes the provided `func` on:\n\t\t * - every item of {value}, if {value} should be auto-iterated\n\t\t *   (see {shouldAutoIterate})\n\t\t * - {value} otherwise\n\t\t *\n\t\t * @template T\n\t\t * @param {NodeList | T | T[]} value\n\t\t * @param {(item:Node | T) => void} func\n\t\t */\n\t\tfunction implicitLoop(value, func) {\n\t\t\tif (shouldAutoIterate(value)) {\n\t\t\t\tfor (const x of value) func(x);\n\t\t\t} else {\n\t\t\t\tfunc(value);\n\t\t\t}\n\t\t}\n\n\t\tvar ARRAY_SENTINEL = { array_sentinel: true };\n\n\t\tfunction linearize(args) {\n\t\t\tvar arr = [];\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tvar arg = args[i];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tarr.push(ARRAY_SENTINEL);\n\t\t\t\t\tfor (var j = 0; j < arg.length; j++) {\n\t\t\t\t\t\tarr.push(arg[j]);\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(ARRAY_SENTINEL);\n\t\t\t\t} else {\n\t\t\t\t\tarr.push(arg);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tfunction delinearize(values) {\n\t\t\tvar arr = [];\n\t\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\t\tvar value = values[i];\n\t\t\t\tif (value === ARRAY_SENTINEL) {\n\t\t\t\t\tvalue = values[++i];\n\t\t\t\t\tvar valueArray = [];\n\t\t\t\t\tarr.push(valueArray);\n\t\t\t\t\twhile (value !== ARRAY_SENTINEL) {\n\t\t\t\t\t\tvalueArray.push(value);\n\t\t\t\t\t\tvalue = values[++i];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tarr.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tfunction unwrapAsyncs(values) {\n\t\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\t\tvar value = values[i];\n\t\t\t\tif (value.asyncWrapper) {\n\t\t\t\t\tvalues[i] = value.value;\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var j = 0; j < value.length; j++) {\n\t\t\t\t\t\tvar valueElement = value[j];\n\t\t\t\t\t\tif (valueElement.asyncWrapper) {\n\t\t\t\t\t\t\tvalue[j] = valueElement.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar HALT = {};\n\n\t\t/**\n\t\t * @param {GrammarElement} command\n\t\t * @param {Context} ctx\n\t\t */\n\t\tfunction unifiedExec(command, ctx) {\n\t\t\twhile (true) {\n\t\t\t\ttry {\n\t\t\t\t\tvar next = unifiedEval(command, ctx);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_runtime.registerHyperTrace(ctx, e);\n\t\t\t\t\tif (ctx.meta.errorHandler && !ctx.meta.handlingError) {\n\t\t\t\t\t\tctx.meta.handlingError = true;\n\t\t\t\t\t\tctx[ctx.meta.errorSymmbol] = e;\n\t\t\t\t\t\tcommand = ctx.meta.errorHandler;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (ctx.meta.reject) {\n\t\t\t\t\t\tctx.meta.reject(e);\n\t\t\t\t\t\tnext = HALT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (next == null) {\n\t\t\t\t\tconsole.error(command, \" did not return a next element to execute! context: \", ctx);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next.then) {\n\t\t\t\t\tnext.then(function (resolvedNext) {\n\t\t\t\t\t\tunifiedExec(resolvedNext, ctx);\n\t\t\t\t\t}).catch(function (reason) {\n\t\t\t\t\t\t_runtime.registerHyperTrace(ctx, reason);\n\t\t\t\t\t\tif (ctx.meta.errorHandler && !ctx.meta.handlingError) {\n\t\t\t\t\t\t\tctx.meta.handlingError = true;\n\t\t\t\t\t\t\tctx[ctx.meta.errorSymmbol] = reason;\n\t\t\t\t\t\t\tunifiedExec(ctx.meta.errorHandler, ctx);\n\t\t\t\t\t\t} else if (ctx.meta.reject) {\n\t\t\t\t\t\t\tctx.meta.reject(reason);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow reason;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next === HALT) {\n\t\t\t\t\t// done\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tcommand = next; // move to the next command\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {*} parseElement\n\t\t* @param {Context} ctx\n\t\t* @returns {*}\n\t\t*/\n\t\tfunction unifiedEval(parseElement, ctx) {\n\t\t\t/** @type any[] */\n\t\t\tvar args = [ctx];\n\t\t\tvar async = false;\n\t\t\tvar wrappedAsyncs = false;\n\n\t\t\tif (parseElement.args) {\n\t\t\t\tfor (var i = 0; i < parseElement.args.length; i++) {\n\t\t\t\t\tvar argument = parseElement.args[i];\n\t\t\t\t\tif (argument == null) {\n\t\t\t\t\t\targs.push(null);\n\t\t\t\t\t} else if (Array.isArray(argument)) {\n\t\t\t\t\t\tvar arr = [];\n\t\t\t\t\t\tfor (var j = 0; j < argument.length; j++) {\n\t\t\t\t\t\t\tvar element = argument[j];\n\t\t\t\t\t\t\tvar value = element ? element.evaluate(ctx) : null; // OK\n\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\tif (value.then) {\n\t\t\t\t\t\t\t\t\tasync = true;\n\t\t\t\t\t\t\t\t} else if (value.asyncWrapper) {\n\t\t\t\t\t\t\t\t\twrappedAsyncs = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tarr.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\targs.push(arr);\n\t\t\t\t\t} else if (argument.evaluate) {\n\t\t\t\t\t\tvar value = argument.evaluate(ctx); // OK\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tif (value.then) {\n\t\t\t\t\t\t\t\tasync = true;\n\t\t\t\t\t\t\t} else if (value.asyncWrapper) {\n\t\t\t\t\t\t\t\twrappedAsyncs = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\targs.push(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(argument);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (async) {\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tvar linearized = linearize(args);\n\t\t\t\t\tPromise.all(linearized)\n\t\t\t\t\t\t.then(function (values) {\n\t\t\t\t\t\t\tvalues = delinearize(values);\n\t\t\t\t\t\t\tif (wrappedAsyncs) {\n\t\t\t\t\t\t\t\tunwrapAsyncs(values);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tvar apply = parseElement.op.apply(parseElement, values);\n\t\t\t\t\t\t\t\tresolve(apply);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\treject(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(function (reason) {\n\t\t\t\t\t\t\tif (ctx.meta.errorHandler && !ctx.meta.handlingError) {\n\t\t\t\t\t\t\t\tctx.meta.handlingError = true;\n\t\t\t\t\t\t\t\tctx[ctx.meta.errorSymmbol] = reason;\n\t\t\t\t\t\t\t\tunifiedExec(ctx.meta.errorHandler, ctx);\n\t\t\t\t\t\t\t} else if (ctx.meta.reject) {\n\t\t\t\t\t\t\t\tctx.meta.reject(reason);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// TODO: no meta context to reject with, trigger event?\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (wrappedAsyncs) {\n\t\t\t\t\tunwrapAsyncs(args);\n\t\t\t\t}\n\t\t\t\treturn parseElement.op.apply(parseElement, args);\n\t\t\t}\n\t\t}\n\n\t\tlet _scriptAttrs = null;\n\n\t\t/**\n\t\t* getAttributes returns the attribute name(s) to use when\n\t\t* locating hyperscript scripts in a DOM element.  If no value\n\t\t* has been configured, it defaults to _hyperscript.config.attributes\n\t\t* @returns string[]\n\t\t*/\n\t\tfunction getScriptAttributes() {\n\t\t\tif (_scriptAttrs == null) {\n\t\t\t\t_scriptAttrs = _hyperscript.config.attributes.replace(/ /g, \"\").split(\",\");\n\t\t\t}\n\t\t\treturn _scriptAttrs;\n\t\t}\n\n\t\t/**\n\t\t* @param {Element} elt\n\t\t* @returns {string | null}\n\t\t*/\n\t\tfunction getScript(elt) {\n\t\t\tfor (var i = 0; i < getScriptAttributes().length; i++) {\n\t\t\t\tvar scriptAttribute = getScriptAttributes()[i];\n\t\t\t\tif (elt.hasAttribute && elt.hasAttribute(scriptAttribute)) {\n\t\t\t\t\treturn elt.getAttribute(scriptAttribute);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (elt instanceof HTMLScriptElement && elt.type === \"text/hyperscript\") {\n\t\t\t\treturn elt.innerText;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tvar hyperscriptFeaturesMap = new WeakMap\n\n\t\t/**\n\t\t* @param {*} elt\n\t\t* @returns {Object}\n\t\t*/\n\t\tfunction getHyperscriptFeatures(elt) {\n\t\t\tvar hyperscriptFeatures = hyperscriptFeaturesMap.get(elt);\n\t\t\tif (typeof hyperscriptFeatures === 'undefined') {\n\t\t\t\thyperscriptFeaturesMap.set(elt, hyperscriptFeatures = {});\n\t\t\t}\n\t\t\treturn hyperscriptFeatures;\n\t\t}\n\n\t\t/**\n\t\t* @param {Object} owner\n\t\t* @param {Context} ctx\n\t\t*/\n\t\tfunction addFeatures(owner, ctx) {\n\t\t\tif (owner) {\n\t\t\t\tmergeObjects(ctx, getHyperscriptFeatures(owner));\n\t\t\t\taddFeatures(owner.parentElement, ctx);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {*} owner\n\t\t* @param {*} feature\n\t\t* @param {*} hyperscriptTarget\n\t\t* @param {*} event\n\t\t* @returns {Context}\n\t\t*/\n\t\tfunction makeContext(owner, feature, hyperscriptTarget, event) {\n\t\t\t/** @type {Context} */\n\t\t\tvar ctx = {\n\t\t\t\tmeta: {\n\t\t\t\t\tparser: _parser,\n\t\t\t\t\tlexer: _lexer,\n\t\t\t\t\truntime: _runtime,\n\t\t\t\t\towner: owner,\n\t\t\t\t\tfeature: feature,\n\t\t\t\t\titerators: {},\n\t\t\t\t},\n\t\t\t\tme: hyperscriptTarget,\n\t\t\t\tevent: event,\n\t\t\t\ttarget: event ? event.target : null,\n\t\t\t\tdetail: event ? event.detail : null,\n\t\t\t\tbody: \"document\" in globalScope ? document.body : null,\n\t\t\t};\n\t\t\tctx.meta.ctx = ctx;\n\t\t\taddFeatures(owner, ctx);\n\t\t\treturn ctx;\n\t\t}\n\n\t\t/**\n\t\t* @returns string\n\t\t*/\n\t\tfunction getScriptSelector() {\n\t\t\treturn getScriptAttributes()\n\t\t\t\t.map(function (attribute) {\n\t\t\t\t\treturn \"[\" + attribute + \"]\";\n\t\t\t\t})\n\t\t\t\t.join(\", \");\n\t\t}\n\n\t\t/**\n\t\t* @param {any} value\n\t\t* @param {string} type\n\t\t* @returns {any}\n\t\t*/\n\t\tfunction convertValue(value, type) {\n\t\t\tvar dynamicResolvers = CONVERSIONS.dynamicResolvers;\n\t\t\tfor (var i = 0; i < dynamicResolvers.length; i++) {\n\t\t\t\tvar dynamicResolver = dynamicResolvers[i];\n\t\t\t\tvar converted = dynamicResolver(type, value);\n\t\t\t\tif (converted !== undefined) {\n\t\t\t\t\treturn converted;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar converter = CONVERSIONS[type];\n\t\t\tif (converter) {\n\t\t\t\treturn converter(value);\n\t\t\t}\n\n\t\t\tthrow \"Unknown conversion : \" + type;\n\t\t}\n\n\t\t// TODO: There do not seem to be any references to this function.\n\t\t// Is it still in use, or can it be removed?\n\t\tfunction isType(o, type) {\n\t\t\treturn Object.prototype.toString.call(o) === \"[object \" + type + \"]\";\n\t\t}\n\n\t\t/**\n\t\t* @param {string} src\n\t\t* @returns {GrammarElement}\n\t\t*/\n\t\tfunction parse(src) {\n\t\t\tvar tokens = _lexer.tokenize(src);\n\t\t\tif (_parser.commandStart(tokens.currentToken())) {\n\t\t\t\tvar commandList = _parser.requireElement(\"commandList\", tokens);\n\t\t\t\tvar last = commandList;\n\t\t\t\twhile (last.next) {\n\t\t\t\t\tlast = last.next;\n\t\t\t\t}\n\t\t\t\tlast.next = {\n\t\t\t\t\top: function () {\n\t\t\t\t\t\treturn HALT;\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn commandList;\n\t\t\t} else if (_parser.featureStart(tokens.currentToken())) {\n\t\t\t\tvar hyperscript = _parser.requireElement(\"hyperscript\", tokens);\n\t\t\t\treturn hyperscript;\n\t\t\t} else {\n\t\t\t\tvar expression = _parser.requireElement(\"expression\", tokens);\n\t\t\t\treturn expression;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {string} src\n\t\t* @param {Context} [ctx]\n\t\t* @param {Object} [args]\n\t\t* @returns {any}\n\t\t*/\n\t\tfunction evaluate(src, ctx, args) {\n\t\t\tclass HyperscriptModule extends EventTarget {\n\t\t\t\tconstructor(mod) {\n\t\t\t\t\tsuper();\n\t\t\t\t\tthis.module = mod;\n\t\t\t\t}\n\t\t\t\ttoString() {\n\t\t\t\t\treturn this.module.id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar body = 'document' in globalScope\n\t\t\t\t? globalScope.document.body \n\t\t\t\t: new HyperscriptModule(args && args.module);\n\t\t\tctx = mergeObjects(makeContext(body, null, body, null), ctx || {});\n\t\t\tvar element = parse(src);\n\t\t\tif (element.execute) {\n\t\t\t\telement.execute(ctx);\n\t\t\t\treturn ctx.result;\n\t\t\t} else if (element.apply) {\n\t\t\t\telement.apply(body, body, args);\n\t\t\t\treturn getHyperscriptFeatures(body);\n\t\t\t} else {\n\t\t\t\treturn element.evaluate(ctx);\n\t\t\t}\n\n\t\t\tfunction makeModule() {\n\t\t\t\treturn {}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {HTMLElement} elt\n\t\t*/\n\t\tfunction processNode(elt) {\n\t\t\tvar selector = _runtime.getScriptSelector();\n\t\t\tif (matchesSelector(elt, selector)) {\n\t\t\t\tinitElement(elt, elt);\n\t\t\t}\n\t\t\tif (elt instanceof HTMLScriptElement && elt.type === \"text/hyperscript\") {\n\t\t\t\tinitElement(elt, document.body);\n\t\t\t}\n\t\t\tif (elt.querySelectorAll) {\n\t\t\t\tforEach(elt.querySelectorAll(selector + \", [type='text/hyperscript']\"), function (elt) {\n\t\t\t\t\tinitElement(elt, elt instanceof HTMLScriptElement && elt.type === \"text/hyperscript\" ? document.body : elt);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {Element} elt\n\t\t* @param {Element} [target]\n\t\t*/\n\t\tfunction initElement(elt, target) {\n\t\t\tif (elt.closest && elt.closest(_hyperscript.config.disableSelector)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar internalData = getInternalData(elt);\n\t\t\tif (!internalData.initialized) {\n\t\t\t\tvar src = getScript(elt);\n\t\t\t\tif (src) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tinternalData.initialized = true;\n\t\t\t\t\t\tinternalData.script = src;\n\t\t\t\t\t\tvar tokens = _lexer.tokenize(src);\n\t\t\t\t\t\tvar hyperScript = _parser.parseHyperScript(tokens);\n\t\t\t\t\t\tif (!hyperScript) return;\n\t\t\t\t\t\thyperScript.apply(target || elt, elt);\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\ttriggerEvent(target || elt, \"load\", {\n\t\t\t\t\t\t\t\thyperscript: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, 1);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t_runtime.triggerEvent(elt, \"exception\", {\n\t\t\t\t\t\t\terror: e,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\"hyperscript errors were found on the following element:\",\n\t\t\t\t\t\t\telt,\n\t\t\t\t\t\t\t\"\\n\\n\",\n\t\t\t\t\t\t\te.message,\n\t\t\t\t\t\t\te.stack\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar internalDataMap = new WeakMap\n\n\t\t/**\n\t\t* @param {Element} elt\n\t\t* @returns {Object}\n\t\t*/\n\t\tfunction getInternalData(elt) {\n\t\t\tvar internalData = internalDataMap.get(elt);\n\t\t\tif (typeof internalData === 'undefined') {\n\t\t\t\tinternalDataMap.set(elt, internalData = {});\n\t\t\t}\n\t\t\treturn internalData;\n\t\t}\n\n\t\t/**\n\t\t* @param {any} value\n\t\t* @param {string} typeString\n\t\t* @param {boolean} [nullOk]\n\t\t* @returns {boolean}\n\t\t*/\n\t\tfunction typeCheck(value, typeString, nullOk) {\n\t\t\tif (value == null && nullOk) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar typeName = Object.prototype.toString.call(value).slice(8, -1);\n\t\t\treturn typeName === typeString;\n\t\t}\n\n\t\tfunction getElementScope(context) {\n\t\t\tvar elt = context.meta && context.meta.owner;\n\t\t\tif (elt) {\n\t\t\t\tvar internalData = getInternalData(elt);\n\t\t\t\tvar scopeName = \"elementScope\";\n\t\t\t\tif (context.meta.feature && context.meta.feature.behavior) {\n\t\t\t\t\tscopeName = context.meta.feature.behavior + \"Scope\";\n\t\t\t\t}\n\t\t\t\tvar elementScope = getOrInitObject(internalData, scopeName);\n\t\t\t\treturn elementScope;\n\t\t\t} else {\n\t\t\t\treturn {}; // no element, return empty scope\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {string} str\n\t\t* @param {Context} context\n\t\t* @returns {any}\n\t\t*/\n\t\tfunction resolveSymbol(str, context, type) {\n\t\t\tif (str === \"me\" || str === \"my\" || str === \"I\") {\n\t\t\t\treturn context[\"me\"];\n\t\t\t}\n\t\t\tif (str === \"it\" || str === \"its\") {\n\t\t\t\treturn context[\"result\"];\n\t\t\t}\n\t\t\tif (str === \"you\" || str === \"your\" || str === \"yourself\") {\n\t\t\t\treturn context[\"beingTold\"];\n\t\t\t} else {\n\t\t\t\tif (type === \"global\") {\n\t\t\t\t\treturn globalScope[str];\n\t\t\t\t} else if (type === \"element\") {\n\t\t\t\t\tvar elementScope = getElementScope(context);\n\t\t\t\t\treturn elementScope[str];\n\t\t\t\t} else if (type === \"local\") {\n\t\t\t\t\treturn context[str];\n\t\t\t\t} else {\n\t\t\t\t\t// meta scope (used for event conditionals)\n\t\t\t\t\tif (context.meta && context.meta.context) {\n\t\t\t\t\t\tvar fromMetaContext = context.meta.context[str];\n\t\t\t\t\t\tif (typeof fromMetaContext !== \"undefined\") {\n\t\t\t\t\t\t\treturn fromMetaContext;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// local scope\n\t\t\t\t\tvar fromContext = context[str];\n\t\t\t\t\tif (typeof fromContext !== \"undefined\") {\n\t\t\t\t\t\treturn fromContext;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// element scope\n\t\t\t\t\t\tvar elementScope = getElementScope(context);\n\t\t\t\t\t\tfromContext = elementScope[str];\n\t\t\t\t\t\tif (typeof fromContext !== \"undefined\") {\n\t\t\t\t\t\t\treturn fromContext;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// global scope\n\t\t\t\t\t\t\treturn globalScope[str];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction setSymbol(str, context, type, value) {\n\t\t\tif (type === \"global\") {\n\t\t\t\tglobalScope[str] = value;\n\t\t\t} else if (type === \"element\") {\n\t\t\t\tvar elementScope = getElementScope(context);\n\t\t\t\telementScope[str] = value;\n\t\t\t} else if (type === \"local\") {\n\t\t\t\tcontext[str] = value;\n\t\t\t} else {\n\t\t\t\t// local scope\n\t\t\t\tvar fromContext = context[str];\n\t\t\t\tif (typeof fromContext !== \"undefined\") {\n\t\t\t\t\tcontext[str] = value;\n\t\t\t\t} else {\n\t\t\t\t\t// element scope\n\t\t\t\t\tvar elementScope = getElementScope(context);\n\t\t\t\t\tfromContext = elementScope[str];\n\t\t\t\t\tif (typeof fromContext !== \"undefined\") {\n\t\t\t\t\t\telementScope[str] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// global scope\n\t\t\t\t\t\tfromContext = globalScope[str];\n\t\t\t\t\t\tif (typeof fromContext !== \"undefined\") {\n\t\t\t\t\t\t\tglobalScope[str] = value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext[str] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {GrammarElement} command\n\t\t* @param {Context} context\n\t\t* @returns {undefined | GrammarElement}\n\t\t*/\n\t\tfunction findNext(command, context) {\n\t\t\tif (command) {\n\t\t\t\tif (command.resolveNext) {\n\t\t\t\t\treturn command.resolveNext(context);\n\t\t\t\t} else if (command.next) {\n\t\t\t\t\treturn command.next;\n\t\t\t\t} else {\n\t\t\t\t\treturn findNext(command.parent, context);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {Object<string,any>} root\n\t\t* @param {string} property\n\t\t* @param {boolean} attribute\n\t\t* @returns {any}\n\t\t*/\n\t\tfunction resolveProperty(root, property, attribute) {\n\t\t\tif (root != null) {\n\t\t\t\tvar val = attribute && root.getAttribute ? root.getAttribute(property) : root[property];\n\t\t\t\tif (typeof val !== \"undefined\") {\n\t\t\t\t\treturn val;\n\t\t\t\t}\n\n\t\t\t\tif (shouldAutoIterate(root)) {\n\t\t\t\t\t// flat map\n\t\t\t\t\tvar result = [];\n\t\t\t\t\tfor (var component of root) {\n\t\t\t\t\t\tvar componentValue = attribute ? component.getAttribute(property) : component[property];\n\t\t\t\t\t\tif (componentValue) {\n\t\t\t\t\t\t\tresult.push(componentValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {Element} elt\n\t\t* @param {string[]} nameSpace\n\t\t* @param {string} name\n\t\t* @param {any} value\n\t\t*/\n\t\tfunction assignToNamespace(elt, nameSpace, name, value) {\n\t\t\tlet root\n\t\t\tif (typeof document !== \"undefined\" && elt === document.body) {\n\t\t\t\troot = globalScope;\n\t\t\t} else {\n\t\t\t\troot = getHyperscriptFeatures(elt);\n\t\t\t}\n\t\t\twhile (nameSpace.length > 0) {\n\t\t\t\tvar propertyName = nameSpace.shift();\n\t\t\t\tvar newRoot = root[propertyName];\n\t\t\t\tif (newRoot == null) {\n\t\t\t\t\tnewRoot = {};\n\t\t\t\t\troot[propertyName] = newRoot;\n\t\t\t\t}\n\t\t\t\troot = newRoot;\n\t\t\t}\n\n\t\t\troot[name] = value;\n\t\t}\n\n\t\tfunction getHyperTrace(ctx, thrown) {\n\t\t\tvar trace = [];\n\t\t\tvar root = ctx;\n\t\t\twhile (root.meta.caller) {\n\t\t\t\troot = root.meta.caller;\n\t\t\t}\n\t\t\tif (root.meta.traceMap) {\n\t\t\t\treturn root.meta.traceMap.get(thrown, trace);\n\t\t\t}\n\t\t}\n\n\t\tfunction registerHyperTrace(ctx, thrown) {\n\t\t\tvar trace = [];\n\t\t\tvar root = null;\n\t\t\twhile (ctx != null) {\n\t\t\t\ttrace.push(ctx);\n\t\t\t\troot = ctx;\n\t\t\t\tctx = ctx.meta.caller;\n\t\t\t}\n\t\t\tif (root.meta.traceMap == null) {\n\t\t\t\troot.meta.traceMap = new Map(); // TODO - WeakMap?\n\t\t\t}\n\t\t\tif (!root.meta.traceMap.get(thrown)) {\n\t\t\t\tvar traceEntry = {\n\t\t\t\t\ttrace: trace,\n\t\t\t\t\tprint: function (logger) {\n\t\t\t\t\t\tlogger = logger || console.error;\n\t\t\t\t\t\tlogger(\"hypertrace /// \");\n\t\t\t\t\t\tvar maxLen = 0;\n\t\t\t\t\t\tfor (var i = 0; i < trace.length; i++) {\n\t\t\t\t\t\t\tmaxLen = Math.max(maxLen, trace[i].meta.feature.displayName.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (var i = 0; i < trace.length; i++) {\n\t\t\t\t\t\t\tvar traceElt = trace[i];\n\t\t\t\t\t\t\tlogger(\n\t\t\t\t\t\t\t\t\"  ->\",\n\t\t\t\t\t\t\t\ttraceElt.meta.feature.displayName.padEnd(maxLen + 2),\n\t\t\t\t\t\t\t\t\"-\",\n\t\t\t\t\t\t\t\ttraceElt.meta.owner\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\troot.meta.traceMap.set(thrown, traceEntry);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {string} str\n\t\t* @returns {string}\n\t\t*/\n\t\tfunction escapeSelector(str) {\n\t\t\treturn str.replace(/:/g, function (str) {\n\t\t\t\treturn \"\\\\\" + str;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t* @param {any} value\n\t\t* @param {*} elt\n\t\t*/\n\t\tfunction nullCheck(value, elt) {\n\t\t\tif (value == null) {\n\t\t\t\tthrow new Error(elt.sourceFor() + \" is null\");\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* @param {any} value\n\t\t* @returns {boolean}\n\t\t*/\n\t\tfunction isEmpty(value) {\n\t\t\treturn value == undefined || value.length === 0;\n\t\t}\n\n\t\t/**\n\t\t* @param {Node} node\n\t\t* @returns {Document|ShadowRoot}\n\t\t*/\n\t\tfunction getRootNode(node) {\n\t\t\tvar rv = node.getRootNode();\n\t\t\tif (rv instanceof Document || rv instanceof ShadowRoot) return rv;\n\t\t\telse return document;\n\t\t}\n\n\t\t/** @type string | null */\n\t\t// @ts-ignore\n\t\tvar hyperscriptUrl = \"document\" in globalScope ? import.meta.url : null;\n\n\t\t/** @type {RuntimeObject} */\n\t\treturn {\n\t\t\ttypeCheck,\n\t\t\tforEach,\n\t\t\timplicitLoop,\n\t\t\ttriggerEvent,\n\t\t\tmatchesSelector,\n\t\t\tgetScript,\n\t\t\tprocessNode,\n\t\t\tevaluate,\n\t\t\tparse,\n\t\t\tgetScriptSelector,\n\t\t\tresolveSymbol,\n\t\t\tsetSymbol,\n\t\t\tmakeContext,\n\t\t\tfindNext,\n\t\t\tunifiedEval,\n\t\t\tconvertValue,\n\t\t\tunifiedExec,\n\t\t\tresolveProperty,\n\t\t\tassignToNamespace,\n\t\t\tregisterHyperTrace,\n\t\t\tgetHyperTrace,\n\t\t\tgetInternalData,\n\t\t\tgetHyperscriptFeatures,\n\t\t\tescapeSelector,\n\t\t\tnullCheck,\n\t\t\tisEmpty,\n\t\t\tgetRootNode,\n\t\t\thyperscriptUrl,\n\t\t\tHALT,\n\t\t};\n\t})();\n\n\t//====================================================================\n\t// Grammar\n\t//====================================================================\n\t{\n\t\t_parser.addLeafExpression(\"parenthesized\", function (parser, _runtime, tokens) {\n\t\t\tif (tokens.matchOpToken(\"(\")) {\n\t\t\t\tvar follows = tokens.clearFollow();\n\t\t\t\ttry {\n\t\t\t\t\tvar expr = parser.requireElement(\"expression\", tokens);\n\t\t\t\t} finally {\n\t\t\t\t\ttokens.restoreFollow(follows);\n\t\t\t\t}\n\t\t\t\ttokens.requireOpToken(\")\");\n\t\t\t\treturn expr;\n\t\t\t}\n\t\t});\n\n\t\t_parser.addLeafExpression(\"string\", function (parser, runtime, tokens) {\n\t\t\tvar stringToken = tokens.matchTokenType(\"STRING\");\n\t\t\tif (!stringToken) return;\n\t\t\tvar rawValue = stringToken.value;\n\t\t\t/** @type {any[]} */\n\t\t\tvar args;\n\t\t\tif (stringToken.template) {\n\t\t\t\tvar innerTokens = _lexer.tokenize(rawValue, true);\n\t\t\t\targs = parser.parseStringTemplate(innerTokens);\n\t\t\t} else {\n\t\t\t\targs = [];\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: \"string\",\n\t\t\t\ttoken: stringToken,\n\t\t\t\targs: args,\n\t\t\t\top: function (context) {\n\t\t\t\t\tvar returnStr = \"\";\n\t\t\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\t\t\tvar val = arguments[i];\n\t\t\t\t\t\tif (val !== undefined) {\n\t\t\t\t\t\t\treturnStr += val;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn returnStr;\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\tif (args.length === 0) {\n\t\t\t\t\t\treturn rawValue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addGrammarElement(\"nakedString\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.hasMore()) {\n\t\t\t\tvar tokenArr = tokens.consumeUntilWhitespace();\n\t\t\t\ttokens.matchTokenType(\"WHITESPACE\");\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"nakedString\",\n\t\t\t\t\ttokens: tokenArr,\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn tokenArr\n\t\t\t\t\t\t\t.map(function (t) {\n\t\t\t\t\t\t\t\treturn t.value;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.join(\"\");\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\t_parser.addLeafExpression(\"number\", function (parser, runtime, tokens) {\n\t\t\tvar number = tokens.matchTokenType(\"NUMBER\");\n\t\t\tif (!number) return;\n\t\t\tvar numberToken = number;\n\t\t\tvar value = parseFloat(number.value);\n\t\t\treturn {\n\t\t\t\ttype: \"number\",\n\t\t\t\tvalue: value,\n\t\t\t\tnumberToken: numberToken,\n\t\t\t\tevaluate: function () {\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addLeafExpression(\"idRef\", function (parser, runtime, tokens) {\n\t\t\tvar elementId = tokens.matchTokenType(\"ID_REF\");\n\t\t\tif (!elementId) return;\n\t\t\t// TODO - unify these two expression types\n\t\t\tif (elementId.template) {\n\t\t\t\tvar templateValue = elementId.value.substr(2, elementId.value.length - 2);\n\t\t\t\tvar innerTokens = _lexer.tokenize(templateValue);\n\t\t\t\tvar innerExpression = parser.requireElement(\"expression\", innerTokens);\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"idRefTemplate\",\n\t\t\t\t\targs: [innerExpression],\n\t\t\t\t\top: function (context, arg) {\n\t\t\t\t\t\treturn runtime.getRootNode(context.me).getElementById(arg);\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst value = elementId.value.substr(1);\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"idRef\",\n\t\t\t\t\tcss: elementId.value,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\truntime.getRootNode(context.me).getElementById(value)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\t_parser.addLeafExpression(\"classRef\", function (parser, runtime, tokens) {\n\t\t\tvar classRef = tokens.matchTokenType(\"CLASS_REF\");\n\n\t\t\tif (!classRef) return;\n\n\t\t\t// TODO - unify these two expression types\n\t\t\tif (classRef.template) {\n\t\t\t\tvar templateValue = classRef.value.substr(2, classRef.value.length - 2);\n\t\t\t\tvar innerTokens = _lexer.tokenize(templateValue);\n\t\t\t\tvar innerExpression = parser.requireElement(\"expression\", innerTokens);\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"classRefTemplate\",\n\t\t\t\t\targs: [innerExpression],\n\t\t\t\t\top: function (context, arg) {\n\t\t\t\t\t\treturn new ElementCollection(\".\" + arg, context.me)\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst css = classRef.value;\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"classRef\",\n\t\t\t\t\tcss: css,\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn new ElementCollection(css, context.me)\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tclass TemplatedQueryElementCollection extends ElementCollection {\n\t\t\tconstructor(css, relativeToElement, templateParts) {\n\t\t\t\tsuper(css, relativeToElement);\n\t\t\t\tthis.templateParts = templateParts;\n\t\t\t\tthis.elements = templateParts.filter(elt => elt instanceof Element);\n\t\t\t}\n\n\t\t\tget css() {\n\t\t\t\tlet rv = \"\", i = 0\n\t\t\t\tfor (const val of this.templateParts) {\n\t\t\t\t\tif (val instanceof Element) {\n\t\t\t\t\t\trv += \"[data-hs-query-id='\" + i++ + \"']\";\n\t\t\t\t\t} else rv += val;\n\t\t\t\t}\n\t\t\t\treturn rv;\n\t\t\t}\n\n\t\t\t[Symbol.iterator]() {\n\t\t\t\tthis.elements.forEach((el, i) => el.dataset.hsQueryId = i);\n\t\t\t\tconst rv = super[Symbol.iterator]();\n\t\t\t\tthis.elements.forEach(el => el.removeAttribute('data-hs-query-id'));\n\t\t\t\treturn rv;\n\t\t\t}\n\t\t}\n\n\t\t_parser.addLeafExpression(\"queryRef\", function (parser, runtime, tokens) {\n\t\t\tvar queryStart = tokens.matchOpToken(\"<\");\n\t\t\tif (!queryStart) return;\n\t\t\tvar queryTokens = tokens.consumeUntil(\"/\");\n\t\t\ttokens.requireOpToken(\"/\");\n\t\t\ttokens.requireOpToken(\">\");\n\t\t\tvar queryValue = queryTokens\n\t\t\t\t.map(function (t) {\n\t\t\t\t\tif (t.type === \"STRING\") {\n\t\t\t\t\t\treturn '\"' + t.value + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn t.value;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.join(\"\");\n\n\t\t\tif (queryValue.indexOf(\"$\") >= 0) {\n\t\t\t\tvar template = true;\n\t\t\t\tvar innerTokens = _lexer.tokenize(queryValue, true);\n\t\t\t\tvar args = parser.parseStringTemplate(innerTokens);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttype: \"queryRef\",\n\t\t\t\tcss: queryValue,\n\t\t\t\targs: args,\n\t\t\t\top: function (context, ...args) {\n\t\t\t\t\tif (template) {\n\t\t\t\t\t\treturn new TemplatedQueryElementCollection(queryValue, context.me, args)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn new ElementCollection(queryValue, context.me)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addLeafExpression(\"attributeRef\", function (parser, runtime, tokens) {\n\t\t\tvar attributeRef = tokens.matchTokenType(\"ATTRIBUTE_REF\");\n\t\t\tif (!attributeRef) return;\n\t\t\tvar outerVal = attributeRef.value;\n\t\t\tif (outerVal.indexOf(\"[\") === 0) {\n\t\t\t\tvar innerValue = outerVal.substring(2, outerVal.length - 1);\n\t\t\t} else {\n\t\t\t\tvar innerValue = outerVal.substring(1);\n\t\t\t}\n\t\t\tvar css = \"[\" + innerValue + \"]\";\n\t\t\tvar split = innerValue.split(\"=\");\n\t\t\tvar name = split[0];\n\t\t\tvar value = split[1];\n\t\t\tif (value) {\n\t\t\t\t// strip quotes\n\t\t\t\tif (value.indexOf('\"') === 0) {\n\t\t\t\t\tvalue = value.substring(1, value.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: \"attributeRef\",\n\t\t\t\tname: name,\n\t\t\t\tcss: css,\n\t\t\t\tvalue: value,\n\t\t\t\top: function (context) {\n\t\t\t\t\tvar target = context.beingTold || context.me;\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\treturn target.getAttribute(name);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addGrammarElement(\"objectKey\", function (parser, runtime, tokens) {\n\t\t\tvar token;\n\t\t\tif ((token = tokens.matchTokenType(\"STRING\"))) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"objectKey\",\n\t\t\t\t\tkey: token.value,\n\t\t\t\t\tevaluate: function () {\n\t\t\t\t\t\treturn token.value;\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else if (tokens.matchOpToken(\"[\")) {\n\t\t\t\tvar expr = parser.parseElement(\"expression\", tokens);\n\t\t\t\ttokens.requireOpToken(\"]\");\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"objectKey\",\n\t\t\t\t\texpr: expr,\n\t\t\t\t\targs: [expr],\n\t\t\t\t\top: function (ctx, expr) {\n\t\t\t\t\t\treturn expr;\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tvar key = \"\";\n\t\t\t\tdo {\n\t\t\t\t\ttoken = tokens.matchTokenType(\"IDENTIFIER\") || tokens.matchOpToken(\"-\");\n\t\t\t\t\tif (token) key += token.value;\n\t\t\t\t} while (token);\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"objectKey\",\n\t\t\t\t\tkey: key,\n\t\t\t\t\tevaluate: function () {\n\t\t\t\t\t\treturn key;\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\t_parser.addLeafExpression(\"objectLiteral\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchOpToken(\"{\")) return;\n\t\t\tvar keyExpressions = [];\n\t\t\tvar valueExpressions = [];\n\t\t\tif (!tokens.matchOpToken(\"}\")) {\n\t\t\t\tdo {\n\t\t\t\t\tvar name = parser.requireElement(\"objectKey\", tokens);\n\t\t\t\t\ttokens.requireOpToken(\":\");\n\t\t\t\t\tvar value = parser.requireElement(\"expression\", tokens);\n\t\t\t\t\tvalueExpressions.push(value);\n\t\t\t\t\tkeyExpressions.push(name);\n\t\t\t\t} while (tokens.matchOpToken(\",\"));\n\t\t\t\ttokens.requireOpToken(\"}\");\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: \"objectLiteral\",\n\t\t\t\targs: [keyExpressions, valueExpressions],\n\t\t\t\top: function (context, keys, values) {\n\t\t\t\t\tvar returnVal = {};\n\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\treturnVal[keys[i]] = values[i];\n\t\t\t\t\t}\n\t\t\t\t\treturn returnVal;\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addGrammarElement(\"namedArgumentList\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchOpToken(\"(\")) return;\n\t\t\tvar fields = [];\n\t\t\tvar valueExpressions = [];\n\t\t\tif (!tokens.matchOpToken(\")\")) {\n\t\t\t\tdo {\n\t\t\t\t\tvar name = tokens.requireTokenType(\"IDENTIFIER\");\n\t\t\t\t\ttokens.requireOpToken(\":\");\n\t\t\t\t\tvar value = parser.requireElement(\"expression\", tokens);\n\t\t\t\t\tvalueExpressions.push(value);\n\t\t\t\t\tfields.push({ name: name, value: value });\n\t\t\t\t} while (tokens.matchOpToken(\",\"));\n\t\t\t\ttokens.requireOpToken(\")\");\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: \"namedArgumentList\",\n\t\t\t\tfields: fields,\n\t\t\t\targs: [valueExpressions],\n\t\t\t\top: function (context, values) {\n\t\t\t\t\tvar returnVal = { _namedArgList_: true };\n\t\t\t\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\t\t\t\tvar field = fields[i];\n\t\t\t\t\t\treturnVal[field.name.value] = values[i];\n\t\t\t\t\t}\n\t\t\t\t\treturn returnVal;\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addGrammarElement(\"symbol\", function (parser, runtime, tokens) {\n\t\t\t/** @type {SymbolScope} */\n\t\t\tvar type = \"default\";\n\t\t\tif (tokens.matchToken(\"global\")) {\n\t\t\t\ttype = \"global\";\n\t\t\t} else if (tokens.matchToken(\"element\") || tokens.matchToken(\"module\")) {\n\t\t\t\ttype = \"element\";\n\t\t\t\t// optional possessive\n\t\t\t\tif (tokens.matchOpToken(\"'\")) {\n\t\t\t\t\ttokens.requireToken(\"s\");\n\t\t\t\t}\n\t\t\t} else if (tokens.matchToken(\"local\")) {\n\t\t\t\ttype = \"local\";\n\t\t\t}\n\t\t\tvar identifier = tokens.matchTokenType(\"IDENTIFIER\");\n\t\t\tif (identifier) {\n\t\t\t\tconst name = identifier.value;\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"symbol\",\n\t\t\t\t\tsymbolType: type,\n\t\t\t\t\ttoken: identifier,\n\t\t\t\t\tname: name,\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.resolveSymbol(name, context, type);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\t_parser.addGrammarElement(\"implicitMeTarget\", function (parser, runtime, tokens) {\n\t\t\treturn {\n\t\t\t\ttype: \"implicitMeTarget\",\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn context.beingTold || context.me;\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addLeafExpression(\"boolean\", function (parser, runtime, tokens) {\n\t\t\tvar booleanLiteral = tokens.matchToken(\"true\") || tokens.matchToken(\"false\");\n\t\t\tif (!booleanLiteral) return;\n\t\t\tconst value = booleanLiteral.value === \"true\";\n\t\t\treturn {\n\t\t\t\ttype: \"boolean\",\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addLeafExpression(\"null\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchToken(\"null\")) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"null\",\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\t_parser.addLeafExpression(\"arrayLiteral\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchOpToken(\"[\")) return;\n\t\t\tvar values = [];\n\t\t\tif (!tokens.matchOpToken(\"]\")) {\n\t\t\t\tdo {\n\t\t\t\t\tvar expr = parser.requireElement(\"expression\", tokens);\n\t\t\t\t\tvalues.push(expr);\n\t\t\t\t} while (tokens.matchOpToken(\",\"));\n\t\t\t\ttokens.requireOpToken(\"]\");\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: \"arrayLiteral\",\n\t\t\t\tvalues: values,\n\t\t\t\targs: [values],\n\t\t\t\top: function (context, values) {\n\t\t\t\t\treturn values;\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addLeafExpression(\"blockLiteral\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchOpToken(\"\\\\\")) return;\n\t\t\tvar args = [];\n\t\t\tvar arg1 = tokens.matchTokenType(\"IDENTIFIER\");\n\t\t\tif (arg1) {\n\t\t\t\targs.push(arg1);\n\t\t\t\twhile (tokens.matchOpToken(\",\")) {\n\t\t\t\t\targs.push(tokens.requireTokenType(\"IDENTIFIER\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO compound op token\n\t\t\ttokens.requireOpToken(\"-\");\n\t\t\ttokens.requireOpToken(\">\");\n\t\t\tvar expr = parser.requireElement(\"expression\", tokens);\n\t\t\treturn {\n\t\t\t\ttype: \"blockLiteral\",\n\t\t\t\targs: args,\n\t\t\t\texpr: expr,\n\t\t\t\tevaluate: function (ctx) {\n\t\t\t\t\tvar returnFunc = function () {\n\t\t\t\t\t\t//TODO - push scope\n\t\t\t\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\tctx[args[i].value] = arguments[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn expr.evaluate(ctx); //OK\n\t\t\t\t\t};\n\t\t\t\t\treturn returnFunc;\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addGrammarElement(\"timeExpression\", function (parser, runtime, tokens) {\n\t\t\tvar time = parser.requireElement(\"expression\", tokens);\n\t\t\tvar factor = 1;\n\t\t\tif (tokens.matchToken(\"s\") || tokens.matchToken(\"seconds\")) {\n\t\t\t\tfactor = 1000;\n\t\t\t} else if (tokens.matchToken(\"ms\") || tokens.matchToken(\"milliseconds\")) {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: \"timeExpression\",\n\t\t\t\ttime: time,\n\t\t\t\tfactor: factor,\n\t\t\t\targs: [time],\n\t\t\t\top: function (_context, val) {\n\t\t\t\t\treturn val * factor;\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addIndirectExpression(\"propertyAccess\", function (parser, runtime, tokens, root) {\n\t\t\tif (!tokens.matchOpToken(\".\")) return;\n\t\t\tvar prop = tokens.requireTokenType(\"IDENTIFIER\");\n\t\t\tvar propertyAccess = {\n\t\t\t\ttype: \"propertyAccess\",\n\t\t\t\troot: root,\n\t\t\t\tprop: prop,\n\t\t\t\targs: [root],\n\t\t\t\top: function (_context, rootVal) {\n\t\t\t\t\tvar value = runtime.resolveProperty(rootVal, prop.value, false);\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn parser.parseElement(\"indirectExpression\", tokens, propertyAccess);\n\t\t});\n\n\t\t_parser.addIndirectExpression(\"of\", function (parser, runtime, tokens, root) {\n\t\t\tif (!tokens.matchToken(\"of\")) return;\n\t\t\tvar newRoot = parser.requireElement(\"expression\", tokens);\n\t\t\t// find the urroot\n\t\t\tvar childOfUrRoot = null;\n\t\t\tvar urRoot = root;\n\t\t\twhile (urRoot.root) {\n\t\t\t\tchildOfUrRoot = urRoot;\n\t\t\t\turRoot = urRoot.root;\n\t\t\t}\n\t\t\tif (urRoot.type !== \"symbol\" && urRoot.type !== \"attributeRef\") {\n\t\t\t\tparser.raiseParseError(tokens, \"Cannot take a property of a non-symbol: \" + urRoot.type);\n\t\t\t}\n\t\t\tvar attribute = urRoot.type === \"attributeRef\";\n\t\t\tvar prop = urRoot.name;\n\t\t\tvar propertyAccess = {\n\t\t\t\ttype: \"ofExpression\",\n\t\t\t\tprop: urRoot.token,\n\t\t\t\troot: newRoot,\n\t\t\t\tattribute: attribute,\n\t\t\t\texpression: root,\n\t\t\t\targs: [newRoot],\n\t\t\t\top: function (context, rootVal) {\n\t\t\t\t\treturn runtime.resolveProperty(rootVal, prop, attribute);\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tif (urRoot.type === \"attributeRef\") {\n\t\t\t\tpropertyAccess.attribute = urRoot;\n\t\t\t}\n\t\t\tif (childOfUrRoot) {\n\t\t\t\tchildOfUrRoot.root = propertyAccess;\n\t\t\t\tchildOfUrRoot.args = [propertyAccess];\n\t\t\t} else {\n\t\t\t\troot = propertyAccess;\n\t\t\t}\n\n\t\t\treturn parser.parseElement(\"indirectExpression\", tokens, root);\n\t\t});\n\n\t\t_parser.addIndirectExpression(\"possessive\", function (parser, runtime, tokens, root) {\n\t\t\tif (parser.possessivesDisabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar apostrophe = tokens.matchOpToken(\"'\");\n\t\t\tif (\n\t\t\t\tapostrophe ||\n\t\t\t\t(root.type === \"symbol\" &&\n\t\t\t\t\t(root.name === \"my\" || root.name === \"its\" || root.name === \"your\") &&\n\t\t\t\t\ttokens.currentToken().type === \"IDENTIFIER\")\n\t\t\t) {\n\t\t\t\tif (apostrophe) {\n\t\t\t\t\ttokens.requireToken(\"s\");\n\t\t\t\t}\n\t\t\t\tvar attribute = parser.parseElement(\"attributeRef\", tokens);\n\t\t\t\tif (attribute == null) {\n\t\t\t\t\tvar prop = tokens.requireTokenType(\"IDENTIFIER\");\n\t\t\t\t}\n\t\t\t\tvar propertyAccess = {\n\t\t\t\t\ttype: \"possessive\",\n\t\t\t\t\troot: root,\n\t\t\t\t\tattribute: attribute,\n\t\t\t\t\tprop: prop,\n\t\t\t\t\targs: [root],\n\t\t\t\t\top: function (context, rootVal) {\n\t\t\t\t\t\tif (attribute) {\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tvar value = runtime.resolveProperty(rootVal, attribute.name, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar value = runtime.resolveProperty(rootVal, prop.value, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn parser.parseElement(\"indirectExpression\", tokens, propertyAccess);\n\t\t\t}\n\t\t});\n\n\t\t_parser.addIndirectExpression(\"inExpression\", function (parser, runtime, tokens, root) {\n\t\t\tif (!tokens.matchToken(\"in\")) return;\n\t\t\tif ((root.type !== \"idRef\" && root.type === \"queryRef\") || root.type === \"classRef\") {\n\t\t\t\tvar query = true;\n\t\t\t}\n\t\t\tvar target = parser.requireElement(\"expression\", tokens);\n\t\t\tvar propertyAccess = {\n\t\t\t\ttype: \"inExpression\",\n\t\t\t\troot: root,\n\t\t\t\targs: [query ? null : root, target],\n\t\t\t\top: function (context, rootVal, target) {\n\t\t\t\t\tvar returnArr = [];\n\t\t\t\t\tif (query) {\n\t\t\t\t\t\truntime.forEach(target, function (targetElt) {\n\t\t\t\t\t\t\tvar results = targetElt.querySelectorAll(root.css);\n\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\t\treturnArr.push(results[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\truntime.forEach(rootVal, function (rootElt) {\n\t\t\t\t\t\t\truntime.forEach(target, function (targetElt) {\n\t\t\t\t\t\t\t\tif (rootElt === targetElt) {\n\t\t\t\t\t\t\t\t\treturnArr.push(rootElt);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (returnArr.length > 0) {\n\t\t\t\t\t\treturn returnArr;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn parser.parseElement(\"indirectExpression\", tokens, propertyAccess);\n\t\t});\n\n\t\t_parser.addIndirectExpression(\"asExpression\", function (parser, runtime, tokens, root) {\n\t\t\tif (!tokens.matchToken(\"as\")) return;\n\t\t\ttokens.matchToken(\"a\") || tokens.matchToken(\"an\");\n\t\t\tvar conversion = parser.requireElement(\"dotOrColonPath\", tokens).evaluate(); // OK No promise\n\t\t\tvar propertyAccess = {\n\t\t\t\ttype: \"asExpression\",\n\t\t\t\troot: root,\n\t\t\t\targs: [root],\n\t\t\t\top: function (context, rootVal) {\n\t\t\t\t\treturn runtime.convertValue(rootVal, conversion);\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn parser.parseElement(\"indirectExpression\", tokens, propertyAccess);\n\t\t});\n\n\t\t_parser.addIndirectExpression(\"functionCall\", function (parser, runtime, tokens, root) {\n\t\t\tif (!tokens.matchOpToken(\"(\")) return;\n\t\t\tvar args = [];\n\t\t\tif (!tokens.matchOpToken(\")\")) {\n\t\t\t\tdo {\n\t\t\t\t\targs.push(parser.requireElement(\"expression\", tokens));\n\t\t\t\t} while (tokens.matchOpToken(\",\"));\n\t\t\t\ttokens.requireOpToken(\")\");\n\t\t\t}\n\n\t\t\tif (root.root) {\n\t\t\t\tvar functionCall = {\n\t\t\t\t\ttype: \"functionCall\",\n\t\t\t\t\troot: root,\n\t\t\t\t\targExressions: args,\n\t\t\t\t\targs: [root.root, args],\n\t\t\t\t\top: function (context, rootRoot, args) {\n\t\t\t\t\t\truntime.nullCheck(rootRoot, root.root);\n\t\t\t\t\t\tvar func = rootRoot[root.prop.value];\n\t\t\t\t\t\truntime.nullCheck(func, root);\n\t\t\t\t\t\tif (func.hyperfunc) {\n\t\t\t\t\t\t\targs.push(context);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn func.apply(rootRoot, args);\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tvar functionCall = {\n\t\t\t\t\ttype: \"functionCall\",\n\t\t\t\t\troot: root,\n\t\t\t\t\targExressions: args,\n\t\t\t\t\targs: [root, args],\n\t\t\t\t\top: function (context, func, argVals) {\n\t\t\t\t\t\truntime.nullCheck(func, root);\n\t\t\t\t\t\tif (func.hyperfunc) {\n\t\t\t\t\t\t\targVals.push(context);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar apply = func.apply(null, argVals);\n\t\t\t\t\t\treturn apply;\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn parser.parseElement(\"indirectExpression\", tokens, functionCall);\n\t\t});\n\n\t\t_parser.addIndirectExpression(\"attributeRefAccess\", function (parser, runtime, tokens, root) {\n\t\t\tvar attribute = parser.parseElement(\"attributeRef\", tokens);\n\t\t\tif (!attribute) return;\n\t\t\tvar attributeAccess = {\n\t\t\t\ttype: \"attributeRefAccess\",\n\t\t\t\troot: root,\n\t\t\t\tattribute: attribute,\n\t\t\t\targs: [root],\n\t\t\t\top: function (_ctx, rootVal) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tvar value = runtime.resolveProperty(rootVal, attribute.name, true);\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn _runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn attributeAccess;\n\t\t});\n\n\t\t_parser.addIndirectExpression(\"arrayIndex\", function (parser, runtime, tokens, root) {\n\t\t\tif (!tokens.matchOpToken(\"[\")) return;\n\t\t\tvar andBefore = false;\n\t\t\tvar andAfter = false;\n\t\t\tvar firstIndex = null;\n\t\t\tvar secondIndex = null;\n\n\t\t\tif (tokens.matchOpToken(\"..\")) {\n\t\t\t\tandBefore = true;\n\t\t\t\tfirstIndex = parser.requireElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\tfirstIndex = parser.requireElement(\"expression\", tokens);\n\n\t\t\t\tif (tokens.matchOpToken(\"..\")) {\n\t\t\t\t\tandAfter = true;\n\t\t\t\t\tvar current = tokens.currentToken();\n\t\t\t\t\tif (current.type !== \"R_BRACKET\") {\n\t\t\t\t\t\tsecondIndex = parser.parseElement(\"expression\", tokens);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.requireOpToken(\"]\");\n\n\t\t\tvar arrayIndex = {\n\t\t\t\ttype: \"arrayIndex\",\n\t\t\t\troot: root,\n\t\t\t\tfirstIndex: firstIndex,\n\t\t\t\tsecondIndex: secondIndex,\n\t\t\t\targs: [root, firstIndex, secondIndex],\n\t\t\t\top: function (_ctx, root, firstIndex, secondIndex) {\n\t\t\t\t\tif (andBefore) {\n\t\t\t\t\t\treturn root.slice(0, firstIndex + 1); // returns all items from beginning to firstIndex (inclusive)\n\t\t\t\t\t} else if (andAfter) {\n\t\t\t\t\t\tif (secondIndex != null) {\n\t\t\t\t\t\t\treturn root.slice(firstIndex, secondIndex + 1); // returns all items from firstIndex to secondIndex (inclusive)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn root.slice(firstIndex); // returns from firstIndex to end of array\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn root[firstIndex];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn _runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\n\t\t\treturn _parser.parseElement(\"indirectExpression\", tokens, arrayIndex);\n\t\t});\n\n\t\t_parser.addGrammarElement(\"postfixExpression\", function (parser, runtime, tokens) {\n\t\t\tvar root = parser.parseElement(\"primaryExpression\", tokens);\n\t\t\tif (tokens.matchOpToken(\":\")) {\n\t\t\t\tvar typeName = tokens.requireTokenType(\"IDENTIFIER\");\n\t\t\t\tvar nullOk = !tokens.matchOpToken(\"!\");\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"typeCheck\",\n\t\t\t\t\ttypeName: typeName,\n\t\t\t\t\tnullOk: nullOk,\n\t\t\t\t\targs: [root],\n\t\t\t\t\top: function (context, val) {\n\t\t\t\t\t\tvar passed = runtime.typeCheck(val, typeName.value, nullOk);\n\t\t\t\t\t\tif (passed) {\n\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"Typecheck failed!  Expected: \" + typeName.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn root;\n\t\t\t}\n\t\t});\n\n\t\t_parser.addGrammarElement(\"logicalNot\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"not\")) return;\n\t\t\tvar root = parser.requireElement(\"unaryExpression\", tokens);\n\t\t\treturn {\n\t\t\t\ttype: \"logicalNot\",\n\t\t\t\troot: root,\n\t\t\t\targs: [root],\n\t\t\t\top: function (context, val) {\n\t\t\t\t\treturn !val;\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addGrammarElement(\"noExpression\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"no\")) return;\n\t\t\tvar root = parser.requireElement(\"unaryExpression\", tokens);\n\t\t\treturn {\n\t\t\t\ttype: \"noExpression\",\n\t\t\t\troot: root,\n\t\t\t\targs: [root],\n\t\t\t\top: function (_context, val) {\n\t\t\t\t\treturn runtime.isEmpty(val);\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addGrammarElement(\"negativeNumber\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchOpToken(\"-\")) return;\n\t\t\tvar root = parser.requireElement(\"unaryExpression\", tokens);\n\t\t\treturn {\n\t\t\t\ttype: \"negativeNumber\",\n\t\t\t\troot: root,\n\t\t\t\targs: [root],\n\t\t\t\top: function (context, value) {\n\t\t\t\t\treturn -1 * value;\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addGrammarElement(\"unaryExpression\", function (parser, runtime, tokens) {\n\t\t\treturn parser.parseAnyOf(\n\t\t\t\t[\"logicalNot\", \"relativePositionalExpression\", \"positionalExpression\", \"noExpression\", \"negativeNumber\", \"postfixExpression\"],\n\t\t\t\ttokens\n\t\t\t);\n\t\t});\n\n\t\tvar scanForwardQuery = function(start, root, match, wrap) {\n\t\t\tvar results = root.querySelectorAll(match);\n\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\tvar elt = results[i];\n\t\t\t\tif (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_PRECEDING) {\n\t\t\t\t\treturn elt;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (wrap) {\n\t\t\t\treturn results[0];\n\t\t\t}\n\t\t}\n\n\t\tvar scanBackwardsQuery = function(start, root, match, wrap) {\n\t\t\tvar results = root.querySelectorAll(match);\n\t\t\tfor (var i = results.length - 1; i >= 0; i--) {\n\t\t\t\tvar elt = results[i];\n\t\t\t\tif (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_FOLLOWING) {\n\t\t\t\t\treturn elt;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (wrap) {\n\t\t\t\treturn results[results.length - 1];\n\t\t\t}\n\t\t}\n\n\t\tvar scanForwardArray = function(start, array, match, wrap) {\n\t\t\tvar matches = [];\n\t\t\t_runtime.forEach(array, function(elt){\n\t\t\t\tif (elt.matches(match) || elt === start) {\n\t\t\t\t\tmatches.push(elt);\n\t\t\t\t}\n\t\t\t})\n\t\t\tfor (var i = 0; i < matches.length - 1; i++) {\n\t\t\t\tvar elt = matches[i];\n\t\t\t\tif (elt === start) {\n\t\t\t\t\treturn matches[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (wrap) {\n\t\t\t\tvar first = matches[0];\n\t\t\t\tif (first && first.matches(match)) {\n\t\t\t\t\treturn first;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar scanBackwardsArray = function(start, array, match, wrap) {\n\t\t\treturn scanForwardArray(start, Array.from(array).reverse(), match, wrap);\n\t\t}\n\n\t\t_parser.addGrammarElement(\"relativePositionalExpression\", function (parser, runtime, tokens) {\n\t\t\tvar op = tokens.matchAnyToken(\"next\", \"previous\");\n\t\t\tif (!op) return;\n\t\t\tif (op.value === \"next\") {\n\t\t\t\tvar forwardSearch = true;\n\t\t\t}\n\n\t\t\tvar thing = parser.parseElement(\"expression\", tokens);\n\n\t\t\tif (tokens.matchToken(\"from\")) {\n\t\t\t\ttokens.pushFollow(\"in\");\n\t\t\t\ttry {\n\t\t\t\t\tvar from = parser.requireElement(\"expression\", tokens);\n\t\t\t\t} finally {\n\t\t\t\t\ttokens.popFollow();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar from = parser.requireElement(\"implicitMeTarget\", tokens);\n\t\t\t}\n\n\t\t\tvar inSearch = false;\n\t\t\tvar withinElt;\n\t\t\tif (tokens.matchToken(\"in\")) {\n\t\t\t\tinSearch = true;\n\t\t\t\tvar inElt = parser.requireElement(\"expression\", tokens);\n\t\t\t} else if (tokens.matchToken(\"within\")) {\n\t\t\t\twithinElt = parser.requireElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\twithinElt = document.body;\n\t\t\t}\n\n\t\t\tvar wrapping = false;\n\t\t\tif (tokens.matchToken(\"with\")) {\n\t\t\t\ttokens.requireToken(\"wrapping\")\n\t\t\t\twrapping = true;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttype: \"relativePositionalExpression\",\n\t\t\t\tfrom: from,\n\t\t\t\tforwardSearch: forwardSearch,\n\t\t\t\tinSearch: inSearch,\n\t\t\t\twrapping: wrapping,\n\t\t\t\tinElt: inElt,\n\t\t\t\twithinElt: withinElt,\n\t\t\t\toperator: op.value,\n\t\t\t\targs: [thing, from, inElt, withinElt],\n\t\t\t\top: function (context, thing, from, inElt, withinElt) {\n\n\t\t\t\t\tvar css = thing.css;\n\t\t\t\t\tif (css == null) {\n\t\t\t\t\t\tthrow \"Expected a CSS value\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif(inSearch) {\n\t\t\t\t\t\tif (inElt) {\n\t\t\t\t\t\t\tif (forwardSearch) {\n\t\t\t\t\t\t\t\treturn scanForwardArray(from, inElt, css, wrapping);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn scanBackwardsArray(from, inElt, css, wrapping);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (withinElt) {\n\t\t\t\t\t\t\tif (forwardSearch) {\n\t\t\t\t\t\t\t\treturn scanForwardQuery(from, withinElt, css, wrapping);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn scanBackwardsQuery(from, withinElt, css, wrapping);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t}\n\n\t\t});\n\n\t\t_parser.addGrammarElement(\"positionalExpression\", function (parser, runtime, tokens) {\n\t\t\tvar op = tokens.matchAnyToken(\"first\", \"last\", \"random\");\n\t\t\tif (!op) return;\n\t\t\ttokens.matchAnyToken(\"in\", \"from\", \"of\");\n\t\t\tvar rhs = parser.requireElement(\"unaryExpression\", tokens);\n\t\t\tconst operator = op.value;\n\t\t\treturn {\n\t\t\t\ttype: \"positionalExpression\",\n\t\t\t\trhs: rhs,\n\t\t\t\toperator: op.value,\n\t\t\t\targs: [rhs],\n\t\t\t\top: function (context, rhsVal) {\n\t\t\t\t\tif (rhsVal && !Array.isArray(rhsVal)) {\n\t\t\t\t\t\tif (rhsVal.children) {\n\t\t\t\t\t\t\trhsVal = rhsVal.children;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trhsVal = Array.from(rhsVal);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (rhsVal) {\n\t\t\t\t\t\tif (operator === \"first\") {\n\t\t\t\t\t\t\treturn rhsVal[0];\n\t\t\t\t\t\t} else if (operator === \"last\") {\n\t\t\t\t\t\t\treturn rhsVal[rhsVal.length - 1];\n\t\t\t\t\t\t} else if (operator === \"random\") {\n\t\t\t\t\t\t\treturn rhsVal[Math.floor(Math.random() * rhsVal.length)];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addGrammarElement(\"mathOperator\", function (parser, runtime, tokens) {\n\t\t\tvar expr = parser.parseElement(\"unaryExpression\", tokens);\n\t\t\tvar mathOp,\n\t\t\t\tinitialMathOp = null;\n\t\t\tmathOp = tokens.matchAnyOpToken(\"+\", \"-\", \"*\", \"/\", \"%\");\n\t\t\twhile (mathOp) {\n\t\t\t\tinitialMathOp = initialMathOp || mathOp;\n\t\t\t\tvar operator = mathOp.value;\n\t\t\t\tif (initialMathOp.value !== operator) {\n\t\t\t\t\tparser.raiseParseError(tokens, \"You must parenthesize math operations with different operators\");\n\t\t\t\t}\n\t\t\t\tvar rhs = parser.parseElement(\"unaryExpression\", tokens);\n\t\t\t\texpr = {\n\t\t\t\t\ttype: \"mathOperator\",\n\t\t\t\t\tlhs: expr,\n\t\t\t\t\trhs: rhs,\n\t\t\t\t\toperator: operator,\n\t\t\t\t\targs: [expr, rhs],\n\t\t\t\t\top: function (context, lhsVal, rhsVal) {\n\t\t\t\t\t\tif (operator === \"+\") {\n\t\t\t\t\t\t\treturn lhsVal + rhsVal;\n\t\t\t\t\t\t} else if (operator === \"-\") {\n\t\t\t\t\t\t\treturn lhsVal - rhsVal;\n\t\t\t\t\t\t} else if (operator === \"*\") {\n\t\t\t\t\t\t\treturn lhsVal * rhsVal;\n\t\t\t\t\t\t} else if (operator === \"/\") {\n\t\t\t\t\t\t\treturn lhsVal / rhsVal;\n\t\t\t\t\t\t} else if (operator === \"%\") {\n\t\t\t\t\t\t\treturn lhsVal % rhsVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tmathOp = tokens.matchAnyOpToken(\"+\", \"-\", \"*\", \"/\", \"%\");\n\t\t\t}\n\t\t\treturn expr;\n\t\t});\n\n\t\t_parser.addGrammarElement(\"mathExpression\", function (parser, runtime, tokens) {\n\t\t\treturn parser.parseAnyOf([\"mathOperator\", \"unaryExpression\"], tokens);\n\t\t});\n\n\t\t_parser.addGrammarElement(\"comparisonOperator\", function (parser, runtime, tokens) {\n\t\t\tvar expr = parser.parseElement(\"mathExpression\", tokens);\n\t\t\tvar comparisonToken = tokens.matchAnyOpToken(\"<\", \">\", \"<=\", \">=\", \"==\", \"===\", \"!=\", \"!==\");\n\t\t\tvar operator = comparisonToken ? comparisonToken.value : null;\n\t\t\tvar hasRightValue = true; // By default, most comparisons require two values, but there are some exceptions.\n\t\t\tvar typeCheck = false;\n\n\t\t\tif (operator == null) {\n\t\t\t\tif (tokens.matchToken(\"is\") || tokens.matchToken(\"am\")) {\n\t\t\t\t\tif (tokens.matchToken(\"not\")) {\n\t\t\t\t\t\tif (tokens.matchToken(\"in\")) {\n\t\t\t\t\t\t\toperator = \"not in\";\n\t\t\t\t\t\t} else if (tokens.matchToken(\"a\")) {\n\t\t\t\t\t\t\toperator = \"not a\";\n\t\t\t\t\t\t\ttypeCheck = true;\n\t\t\t\t\t\t} else if (tokens.matchToken(\"empty\")) {\n\t\t\t\t\t\t\toperator = \"not empty\";\n\t\t\t\t\t\t\thasRightValue = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toperator = \"!=\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (tokens.matchToken(\"in\")) {\n\t\t\t\t\t\toperator = \"in\";\n\t\t\t\t\t} else if (tokens.matchToken(\"a\")) {\n\t\t\t\t\t\toperator = \"a\";\n\t\t\t\t\t\ttypeCheck = true;\n\t\t\t\t\t} else if (tokens.matchToken(\"empty\")) {\n\t\t\t\t\t\toperator = \"empty\";\n\t\t\t\t\t\thasRightValue = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toperator = \"==\";\n\t\t\t\t\t}\n\t\t\t\t} else if (tokens.matchToken(\"matches\") || tokens.matchToken(\"match\")) {\n\t\t\t\t\toperator = \"match\";\n\t\t\t\t} else if (tokens.matchToken(\"contains\") || tokens.matchToken(\"contain\")) {\n\t\t\t\t\toperator = \"contain\";\n\t\t\t\t} else if (tokens.matchToken(\"do\") || tokens.matchToken(\"does\")) {\n\t\t\t\t\ttokens.requireToken(\"not\");\n\t\t\t\t\tif (tokens.matchToken(\"matches\") || tokens.matchToken(\"match\")) {\n\t\t\t\t\t\toperator = \"not match\";\n\t\t\t\t\t} else if (tokens.matchToken(\"contains\") || tokens.matchToken(\"contain\")) {\n\t\t\t\t\t\toperator = \"not contain\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.raiseParseError(tokens, \"Expected matches or contains\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operator) {\n\t\t\t\t// Do not allow chained comparisons, which is dumb\n\t\t\t\tif (typeCheck) {\n\t\t\t\t\tvar typeName = tokens.requireTokenType(\"IDENTIFIER\");\n\t\t\t\t\tvar nullOk = !tokens.matchOpToken(\"!\");\n\t\t\t\t} else if (hasRightValue) {\n\t\t\t\t\tvar rhs = parser.requireElement(\"mathExpression\", tokens);\n\t\t\t\t\tif (operator === \"match\" || operator === \"not match\") {\n\t\t\t\t\t\trhs = rhs.css ? rhs.css : rhs;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texpr = {\n\t\t\t\t\ttype: \"comparisonOperator\",\n\t\t\t\t\toperator: operator,\n\t\t\t\t\ttypeName: typeName,\n\t\t\t\t\tnullOk: nullOk,\n\t\t\t\t\tlhs: expr,\n\t\t\t\t\trhs: rhs,\n\t\t\t\t\targs: [expr, rhs],\n\t\t\t\t\top: function (context, lhsVal, rhsVal) {\n\t\t\t\t\t\tif (operator === \"==\") {\n\t\t\t\t\t\t\treturn lhsVal == rhsVal;\n\t\t\t\t\t\t} else if (operator === \"!=\") {\n\t\t\t\t\t\t\treturn lhsVal != rhsVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operator === \"in\") {\n\t\t\t\t\t\t\treturn rhsVal != null && Array.from(rhsVal).indexOf(lhsVal) >= 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operator === \"not in\") {\n\t\t\t\t\t\t\treturn rhsVal == null || Array.from(rhsVal).indexOf(lhsVal) < 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operator === \"match\") {\n\t\t\t\t\t\t\treturn lhsVal != null && lhsVal.matches(rhsVal);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operator === \"not match\") {\n\t\t\t\t\t\t\treturn lhsVal == null || !lhsVal.matches(rhsVal);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operator === \"contain\") {\n\t\t\t\t\t\t\treturn lhsVal != null && lhsVal.contains(rhsVal);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operator === \"not contain\") {\n\t\t\t\t\t\t\treturn lhsVal == null || !lhsVal.contains(rhsVal);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operator === \"===\") {\n\t\t\t\t\t\t\treturn lhsVal === rhsVal;\n\t\t\t\t\t\t} else if (operator === \"!==\") {\n\t\t\t\t\t\t\treturn lhsVal !== rhsVal;\n\t\t\t\t\t\t} else if (operator === \"<\") {\n\t\t\t\t\t\t\treturn lhsVal < rhsVal;\n\t\t\t\t\t\t} else if (operator === \">\") {\n\t\t\t\t\t\t\treturn lhsVal > rhsVal;\n\t\t\t\t\t\t} else if (operator === \"<=\") {\n\t\t\t\t\t\t\treturn lhsVal <= rhsVal;\n\t\t\t\t\t\t} else if (operator === \">=\") {\n\t\t\t\t\t\t\treturn lhsVal >= rhsVal;\n\t\t\t\t\t\t} else if (operator === \"empty\") {\n\t\t\t\t\t\t\treturn runtime.isEmpty(lhsVal);\n\t\t\t\t\t\t} else if (operator === \"not empty\") {\n\t\t\t\t\t\t\treturn !runtime.isEmpty(lhsVal);\n\t\t\t\t\t\t} else if (operator === \"a\") {\n\t\t\t\t\t\t\treturn runtime.typeCheck(lhsVal, typeName.value, nullOk);\n\t\t\t\t\t\t} else if (operator === \"not a\") {\n\t\t\t\t\t\t\treturn !runtime.typeCheck(lhsVal, typeName.value, nullOk);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow \"Unknown comparison : \" + operator;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn expr;\n\t\t});\n\n\t\t_parser.addGrammarElement(\"comparisonExpression\", function (parser, runtime, tokens) {\n\t\t\treturn parser.parseAnyOf([\"comparisonOperator\", \"mathExpression\"], tokens);\n\t\t});\n\n\t\t_parser.addGrammarElement(\"logicalOperator\", function (parser, runtime, tokens) {\n\t\t\tvar expr = parser.parseElement(\"comparisonExpression\", tokens);\n\t\t\tvar logicalOp,\n\t\t\t\tinitialLogicalOp = null;\n\t\t\tlogicalOp = tokens.matchToken(\"and\") || tokens.matchToken(\"or\");\n\t\t\twhile (logicalOp) {\n\t\t\t\tinitialLogicalOp = initialLogicalOp || logicalOp;\n\t\t\t\tif (initialLogicalOp.value !== logicalOp.value) {\n\t\t\t\t\tparser.raiseParseError(tokens, \"You must parenthesize logical operations with different operators\");\n\t\t\t\t}\n\t\t\t\tvar rhs = parser.requireElement(\"comparisonExpression\", tokens);\n\t\t\t\tconst operator = logicalOp.value;\n\t\t\t\texpr = {\n\t\t\t\t\ttype: \"logicalOperator\",\n\t\t\t\t\toperator: operator,\n\t\t\t\t\tlhs: expr,\n\t\t\t\t\trhs: rhs,\n\t\t\t\t\targs: [expr, rhs],\n\t\t\t\t\top: function (context, lhsVal, rhsVal) {\n\t\t\t\t\t\tif (operator === \"and\") {\n\t\t\t\t\t\t\treturn lhsVal && rhsVal;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn lhsVal || rhsVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tlogicalOp = tokens.matchToken(\"and\") || tokens.matchToken(\"or\");\n\t\t\t}\n\t\t\treturn expr;\n\t\t});\n\n\t\t_parser.addGrammarElement(\"logicalExpression\", function (parser, runtime, tokens) {\n\t\t\treturn parser.parseAnyOf([\"logicalOperator\", \"mathExpression\"], tokens);\n\t\t});\n\n\t\t_parser.addGrammarElement(\"asyncExpression\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchToken(\"async\")) {\n\t\t\t\tvar value = parser.requireElement(\"logicalExpression\", tokens);\n\t\t\t\tvar expr = {\n\t\t\t\t\ttype: \"asyncExpression\",\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tevaluate: function (context) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasyncWrapper: true,\n\t\t\t\t\t\t\tvalue: this.value.evaluate(context), //OK\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn expr;\n\t\t\t} else {\n\t\t\t\treturn parser.parseElement(\"logicalExpression\", tokens);\n\t\t\t}\n\t\t});\n\n\t\t_parser.addGrammarElement(\"expression\", function (parser, runtime, tokens) {\n\t\t\ttokens.matchToken(\"the\"); // optional the\n\t\t\treturn parser.parseElement(\"asyncExpression\", tokens);\n\t\t});\n\n\t\t_parser.addGrammarElement(\"assignableExpression\", function (parser, runtime, tokens) {\n\t\t\ttokens.matchToken(\"the\"); // optional the\n\n\t\t\t// TODO obviously we need to generalize this as a left hand side / targetable concept\n\t\t\tvar expr = parser.parseElement(\"primaryExpression\", tokens);\n\t\t\tif (expr && (\n\t\t\t\texpr.type === \"symbol\" ||\n\t\t\t\texpr.type === \"ofExpression\" ||\n\t\t\t\texpr.type === \"propertyAccess\" ||\n\t\t\t\texpr.type === \"attributeRefAccess\" ||\n\t\t\t\texpr.type === \"attributeRef\" ||\n\t\t\t\texpr.type === \"possessive\")\n\t\t\t) {\n\t\t\t\treturn expr;\n\t\t\t} else {\n\t\t\t\t_parser.raiseParseError(\n\t\t\t\t\ttokens,\n\t\t\t\t\t\"A target expression must be writable.  The expression type '\" + (expr && expr.type) + \"' is not.\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn expr;\n\t\t});\n\n\t\t_parser.addGrammarElement(\"hyperscript\", function (parser, runtime, tokens) {\n\t\t\tvar features = [];\n\n\t\t\tif (tokens.hasMore()) {\n\t\t\t\twhile (parser.featureStart(tokens.currentToken()) || tokens.currentToken().value === \"(\") {\n\t\t\t\t\tvar feature = parser.requireElement(\"feature\", tokens);\n\t\t\t\t\tfeatures.push(feature);\n\t\t\t\t\ttokens.matchToken(\"end\"); // optional end\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: \"hyperscript\",\n\t\t\t\tfeatures: features,\n\t\t\t\tapply: function (target, source, args) {\n\t\t\t\t\t// no op\n\t\t\t\t\tfor (const feature of features) {\n\t\t\t\t\t\tfeature.install(target, source, args);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tvar parseEventArgs = function (tokens) {\n\t\t\tvar args = [];\n\t\t\t// handle argument list (look ahead 3)\n\t\t\tif (\n\t\t\t\ttokens.token(0).value === \"(\" &&\n\t\t\t\t(tokens.token(1).value === \")\" || tokens.token(2).value === \",\" || tokens.token(2).value === \")\")\n\t\t\t) {\n\t\t\t\ttokens.matchOpToken(\"(\");\n\t\t\t\tdo {\n\t\t\t\t\targs.push(tokens.requireTokenType(\"IDENTIFIER\"));\n\t\t\t\t} while (tokens.matchOpToken(\",\"));\n\t\t\t\ttokens.requireOpToken(\")\");\n\t\t\t}\n\t\t\treturn args;\n\t\t};\n\n\t\t_parser.addFeature(\"on\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"on\")) return;\n\t\t\tvar every = false;\n\t\t\tif (tokens.matchToken(\"every\")) {\n\t\t\t\tevery = true;\n\t\t\t}\n\t\t\tvar events = [];\n\t\t\tvar displayName = null;\n\t\t\tdo {\n\t\t\t\tvar on = parser.requireElement(\"eventName\", tokens, \"Expected event name\");\n\n\t\t\t\tvar eventName = on.evaluate(); // OK No Promise\n\n\t\t\t\tif (displayName) {\n\t\t\t\t\tdisplayName = displayName + \" or \" + eventName;\n\t\t\t\t} else {\n\t\t\t\t\tdisplayName = \"on \" + eventName;\n\t\t\t\t}\n\t\t\t\tvar args = parseEventArgs(tokens);\n\n\t\t\t\tvar filter = null;\n\t\t\t\tif (tokens.matchOpToken(\"[\")) {\n\t\t\t\t\tfilter = parser.requireElement(\"expression\", tokens);\n\t\t\t\t\ttokens.requireOpToken(\"]\");\n\t\t\t\t}\n\n\t\t\t\tif (tokens.currentToken().type === \"NUMBER\") {\n\t\t\t\t\tvar startCountToken = tokens.consumeToken();\n\t\t\t\t\tvar startCount = parseInt(startCountToken.value);\n\t\t\t\t\tif (tokens.matchToken(\"to\")) {\n\t\t\t\t\t\tvar endCountToken = tokens.consumeToken();\n\t\t\t\t\t\tvar endCount = parseInt(endCountToken.value);\n\t\t\t\t\t} else if (tokens.matchToken(\"and\")) {\n\t\t\t\t\t\tvar unbounded = true;\n\t\t\t\t\t\ttokens.requireToken(\"on\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (eventName === \"intersection\") {\n\t\t\t\t\tvar intersectionSpec = {};\n\t\t\t\t\tif (tokens.matchToken(\"with\")) {\n\t\t\t\t\t\tintersectionSpec[\"with\"] = parser.requireElement(\"expression\", tokens).evaluate();\n\t\t\t\t\t}\n\t\t\t\t\tif (tokens.matchToken(\"having\")) {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif (tokens.matchToken(\"margin\")) {\n\t\t\t\t\t\t\t\tintersectionSpec[\"rootMargin\"] = parser.requireElement(\"stringLike\", tokens).evaluate();\n\t\t\t\t\t\t\t} else if (tokens.matchToken(\"threshold\")) {\n\t\t\t\t\t\t\t\tintersectionSpec[\"threshold\"] = parser.requireElement(\"expression\", tokens).evaluate();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparser.raiseParseError(tokens, \"Unknown intersection config specification\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (tokens.matchToken(\"and\"));\n\t\t\t\t\t}\n\t\t\t\t} else if (eventName === \"mutation\") {\n\t\t\t\t\tvar mutationSpec = {};\n\t\t\t\t\tif (tokens.matchToken(\"of\")) {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif (tokens.matchToken(\"anything\")) {\n\t\t\t\t\t\t\t\tmutationSpec[\"attributes\"] = true;\n\t\t\t\t\t\t\t\tmutationSpec[\"subtree\"] = true;\n\t\t\t\t\t\t\t\tmutationSpec[\"characterData\"] = true;\n\t\t\t\t\t\t\t\tmutationSpec[\"childList\"] = true;\n\t\t\t\t\t\t\t} else if (tokens.matchToken(\"childList\")) {\n\t\t\t\t\t\t\t\tmutationSpec[\"childList\"] = true;\n\t\t\t\t\t\t\t} else if (tokens.matchToken(\"attributes\")) {\n\t\t\t\t\t\t\t\tmutationSpec[\"attributes\"] = true;\n\t\t\t\t\t\t\t\tmutationSpec[\"attributeOldValue\"] = true;\n\t\t\t\t\t\t\t} else if (tokens.matchToken(\"subtree\")) {\n\t\t\t\t\t\t\t\tmutationSpec[\"subtree\"] = true;\n\t\t\t\t\t\t\t} else if (tokens.matchToken(\"characterData\")) {\n\t\t\t\t\t\t\t\tmutationSpec[\"characterData\"] = true;\n\t\t\t\t\t\t\t\tmutationSpec[\"characterDataOldValue\"] = true;\n\t\t\t\t\t\t\t} else if (tokens.currentToken().type === \"ATTRIBUTE_REF\") {\n\t\t\t\t\t\t\t\tvar attribute = tokens.consumeToken();\n\t\t\t\t\t\t\t\tif (mutationSpec[\"attributeFilter\"] == null) {\n\t\t\t\t\t\t\t\t\tmutationSpec[\"attributeFilter\"] = [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (attribute.value.indexOf(\"@\") == 0) {\n\t\t\t\t\t\t\t\t\tmutationSpec[\"attributeFilter\"].push(attribute.value.substring(1));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tparser.raiseParseError(\n\t\t\t\t\t\t\t\t\t\ttokens,\n\t\t\t\t\t\t\t\t\t\t\"Only shorthand attribute references are allowed here\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparser.raiseParseError(tokens, \"Unknown mutation config specification\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (tokens.matchToken(\"or\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmutationSpec[\"attributes\"] = true;\n\t\t\t\t\t\tmutationSpec[\"characterData\"] = true;\n\t\t\t\t\t\tmutationSpec[\"childList\"] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar from = null;\n\t\t\t\tvar elsewhere = false;\n\t\t\t\tif (tokens.matchToken(\"from\")) {\n\t\t\t\t\tif (tokens.matchToken(\"elsewhere\")) {\n\t\t\t\t\t\telsewhere = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrom = parser.parseElement(\"expression\", tokens);\n\t\t\t\t\t\tif (!from) {\n\t\t\t\t\t\t\tparser.raiseParseError(tokens, 'Expected either target value or \"elsewhere\".');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// support both \"elsewhere\" and \"from elsewhere\"\n\t\t\t\tif (from === null && elsewhere === false && tokens.matchToken(\"elsewhere\")) {\n\t\t\t\t\telsewhere = true;\n\t\t\t\t}\n\n\t\t\t\tif (tokens.matchToken(\"in\")) {\n\t\t\t\t\tvar inExpr = parser.parseAnyOf([\"idRef\", \"queryRef\", \"classRef\"], tokens);\n\t\t\t\t}\n\n\t\t\t\tif (tokens.matchToken(\"debounced\")) {\n\t\t\t\t\ttokens.requireToken(\"at\");\n\t\t\t\t\tvar timeExpr = parser.requireElement(\"timeExpression\", tokens);\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tvar debounceTime = timeExpr.evaluate({}); // OK No promise TODO make a literal time expr\n\t\t\t\t} else if (tokens.matchToken(\"throttled\")) {\n\t\t\t\t\ttokens.requireToken(\"at\");\n\t\t\t\t\tvar timeExpr = parser.requireElement(\"timeExpression\", tokens);\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tvar throttleTime = timeExpr.evaluate({}); // OK No promise TODO make a literal time expr\n\t\t\t\t}\n\n\t\t\t\tevents.push({\n\t\t\t\t\texecCount: 0,\n\t\t\t\t\tevery: every,\n\t\t\t\t\ton: eventName,\n\t\t\t\t\targs: args,\n\t\t\t\t\tfilter: filter,\n\t\t\t\t\tfrom: from,\n\t\t\t\t\tinExpr: inExpr,\n\t\t\t\t\telsewhere: elsewhere,\n\t\t\t\t\tstartCount: startCount,\n\t\t\t\t\tendCount: endCount,\n\t\t\t\t\tunbounded: unbounded,\n\t\t\t\t\tdebounceTime: debounceTime,\n\t\t\t\t\tthrottleTime: throttleTime,\n\t\t\t\t\tmutationSpec: mutationSpec,\n\t\t\t\t\tintersectionSpec: intersectionSpec,\n\t\t\t\t\tdebounced: undefined,\n\t\t\t\t\tlastExec: undefined,\n\t\t\t\t});\n\t\t\t} while (tokens.matchToken(\"or\"));\n\n\t\t\tvar queue = [];\n\t\t\tvar queueLast = true;\n\t\t\tif (!every) {\n\t\t\t\tif (tokens.matchToken(\"queue\")) {\n\t\t\t\t\tif (tokens.matchToken(\"all\")) {\n\t\t\t\t\t\tvar queueAll = true;\n\t\t\t\t\t\tvar queueLast = false;\n\t\t\t\t\t} else if (tokens.matchToken(\"first\")) {\n\t\t\t\t\t\tvar queueFirst = true;\n\t\t\t\t\t} else if (tokens.matchToken(\"none\")) {\n\t\t\t\t\t\tvar queueNone = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttokens.requireToken(\"last\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar commandList = parser.parseElement(\"commandList\", tokens);\n\n\t\t\tvar implicitReturn = {\n\t\t\t\ttype: \"implicitReturn\",\n\t\t\t\top: function (context) {\n\t\t\t\t\t// automatically resolve at the end of an event handler if nothing else does\n\t\t\t\t\tcontext.meta.resolve();\n\t\t\t\t\treturn runtime.HALT;\n\t\t\t\t},\n\t\t\t\texecute: function (ctx) {\n\t\t\t\t\t// do nothing\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tif (commandList) {\n\t\t\t\t/** @type {GrammarElement} */\n\t\t\t\tvar start = commandList;\n\n\t\t\t\tvar end = start;\n\t\t\t\twhile (end.next) {\n\t\t\t\t\tend = end.next;\n\t\t\t\t}\n\t\t\t\tend.next = implicitReturn;\n\t\t\t} else {\n\t\t\t\tstart = implicitReturn;\n\t\t\t}\n\n\t\t\tvar onFeature = {\n\t\t\t\tdisplayName: displayName,\n\t\t\t\tevents: events,\n\t\t\t\tstart: start,\n\t\t\t\tevery: every,\n\t\t\t\texecuting: false,\n\t\t\t\texecCount: 0,\n\t\t\t\tqueue: queue,\n\t\t\t\texecute: function (/** @type {Context} */ ctx) {\n\t\t\t\t\tif (this.executing && every === false) {\n\t\t\t\t\t\tif (queueNone || (queueFirst && queue.length > 0)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (queueLast) {\n\t\t\t\t\t\t\tonFeature.queue.length = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonFeature.queue.push(ctx);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonFeature.execCount++;\n\t\t\t\t\tthis.executing = true;\n\t\t\t\t\tctx.meta.resolve = function () {\n\t\t\t\t\t\tonFeature.executing = false;\n\t\t\t\t\t\tvar queued = onFeature.queue.shift();\n\t\t\t\t\t\tif (queued) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tonFeature.execute(queued);\n\t\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tctx.meta.reject = function (err) {\n\t\t\t\t\t\tconsole.error(err.message ? err.message : err);\n\t\t\t\t\t\tvar hypertrace = runtime.getHyperTrace(ctx, err);\n\t\t\t\t\t\tif (hypertrace) {\n\t\t\t\t\t\t\thypertrace.print();\n\t\t\t\t\t\t}\n\t\t\t\t\t\truntime.triggerEvent(ctx.me, \"exception\", {\n\t\t\t\t\t\t\terror: err,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tonFeature.executing = false;\n\t\t\t\t\t\tvar queued = onFeature.queue.shift();\n\t\t\t\t\t\tif (queued) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tonFeature.execute(queued);\n\t\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tstart.execute(ctx);\n\t\t\t\t},\n\t\t\t\tinstall: function (elt, source) {\n\t\t\t\t\tfor (const eventSpec of onFeature.events) {\n\t\t\t\t\t\tvar targets;\n\t\t\t\t\t\tif (eventSpec.elsewhere) {\n\t\t\t\t\t\t\ttargets = [document];\n\t\t\t\t\t\t} else if (eventSpec.from) {\n\t\t\t\t\t\t\ttargets = eventSpec.from.evaluate(runtime.makeContext(elt, onFeature, elt, null));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargets = [elt];\n\t\t\t\t\t\t}\n\t\t\t\t\t\truntime.forEach(targets, function (target) {\n\t\t\t\t\t\t\t// OK NO PROMISE\n\n\t\t\t\t\t\t\tvar eventName = eventSpec.on;\n\t\t\t\t\t\t\tif (eventSpec.mutationSpec) {\n\t\t\t\t\t\t\t\teventName = \"hyperscript:mutation\";\n\t\t\t\t\t\t\t\tconst observer = new MutationObserver(function (mutationList, observer) {\n\t\t\t\t\t\t\t\t\tconsole.log(target, mutationList);\n\t\t\t\t\t\t\t\t\tif (!onFeature.executing) {\n\t\t\t\t\t\t\t\t\t\t_runtime.triggerEvent(target, eventName, {\n\t\t\t\t\t\t\t\t\t\t\tmutationList: mutationList,\n\t\t\t\t\t\t\t\t\t\t\tobserver: observer,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tobserver.observe(target, eventSpec.mutationSpec);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (eventSpec.intersectionSpec) {\n\t\t\t\t\t\t\t\teventName = \"hyperscript:insersection\";\n\t\t\t\t\t\t\t\tconst observer = new IntersectionObserver(function (entries) {\n\t\t\t\t\t\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\t\t\t\t\t\tvar detail = {\n\t\t\t\t\t\t\t\t\t\t\tobserver: observer,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tdetail = mergeObjects(detail, entry);\n\t\t\t\t\t\t\t\t\t\tdetail[\"intersecting\"] = entry.isIntersecting;\n\t\t\t\t\t\t\t\t\t\t_runtime.triggerEvent(target, eventName, detail);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, eventSpec.intersectionSpec);\n\t\t\t\t\t\t\t\tobserver.observe(target);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar addEventListener = target.addEventListener || target.on;\n\t\t\t\t\t\t\taddEventListener.call(target, eventName, function listener(evt) {\n\t\t\t\t\t\t\t\t// OK NO PROMISE\n\t\t\t\t\t\t\t\tif (typeof Node !== 'undefined' && elt instanceof Node && target !== elt && !elt.isConnected) {\n\t\t\t\t\t\t\t\t\ttarget.removeEventListener(eventName, listener);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar ctx = runtime.makeContext(elt, onFeature, elt, evt);\n\t\t\t\t\t\t\t\tif (eventSpec.elsewhere && elt.contains(evt.target)) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (eventSpec.from) {\n\t\t\t\t\t\t\t\t\tctx.result = target;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// establish context\n\t\t\t\t\t\t\t\tfor (const arg of eventSpec.args) {\n\t\t\t\t\t\t\t\t\tctx[arg.value] =\n\t\t\t\t\t\t\t\t\t\tctx.event[arg.value] || ('detail' in ctx.event ? ctx.event['detail'][arg.value] : null);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// apply filter\n\t\t\t\t\t\t\t\tif (eventSpec.filter) {\n\t\t\t\t\t\t\t\t\tvar initialCtx = ctx.meta.context;\n\t\t\t\t\t\t\t\t\tctx.meta.context = ctx.event;\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tvar value = eventSpec.filter.evaluate(ctx); //OK NO PROMISE\n\t\t\t\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\t\t\t\t// match the javascript semantics for if statements\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\t\tctx.meta.context = initialCtx;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (eventSpec.inExpr) {\n\t\t\t\t\t\t\t\t\tvar inElement = evt.target;\n\t\t\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\t\t\tif (inElement.matches && inElement.matches(eventSpec.inExpr.css)) {\n\t\t\t\t\t\t\t\t\t\t\tctx.result = inElement;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tinElement = inElement.parentElement;\n\t\t\t\t\t\t\t\t\t\t\tif (inElement == null) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn; // no match found\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// verify counts\n\t\t\t\t\t\t\t\teventSpec.execCount++;\n\t\t\t\t\t\t\t\tif (eventSpec.startCount) {\n\t\t\t\t\t\t\t\t\tif (eventSpec.endCount) {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\teventSpec.execCount < eventSpec.startCount ||\n\t\t\t\t\t\t\t\t\t\t\teventSpec.execCount > eventSpec.endCount\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (eventSpec.unbounded) {\n\t\t\t\t\t\t\t\t\t\tif (eventSpec.execCount < eventSpec.startCount) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (eventSpec.execCount !== eventSpec.startCount) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//debounce\n\t\t\t\t\t\t\t\tif (eventSpec.debounceTime) {\n\t\t\t\t\t\t\t\t\tif (eventSpec.debounced) {\n\t\t\t\t\t\t\t\t\t\tclearTimeout(eventSpec.debounced);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\teventSpec.debounced = setTimeout(function () {\n\t\t\t\t\t\t\t\t\t\tonFeature.execute(ctx);\n\t\t\t\t\t\t\t\t\t}, eventSpec.debounceTime);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// throttle\n\t\t\t\t\t\t\t\tif (eventSpec.throttleTime) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\teventSpec.lastExec &&\n\t\t\t\t\t\t\t\t\t\tDate.now() < eventSpec.lastExec + eventSpec.throttleTime\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\teventSpec.lastExec = Date.now();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// apply execute\n\t\t\t\t\t\t\t\tonFeature.execute(ctx);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\tparser.setParent(start, onFeature);\n\t\t\treturn onFeature;\n\t\t});\n\n\t\t_parser.addFeature(\"def\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"def\")) return;\n\t\t\tvar functionName = parser.requireElement(\"dotOrColonPath\", tokens);\n\t\t\tvar nameVal = functionName.evaluate(); // OK\n\t\t\tvar nameSpace = nameVal.split(\".\");\n\t\t\tvar funcName = nameSpace.pop();\n\n\t\t\tvar args = [];\n\t\t\tif (tokens.matchOpToken(\"(\")) {\n\t\t\t\tif (tokens.matchOpToken(\")\")) {\n\t\t\t\t\t// emtpy args list\n\t\t\t\t} else {\n\t\t\t\t\tdo {\n\t\t\t\t\t\targs.push(tokens.requireTokenType(\"IDENTIFIER\"));\n\t\t\t\t\t} while (tokens.matchOpToken(\",\"));\n\t\t\t\t\ttokens.requireOpToken(\")\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar start = parser.requireElement(\"commandList\", tokens);\n\t\t\tif (tokens.matchToken(\"catch\")) {\n\t\t\t\tvar errorSymbol = tokens.requireTokenType(\"IDENTIFIER\").value;\n\t\t\t\tvar errorHandler = parser.parseElement(\"commandList\", tokens);\n\t\t\t}\n\t\t\tvar functionFeature = {\n\t\t\t\tdisplayName:\n\t\t\t\t\tfuncName +\n\t\t\t\t\t\"(\" +\n\t\t\t\t\targs\n\t\t\t\t\t\t.map(function (arg) {\n\t\t\t\t\t\t\treturn arg.value;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\", \") +\n\t\t\t\t\t\")\",\n\t\t\t\tname: funcName,\n\t\t\t\targs: args,\n\t\t\t\tstart: start,\n\t\t\t\terrorHandler: errorHandler,\n\t\t\t\terrorSymbol: errorSymbol,\n\t\t\t\tinstall: function (target, source) {\n\t\t\t\t\tvar func = function () {\n\t\t\t\t\t\t// null, worker\n\t\t\t\t\t\tvar ctx = runtime.makeContext(source, functionFeature, target, null);\n\n\t\t\t\t\t\t// install error handler if any\n\t\t\t\t\t\tctx.meta.errorHandler = errorHandler;\n\t\t\t\t\t\tctx.meta.errorSymmbol = errorSymbol;\n\n\t\t\t\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\tvar name = args[i];\n\t\t\t\t\t\t\tvar argumentVal = arguments[i];\n\t\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\t\tctx[name.value] = argumentVal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.meta.caller = arguments[args.length];\n\t\t\t\t\t\tif (ctx.meta.caller) {\n\t\t\t\t\t\t\tctx.meta.callingCommand = ctx.meta.caller.meta.command;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar resolve,\n\t\t\t\t\t\t\treject = null;\n\t\t\t\t\t\tvar promise = new Promise(function (theResolve, theReject) {\n\t\t\t\t\t\t\tresolve = theResolve;\n\t\t\t\t\t\t\treject = theReject;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tstart.execute(ctx);\n\t\t\t\t\t\tif (ctx.meta.returned) {\n\t\t\t\t\t\t\treturn ctx.meta.returnValue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.meta.resolve = resolve;\n\t\t\t\t\t\t\tctx.meta.reject = reject;\n\t\t\t\t\t\t\treturn promise;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tfunc.hyperfunc = true;\n\t\t\t\t\tfunc.hypername = nameVal;\n\t\t\t\t\truntime.assignToNamespace(target, nameSpace, funcName, func);\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tvar implicitReturn = {\n\t\t\t\ttype: \"implicitReturn\",\n\t\t\t\top: function (context) {\n\t\t\t\t\t// automatically return at the end of the function if nothing else does\n\t\t\t\t\tcontext.meta.returned = true;\n\t\t\t\t\tif (context.meta.resolve) {\n\t\t\t\t\t\tcontext.meta.resolve();\n\t\t\t\t\t}\n\t\t\t\t\treturn runtime.HALT;\n\t\t\t\t},\n\t\t\t\texecute: function (context) {\n\t\t\t\t\t// do nothing\n\t\t\t\t},\n\t\t\t};\n\t\t\t// terminate body\n\t\t\tif (start) {\n\t\t\t\tvar end = start;\n\t\t\t\twhile (end.next) {\n\t\t\t\t\tend = end.next;\n\t\t\t\t}\n\t\t\t\tend.next = implicitReturn;\n\t\t\t} else {\n\t\t\t\tfunctionFeature.start = implicitReturn;\n\t\t\t}\n\n\t\t\t// terminate error handler\n\t\t\tif (errorHandler) {\n\t\t\t\tvar end = errorHandler;\n\t\t\t\twhile (end.next) {\n\t\t\t\t\tend = end.next;\n\t\t\t\t}\n\t\t\t\tend.next = implicitReturn;\n\t\t\t}\n\n\t\t\tparser.setParent(start, functionFeature);\n\t\t\treturn functionFeature;\n\t\t});\n\n\t\t_parser.addFeature(\"init\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"init\")) return;\n\t\t\tvar immediately = tokens.matchToken('immediately');\n\n\t\t\tvar start = parser.parseElement(\"commandList\", tokens);\n\t\t\tvar initFeature = {\n\t\t\t\tstart: start,\n\t\t\t\tinstall: function (target, source) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tstart && start.execute(runtime.makeContext(target, initFeature, target, null));\n\t\t\t\t\t}, 0);\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tvar implicitReturn = {\n\t\t\t\ttype: \"implicitReturn\",\n\t\t\t\top: function (context) {\n\t\t\t\t\treturn runtime.HALT;\n\t\t\t\t},\n\t\t\t\texecute: function (context) {\n\t\t\t\t\t// do nothing\n\t\t\t\t},\n\t\t\t};\n\t\t\t// terminate body\n\t\t\tif (start) {\n\t\t\t\tvar end = start;\n\t\t\t\twhile (end.next) {\n\t\t\t\t\tend = end.next;\n\t\t\t\t}\n\t\t\t\tend.next = implicitReturn;\n\t\t\t} else {\n\t\t\t\tinitFeature.start = implicitReturn;\n\t\t\t}\n\t\t\tparser.setParent(start, initFeature);\n\t\t\treturn initFeature;\n\t\t});\n\n\t\t_parser.addFeature(\"worker\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchToken(\"worker\")) {\n\t\t\t\tparser.raiseParseError(\n\t\t\t\t\ttokens,\n\t\t\t\t\t\"In order to use the 'worker' feature, include \" +\n\t\t\t\t\t\t\"the _hyperscript worker plugin. See \" +\n\t\t\t\t\t\t\"https://hyperscript.org/features/worker/ for \" +\n\t\t\t\t\t\t\"more info.\"\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\t_parser.addFeature(\"behavior\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"behavior\")) return;\n\t\t\tvar path = parser.requireElement(\"dotOrColonPath\", tokens).evaluate();\n\t\t\tvar nameSpace = path.split(\".\");\n\t\t\tvar name = nameSpace.pop();\n\n\t\t\tvar formalParams = [];\n\t\t\tif (tokens.matchOpToken(\"(\") && !tokens.matchOpToken(\")\")) {\n\t\t\t\tdo {\n\t\t\t\t\tformalParams.push(tokens.requireTokenType(\"IDENTIFIER\").value);\n\t\t\t\t} while (tokens.matchOpToken(\",\"));\n\t\t\t\ttokens.requireOpToken(\")\");\n\t\t\t}\n\t\t\tvar hs = parser.requireElement(\"hyperscript\", tokens);\n\t\t\tfor (var i = 0; i < hs.features.length; i++) {\n\t\t\t\tvar feature = hs.features[i];\n\t\t\t\tfeature.behavior = path;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tinstall: function (target, source) {\n\t\t\t\t\truntime.assignToNamespace(\n\t\t\t\t\t\tglobalScope.document && globalScope.document.body,\n\t\t\t\t\t\tnameSpace,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tfunction (target, source, innerArgs) {\n\t\t\t\t\t\t\tvar internalData = runtime.getInternalData(target);\n\t\t\t\t\t\t\tvar elementScope = getOrInitObject(internalData, path + \"Scope\");\n\t\t\t\t\t\t\tfor (var i = 0; i < formalParams.length; i++) {\n\t\t\t\t\t\t\t\telementScope[formalParams[i]] = innerArgs[formalParams[i]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ths.apply(target, source);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addFeature(\"install\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"install\")) return;\n\t\t\tvar behaviorPath = parser.requireElement(\"dotOrColonPath\", tokens).evaluate();\n\t\t\tvar behaviorNamespace = behaviorPath.split(\".\");\n\t\t\tvar args = parser.parseElement(\"namedArgumentList\", tokens);\n\n\t\t\tvar installFeature;\n\t\t\treturn (installFeature = {\n\t\t\t\tinstall: function (target, source) {\n\t\t\t\t\truntime.unifiedEval(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\targs: [args],\n\t\t\t\t\t\t\top: function (ctx, args) {\n\t\t\t\t\t\t\t\tvar behavior = globalScope;\n\t\t\t\t\t\t\t\tfor (var i = 0; i < behaviorNamespace.length; i++) {\n\t\t\t\t\t\t\t\t\tbehavior = behavior[behaviorNamespace[i]];\n\t\t\t\t\t\t\t\t\tif (typeof behavior !== \"object\" && typeof behavior !== \"function\")\n\t\t\t\t\t\t\t\t\t\tthrow new Error(\"No such behavior defined as \" + behaviorPath);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (!(behavior instanceof Function))\n\t\t\t\t\t\t\t\t\tthrow new Error(behaviorPath + \" is not a behavior\");\n\n\t\t\t\t\t\t\t\tbehavior(target, source, args);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\truntime.makeContext(target, installFeature, target)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\t_parser.addGrammarElement(\"jsBody\", function (parser, runtime, tokens) {\n\t\t\tvar jsSourceStart = tokens.currentToken().start;\n\t\t\tvar jsLastToken = tokens.currentToken();\n\n\t\t\tvar funcNames = [];\n\t\t\tvar funcName = \"\";\n\t\t\tvar expectFunctionDeclaration = false;\n\t\t\twhile (tokens.hasMore()) {\n\t\t\t\tjsLastToken = tokens.consumeToken();\n\t\t\t\tvar peek = tokens.token(0, true);\n\t\t\t\tif (peek.type === \"IDENTIFIER\" && peek.value === \"end\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (expectFunctionDeclaration) {\n\t\t\t\t\tif (jsLastToken.type === \"IDENTIFIER\" || jsLastToken.type === \"NUMBER\") {\n\t\t\t\t\t\tfuncName += jsLastToken.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (funcName !== \"\") funcNames.push(funcName);\n\t\t\t\t\t\tfuncName = \"\";\n\t\t\t\t\t\texpectFunctionDeclaration = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (jsLastToken.type === \"IDENTIFIER\" && jsLastToken.value === \"function\") {\n\t\t\t\t\texpectFunctionDeclaration = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar jsSourceEnd = jsLastToken.end + 1;\n\n\t\t\treturn {\n\t\t\t\ttype: \"jsBody\",\n\t\t\t\texposedFunctionNames: funcNames,\n\t\t\t\tjsSource: tokens.source.substring(jsSourceStart, jsSourceEnd),\n\t\t\t};\n\t\t});\n\n\t\t_parser.addFeature(\"js\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"js\")) return;\n\t\t\tvar jsBody = parser.requireElement(\"jsBody\", tokens);\n\n\t\t\tvar jsSource =\n\t\t\t\tjsBody.jsSource +\n\t\t\t\t\"\\nreturn { \" +\n\t\t\t\tjsBody.exposedFunctionNames\n\t\t\t\t\t.map(function (name) {\n\t\t\t\t\t\treturn name + \":\" + name;\n\t\t\t\t\t})\n\t\t\t\t\t.join(\",\") +\n\t\t\t\t\" } \";\n\t\t\tvar func = new Function(jsSource);\n\n\t\t\treturn {\n\t\t\t\tjsSource: jsSource,\n\t\t\t\tfunction: func,\n\t\t\t\texposedFunctionNames: jsBody.exposedFunctionNames,\n\t\t\t\tinstall: function () {\n\t\t\t\t\tmergeObjects(globalScope, func());\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\t_parser.addCommand(\"js\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"js\")) return;\n\t\t\t// Parse inputs\n\t\t\tvar inputs = [];\n\t\t\tif (tokens.matchOpToken(\"(\")) {\n\t\t\t\tif (tokens.matchOpToken(\")\")) {\n\t\t\t\t\t// empty input list\n\t\t\t\t} else {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tvar inp = tokens.requireTokenType(\"IDENTIFIER\");\n\t\t\t\t\t\tinputs.push(inp.value);\n\t\t\t\t\t} while (tokens.matchOpToken(\",\"));\n\t\t\t\t\ttokens.requireOpToken(\")\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar jsBody = parser.requireElement(\"jsBody\", tokens);\n\t\t\ttokens.matchToken(\"end\");\n\n\t\t\tvar func = varargConstructor(Function, inputs.concat([jsBody.jsSource]));\n\n\t\t\tvar command = {\n\t\t\t\tjsSource: jsBody.jsSource,\n\t\t\t\tfunction: func,\n\t\t\t\tinputs: inputs,\n\t\t\t\top: function (context) {\n\t\t\t\t\tvar args = [];\n\t\t\t\t\tinputs.forEach(function (input) {\n\t\t\t\t\t\targs.push(runtime.resolveSymbol(input, context, 'default'));\n\t\t\t\t\t});\n\t\t\t\t\tvar result = func.apply(globalScope, args);\n\t\t\t\t\tif (result && typeof result.then === \"function\") {\n\t\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\t\tresult.then(function (actualResult) {\n\t\t\t\t\t\t\t\tcontext.result = actualResult;\n\t\t\t\t\t\t\t\tresolve(runtime.findNext(this, context));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.result = result;\n\t\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn command;\n\t\t});\n\n\t\t_parser.addCommand(\"async\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"async\")) return;\n\t\t\tif (tokens.matchToken(\"do\")) {\n\t\t\t\tvar body = parser.requireElement(\"commandList\", tokens);\n\n\t\t\t\t// Append halt\n\t\t\t\tvar end = body;\n\t\t\t\twhile (end.next) end = end.next;\n\t\t\t\tend.next = runtime.HALT;\n\n\t\t\t\ttokens.requireToken(\"end\");\n\t\t\t} else {\n\t\t\t\tvar body = parser.requireElement(\"command\", tokens);\n\t\t\t}\n\t\t\tvar command = {\n\t\t\t\tbody: body,\n\t\t\t\top: function (context) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tbody.execute(context);\n\t\t\t\t\t});\n\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn command;\n\t\t});\n\n\t\t_parser.addCommand(\"tell\", function (parser, runtime, tokens) {\n\t\t\tvar startToken = tokens.currentToken();\n\t\t\tif (!tokens.matchToken(\"tell\")) return;\n\t\t\tvar value = parser.requireElement(\"expression\", tokens);\n\t\t\tvar body = parser.requireElement(\"commandList\", tokens);\n\t\t\tif (tokens.hasMore()) {\n\t\t\t\ttokens.requireToken(\"end\");\n\t\t\t}\n\t\t\tvar slot = \"tell_\" + startToken.start;\n\t\t\tvar tellCmd = {\n\t\t\t\tvalue: value,\n\t\t\t\tbody: body,\n\t\t\t\targs: [value],\n\t\t\t\tresolveNext: function (context) {\n\t\t\t\t\tvar iterator = context.meta.iterators[slot];\n\t\t\t\t\tif (iterator.index < iterator.value.length) {\n\t\t\t\t\t\tcontext.beingTold = iterator.value[iterator.index++];\n\t\t\t\t\t\treturn body;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// restore original me\n\t\t\t\t\t\tcontext.beingTold = iterator.originalBeingTold;\n\t\t\t\t\t\tif (this.next) {\n\t\t\t\t\t\t\treturn this.next;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn runtime.findNext(this.parent, context);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\top: function (context, value) {\n\t\t\t\t\tif (value == null) {\n\t\t\t\t\t\tvalue = [];\n\t\t\t\t\t} else if (!(Array.isArray(value) || value instanceof NodeList)) {\n\t\t\t\t\t\tvalue = [value];\n\t\t\t\t\t}\n\t\t\t\t\tcontext.meta.iterators[slot] = {\n\t\t\t\t\t\toriginalBeingTold: context.beingTold,\n\t\t\t\t\t\tindex: 0,\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t};\n\t\t\t\t\treturn this.resolveNext(context);\n\t\t\t\t},\n\t\t\t};\n\t\t\tparser.setParent(body, tellCmd);\n\t\t\treturn tellCmd;\n\t\t});\n\n\t\t_parser.addCommand(\"wait\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"wait\")) return;\n\t\t\tvar command;\n\n\t\t\t// wait on event\n\t\t\tif (tokens.matchToken(\"for\")) {\n\t\t\t\ttokens.matchToken(\"a\"); // optional \"a\"\n\t\t\t\tvar events = [];\n\t\t\t\tdo {\n\t\t\t\t\tvar lookahead = tokens.token(0);\n\t\t\t\t\tif (lookahead.type === 'NUMBER' || lookahead.type === 'L_PAREN') {\n\t\t\t\t\t\tevents.push({\n\t\t\t\t\t\t\ttime: parser.requireElement('timeExpression', tokens).evaluate() // TODO: do we want to allow async here?\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tevents.push({\n\t\t\t\t\t\t\tname: _parser.requireElement(\"dotOrColonPath\", tokens, \"Expected event name\").evaluate(),\n\t\t\t\t\t\t\targs: parseEventArgs(tokens),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} while (tokens.matchToken(\"or\"));\n\n\t\t\t\tif (tokens.matchToken(\"from\")) {\n\t\t\t\t\tvar on = parser.requireElement(\"expression\", tokens);\n\t\t\t\t}\n\n\t\t\t\t// wait on event\n\t\t\t\tcommand = {\n\t\t\t\t\tevent: events,\n\t\t\t\t\ton: on,\n\t\t\t\t\targs: [on],\n\t\t\t\t\top: function (context, on) {\n\t\t\t\t\t\tvar target = on ? on : context.me;\n\t\t\t\t\t\tif (!(target instanceof EventTarget))\n\t\t\t\t\t\t\tthrow new Error(\"Not a valid event target: \" + this.on.sourceFor());\n\t\t\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\t\t\tvar resolved = false;\n\t\t\t\t\t\t\tfor (const eventInfo of events) {\n\t\t\t\t\t\t\t\tvar listener = (event) => {\n\t\t\t\t\t\t\t\t\tcontext.result = event;\n\t\t\t\t\t\t\t\t\tfor (const arg of eventInfo.args) {\n\t\t\t\t\t\t\t\t\t\tcontext[arg.value] =\n\t\t\t\t\t\t\t\t\t\t\tevent[arg.value] || (event.detail ? event.detail[arg.value] : null);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!resolved) {\n\t\t\t\t\t\t\t\t\t\tresolved = true;\n\t\t\t\t\t\t\t\t\t\tresolve(runtime.findNext(this, context));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif (eventInfo.name) target.addEventListener(eventInfo.name, listener, { once: true });\n\t\t\t\t\t\t\t\telse if (eventInfo.time) setTimeout(listener, eventInfo.time, eventInfo.time)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn command;\n\t\t\t} else {\n\t\t\t\tvar time;\n\t\t\t\tif (tokens.matchToken(\"a\")) {\n\t\t\t\t\ttokens.requireToken(\"tick\");\n\t\t\t\t\ttime = 0;\n\t\t\t\t} else {\n\t\t\t\t\ttime = _parser.requireElement(\"timeExpression\", tokens);\n\t\t\t\t}\n\n\t\t\t\tcommand = {\n\t\t\t\t\ttype: \"waitCmd\",\n\t\t\t\t\ttime: time,\n\t\t\t\t\targs: [time],\n\t\t\t\t\top: function (context, timeValue) {\n\t\t\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tresolve(runtime.findNext(this, context));\n\t\t\t\t\t\t\t}, timeValue);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\texecute: function (context) {\n\t\t\t\t\t\treturn runtime.unifiedExec(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn command;\n\t\t\t}\n\t\t});\n\n\t\t// TODO  - colon path needs to eventually become part of ruby-style symbols\n\t\t_parser.addGrammarElement(\"dotOrColonPath\", function (parser, runtime, tokens) {\n\t\t\tvar root = tokens.matchTokenType(\"IDENTIFIER\");\n\t\t\tif (root) {\n\t\t\t\tvar path = [root.value];\n\n\t\t\t\tvar separator = tokens.matchOpToken(\".\") || tokens.matchOpToken(\":\");\n\t\t\t\tif (separator) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tpath.push(tokens.requireTokenType(\"IDENTIFIER\").value);\n\t\t\t\t\t} while (tokens.matchOpToken(separator.value));\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"dotOrColonPath\",\n\t\t\t\t\tpath: path,\n\t\t\t\t\tevaluate: function () {\n\t\t\t\t\t\treturn path.join(separator ? separator.value : \"\");\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\t_parser.addGrammarElement(\"eventName\", function (parser, runtime, tokens) {\n\t\t\tvar token;\n\t\t\tif ((token = tokens.matchTokenType(\"STRING\"))) {\n\t\t\t\treturn {\n\t\t\t\t\tevaluate: function() {\n\t\t\t\t\t\treturn token.value;\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn parser.parseElement(\"dotOrColonPath\", tokens);\n\t\t});\n\n\t\t_parser.addCommand(\"send\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"send\")) return;\n\t\t\tvar eventName = parser.requireElement(\"eventName\", tokens);\n\n\t\t\tvar details = parser.parseElement(\"namedArgumentList\", tokens);\n\t\t\tif (tokens.matchToken(\"to\")) {\n\t\t\t\tvar to = parser.requireElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\tvar to = parser.requireElement(\"implicitMeTarget\", tokens);\n\t\t\t}\n\n\t\t\tvar sendCmd = {\n\t\t\t\teventName: eventName,\n\t\t\t\tdetails: details,\n\t\t\t\tto: to,\n\t\t\t\targs: [to, eventName, details],\n\t\t\t\top: function (context, to, eventName, details) {\n\t\t\t\t\truntime.forEach(to, function (target) {\n\t\t\t\t\t\truntime.triggerEvent(target, eventName, details ? details : {});\n\t\t\t\t\t});\n\t\t\t\t\treturn runtime.findNext(sendCmd, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn sendCmd;\n\t\t});\n\n\t\tvar parseReturnFunction = function (parser, runtime, tokens, returnAValue) {\n\t\t\tif (returnAValue) {\n\t\t\t\tvar value = parser.requireElement(\"expression\", tokens);\n\t\t\t}\n\n\t\t\tvar returnCmd = {\n\t\t\t\tvalue: value,\n\t\t\t\targs: [value],\n\t\t\t\top: function (context, value) {\n\t\t\t\t\tvar resolve = context.meta.resolve;\n\t\t\t\t\tcontext.meta.returned = true;\n\t\t\t\t\tif (resolve) {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tresolve(value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.meta.returned = true;\n\t\t\t\t\t\tcontext.meta.returnValue = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn runtime.HALT;\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn returnCmd;\n\t\t};\n\n\t\t_parser.addCommand(\"return\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchToken(\"return\")) {\n\t\t\t\treturn parseReturnFunction(parser, runtime, tokens, true);\n\t\t\t}\n\t\t});\n\n\t\t_parser.addCommand(\"exit\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchToken(\"exit\")) {\n\t\t\t\treturn parseReturnFunction(parser, runtime, tokens, false);\n\t\t\t}\n\t\t});\n\n\t\t_parser.addCommand(\"halt\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchToken(\"halt\")) {\n\t\t\t\tif (tokens.matchToken(\"the\")) {\n\t\t\t\t\ttokens.requireToken(\"event\");\n\t\t\t\t\t// optional possessive\n\t\t\t\t\tif (tokens.matchOpToken(\"'\")) {\n\t\t\t\t\t\ttokens.requireToken(\"s\");\n\t\t\t\t\t}\n\t\t\t\t\tvar keepExecuting = true;\n\t\t\t\t}\n\t\t\t\tif (tokens.matchToken(\"bubbling\")) {\n\t\t\t\t\tvar bubbling = true;\n\t\t\t\t} else if (tokens.matchToken(\"default\")) {\n\t\t\t\t\tvar haltDefault = true;\n\t\t\t\t}\n\t\t\t\tvar exit = parseReturnFunction(parser, runtime, tokens, false);\n\n\t\t\t\tvar haltCmd = {\n\t\t\t\t\tkeepExecuting: true,\n\t\t\t\t\tbubbling: bubbling,\n\t\t\t\t\thaltDefault: haltDefault,\n\t\t\t\t\texit: exit,\n\t\t\t\t\top: function (ctx) {\n\t\t\t\t\t\tif (ctx.event) {\n\t\t\t\t\t\t\tif (bubbling) {\n\t\t\t\t\t\t\t\tctx.event.stopPropagation();\n\t\t\t\t\t\t\t} else if (haltDefault) {\n\t\t\t\t\t\t\t\tctx.event.preventDefault();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tctx.event.stopPropagation();\n\t\t\t\t\t\t\t\tctx.event.preventDefault();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (keepExecuting) {\n\t\t\t\t\t\t\t\treturn runtime.findNext(this, ctx);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn exit;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn haltCmd;\n\t\t\t}\n\t\t});\n\n\t\t_parser.addCommand(\"log\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"log\")) return;\n\t\t\tvar exprs = [parser.parseElement(\"expression\", tokens)];\n\t\t\twhile (tokens.matchOpToken(\",\")) {\n\t\t\t\texprs.push(parser.requireElement(\"expression\", tokens));\n\t\t\t}\n\t\t\tif (tokens.matchToken(\"with\")) {\n\t\t\t\tvar withExpr = parser.requireElement(\"expression\", tokens);\n\t\t\t}\n\t\t\tvar logCmd = {\n\t\t\t\texprs: exprs,\n\t\t\t\twithExpr: withExpr,\n\t\t\t\targs: [withExpr, exprs],\n\t\t\t\top: function (ctx, withExpr, values) {\n\t\t\t\t\tif (withExpr) {\n\t\t\t\t\t\twithExpr.apply(null, values);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log.apply(null, values);\n\t\t\t\t\t}\n\t\t\t\t\treturn runtime.findNext(this, ctx);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn logCmd;\n\t\t});\n\n\t\t_parser.addCommand(\"throw\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"throw\")) return;\n\t\t\tvar expr = parser.requireElement(\"expression\", tokens);\n\t\t\tvar throwCmd = {\n\t\t\t\texpr: expr,\n\t\t\t\targs: [expr],\n\t\t\t\top: function (ctx, expr) {\n\t\t\t\t\truntime.registerHyperTrace(ctx, expr);\n\t\t\t\t\tvar reject = ctx.meta && ctx.meta.reject;\n\t\t\t\t\tif (reject) {\n\t\t\t\t\t\treject(expr);\n\t\t\t\t\t\treturn runtime.HALT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow expr;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn throwCmd;\n\t\t});\n\n\t\tvar parseCallOrGet = function (parser, runtime, tokens) {\n\t\t\tvar expr = parser.requireElement(\"expression\", tokens);\n\t\t\tvar callCmd = {\n\t\t\t\texpr: expr,\n\t\t\t\targs: [expr],\n\t\t\t\top: function (context, result) {\n\t\t\t\t\tcontext.result = result;\n\t\t\t\t\treturn runtime.findNext(callCmd, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn callCmd;\n\t\t};\n\t\t_parser.addCommand(\"call\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"call\")) return;\n\t\t\tvar call = parseCallOrGet(parser, runtime, tokens);\n\t\t\tif (call.expr && call.expr.type !== \"functionCall\") {\n\t\t\t\tparser.raiseParseError(tokens, \"Must be a function invocation\");\n\t\t\t}\n\t\t\treturn call;\n\t\t});\n\t\t_parser.addCommand(\"get\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchToken(\"get\")) {\n\t\t\t\treturn parseCallOrGet(parser, runtime, tokens);\n\t\t\t}\n\t\t});\n\n\t\t_parser.addCommand(\"make\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"make\")) return;\n\t\t\ttokens.matchToken(\"a\") || tokens.matchToken(\"an\");\n\n\t\t\tvar expr = parser.requireElement(\"expression\", tokens);\n\n\t\t\tvar args = [];\n\t\t\tif (expr.type !== \"queryRef\" && tokens.matchToken(\"from\")) {\n\t\t\t\tdo {\n\t\t\t\t\targs.push(parser.requireElement(\"expression\", tokens));\n\t\t\t\t} while (tokens.matchOpToken(\",\"));\n\t\t\t}\n\n\t\t\tif (tokens.matchToken(\"called\")) {\n\t\t\t\tvar name = tokens.requireTokenType(\"IDENTIFIER\").value;\n\t\t\t}\n\n\t\t\tvar command;\n\t\t\tif (expr.type === \"queryRef\") {\n\t\t\t\tcommand = {\n\t\t\t\t\top: function (ctx) {\n\t\t\t\t\t\tvar match,\n\t\t\t\t\t\t\ttagname = \"div\",\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tclasses = [];\n\t\t\t\t\t\tvar re = /(?:(^|#|\\.)([^#\\. ]+))/g;\n\t\t\t\t\t\twhile ((match = re.exec(expr.css))) {\n\t\t\t\t\t\t\tif (match[1] === \"\") tagname = match[2].trim();\n\t\t\t\t\t\t\telse if (match[1] === \"#\") id = match[2].trim();\n\t\t\t\t\t\t\telse classes.push(match[2].trim());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = document.createElement(tagname);\n\t\t\t\t\t\tif (id !== undefined) result.id = id;\n\t\t\t\t\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\t\t\t\t\tvar cls = classes[i];\n\t\t\t\t\t\t\tresult.classList.add(cls)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.result = result;\n\t\t\t\t\t\tif (name) ctx[name] = result;\n\n\t\t\t\t\t\treturn runtime.findNext(this, ctx);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn command;\n\t\t\t} else {\n\t\t\t\tcommand = {\n\t\t\t\t\targs: [expr, args],\n\t\t\t\t\top: function (ctx, expr, args) {\n\t\t\t\t\t\tctx.result = varargConstructor(expr, args);\n\t\t\t\t\t\tif (name) ctx[name] = ctx.result;\n\n\t\t\t\t\t\treturn runtime.findNext(this, ctx);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn command;\n\t\t\t}\n\t\t});\n\n\t\t_parser.addGrammarElement(\"pseudoCommand\", function (parser, runtime, tokens) {\n\n\t\t\ttokens.pushFollow(\"of\");\n\t\t\ttry {\n\t\t\t\tvar expr = parser.requireElement(\"primaryExpression\", tokens);\n\t\t\t} finally {\n\t\t\t\ttokens.popFollow();\n\t\t\t}\n\t\t\tif (expr.type !== \"functionCall\" && expr.root.type !== \"symbol\" && expr.root.root != null) {\n\t\t\t\tparser.raiseParseError(tokens, \"Implicit function calls must start with a simple function\");\n\t\t\t}\n\n\t\t\tvar functionName = expr.root.name;\n\n\t\t\tif (tokens.matchAnyToken(\"to\", \"on\", \"with\", \"into\", \"from\", \"at\", \"of\")) {\n\t\t\t\tvar target = parser.requireElement(\"expression\", tokens);\n\t\t\t} else if (tokens.matchToken(\"me\")) {\n\t\t\t\tvar target = parser.requireElement(\"implicitMeTarget\", tokens);\n\t\t\t}\n\t\t\tvar functionArgs = expr.argExressions;\n\n\t\t\t/** @type {GrammarElement} */\n\t\t\tvar pseudoCommand = {\n\t\t\t\ttype: \"pseudoCommand\",\n\t\t\t\texpr: expr,\n\t\t\t\targs: [target, functionArgs],\n\t\t\t\top: function (context, target, args) {\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tvar func = target[functionName];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar func = runtime.resolveSymbol(functionName, context);\n\t\t\t\t\t}\n\t\t\t\t\tif (func.hyperfunc) {\n\t\t\t\t\t\targs.push(context);\n\t\t\t\t\t}\n\t\t\t\t\tvar result = func.apply(target, args);\n\t\t\t\t\tcontext.result = result;\n\t\t\t\t\treturn runtime.findNext(pseudoCommand, context);\n\t\t\t\t},\n\t\t\t\texecute: function (context) {\n\t\t\t\t\treturn runtime.unifiedExec(this, context);\n\t\t\t\t},\n\t\t\t};\n\n\t\t\treturn pseudoCommand;\n\t\t});\n\n\t\t/**\n\t\t* @param {ParserObject} parser\n\t\t* @param {RuntimeObject} runtime\n\t\t* @param {TokensObject} tokens\n\t\t* @param {*} target\n\t\t* @param {*} value\n\t\t* @returns\n\t\t*/\n\t\tvar makeSetter = function (parser, runtime, tokens, target, value) {\n\t\t\tvar symbolWrite = target.type === \"symbol\";\n\t\t\tvar attributeWrite = target.type === \"attributeRef\";\n\t\t\tif (!attributeWrite && !symbolWrite && target.root == null) {\n\t\t\t\tparser.raiseParseError(tokens, \"Can only put directly into symbols, not references\");\n\t\t\t}\n\n\t\t\tvar root = null;\n\t\t\tvar prop = null;\n\t\t\tif (symbolWrite) {\n\t\t\t\t// root is null\n\t\t\t} else if (attributeWrite) {\n\t\t\t\troot = parser.requireElement(\"implicitMeTarget\", tokens);\n\t\t\t\tvar attribute = target;\n\t\t\t} else {\n\t\t\t\tprop = target.prop ? target.prop.value : null;\n\t\t\t\tvar attribute = target.attribute;\n\t\t\t\troot = target.root;\n\t\t\t}\n\n\t\t\t/** @type {GrammarElement} */\n\t\t\tvar setCmd = {\n\t\t\t\ttarget: target,\n\t\t\t\tsymbolWrite: symbolWrite,\n\t\t\t\tvalue: value,\n\t\t\t\targs: [root, value],\n\t\t\t\top: function (context, root, valueToSet) {\n\t\t\t\t\tif (symbolWrite) {\n\t\t\t\t\t\truntime.setSymbol(target.name, context, target.symbolType, valueToSet);\n\t\t\t\t\t} else {\n\t\t\t\t\t\truntime.implicitLoop(root, function (elt) {\n\t\t\t\t\t\t\tif (attribute) {\n\t\t\t\t\t\t\t\tif (valueToSet == null) {\n\t\t\t\t\t\t\t\t\telt.removeAttribute(attribute.name);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\telt.setAttribute(attribute.name, valueToSet);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\telt[prop] = valueToSet;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn setCmd;\n\t\t};\n\n\t\t_parser.addCommand(\"default\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"default\")) return;\n\t\t\tvar target = parser.requireElement(\"assignableExpression\", tokens);\n\t\t\ttokens.requireToken(\"to\");\n\n\t\t\tvar value = parser.requireElement(\"expression\", tokens);\n\n\t\t\t/** @type {GrammarElement} */\n\t\t\tvar setter = makeSetter(parser, runtime, tokens, target, value);\n\t\t\tvar defaultCmd = {\n\t\t\t\ttarget: target,\n\t\t\t\tvalue: value,\n\t\t\t\tsetter: setter,\n\t\t\t\targs: [target],\n\t\t\t\top: function (context, target) {\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn setter;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\tsetter.parent = defaultCmd;\n\t\t\treturn defaultCmd;\n\t\t});\n\n\t\t_parser.addCommand(\"set\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"set\")) return;\n\t\t\tif (tokens.currentToken().type === \"L_BRACE\") {\n\t\t\t\tvar obj = parser.requireElement(\"objectLiteral\", tokens);\n\t\t\t\ttokens.requireToken(\"on\");\n\t\t\t\tvar target = parser.requireElement(\"expression\", tokens);\n\n\t\t\t\tvar command = {\n\t\t\t\t\tobjectLiteral: obj,\n\t\t\t\t\ttarget: target,\n\t\t\t\t\targs: [obj, target],\n\t\t\t\t\top: function (ctx, obj, target) {\n\t\t\t\t\t\tmergeObjects(target, obj);\n\t\t\t\t\t\treturn runtime.findNext(this, ctx);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn command;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\ttokens.pushFollow(\"to\");\n\t\t\t\tvar target = parser.requireElement(\"assignableExpression\", tokens);\n\t\t\t} finally {\n\t\t\t\ttokens.popFollow();\n\t\t\t}\n\t\t\ttokens.requireToken(\"to\");\n\t\t\tvar value = parser.requireElement(\"expression\", tokens);\n\t\t\treturn makeSetter(parser, runtime, tokens, target, value);\n\t\t});\n\n\t\t_parser.addCommand(\"if\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"if\")) return;\n\t\t\tvar expr = parser.requireElement(\"expression\", tokens);\n\t\t\ttokens.matchToken(\"then\"); // optional 'then'\n\t\t\tvar trueBranch = parser.parseElement(\"commandList\", tokens);\n\t\t\tif (tokens.matchToken(\"else\")) {\n\t\t\t\tvar falseBranch = parser.parseElement(\"commandList\", tokens);\n\t\t\t}\n\t\t\tif (tokens.hasMore()) {\n\t\t\t\ttokens.requireToken(\"end\");\n\t\t\t}\n\n\t\t\t/** @type {GrammarElement} */\n\t\t\tvar ifCmd = {\n\t\t\t\texpr: expr,\n\t\t\t\ttrueBranch: trueBranch,\n\t\t\t\tfalseBranch: falseBranch,\n\t\t\t\targs: [expr],\n\t\t\t\top: function (context, exprValue) {\n\t\t\t\t\tif (exprValue) {\n\t\t\t\t\t\treturn trueBranch;\n\t\t\t\t\t} else if (falseBranch) {\n\t\t\t\t\t\treturn falseBranch;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\tparser.setParent(trueBranch, ifCmd);\n\t\t\tparser.setParent(falseBranch, ifCmd);\n\t\t\treturn ifCmd;\n\t\t});\n\n\t\tvar parseRepeatExpression = function (parser, tokens, runtime, startedWithForToken) {\n\t\t\tvar innerStartToken = tokens.currentToken();\n\t\t\tvar identifier;\n\t\t\tif (tokens.matchToken(\"for\") || startedWithForToken) {\n\t\t\t\tvar identifierToken = tokens.requireTokenType(\"IDENTIFIER\");\n\t\t\t\tidentifier = identifierToken.value;\n\t\t\t\ttokens.requireToken(\"in\");\n\t\t\t\tvar expression = parser.requireElement(\"expression\", tokens);\n\t\t\t} else if (tokens.matchToken(\"in\")) {\n\t\t\t\tidentifier = \"it\";\n\t\t\t\tvar expression = parser.requireElement(\"expression\", tokens);\n\t\t\t} else if (tokens.matchToken(\"while\")) {\n\t\t\t\tvar whileExpr = parser.requireElement(\"expression\", tokens);\n\t\t\t} else if (tokens.matchToken(\"until\")) {\n\t\t\t\tvar isUntil = true;\n\t\t\t\tif (tokens.matchToken(\"event\")) {\n\t\t\t\t\tvar evt = _parser.requireElement(\"dotOrColonPath\", tokens, \"Expected event name\");\n\t\t\t\t\tif (tokens.matchToken(\"from\")) {\n\t\t\t\t\t\tvar on = parser.requireElement(\"expression\", tokens);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar whileExpr = parser.requireElement(\"expression\", tokens);\n\t\t\t\t}\n\t\t\t} else if (tokens.matchTokenType(\"NUMBER\")) {\n\t\t\t\tvar times = parseFloat(innerStartToken.value);\n\t\t\t\ttokens.requireToken(\"times\");\n\t\t\t} else {\n\t\t\t\ttokens.matchToken(\"forever\"); // consume optional forever\n\t\t\t\tvar forever = true;\n\t\t\t}\n\n\t\t\tif (tokens.matchToken(\"index\")) {\n\t\t\t\tvar identifierToken = tokens.requireTokenType(\"IDENTIFIER\");\n\t\t\t\tvar indexIdentifier = identifierToken.value;\n\t\t\t}\n\n\t\t\tvar loop = parser.parseElement(\"commandList\", tokens);\n\t\t\tif (loop && evt) {\n\t\t\t\t// if this is an event based loop, wait a tick at the end of the loop so that\n\t\t\t\t// events have a chance to trigger in the loop condition o_O)))\n\t\t\t\tvar last = loop;\n\t\t\t\twhile (last.next) {\n\t\t\t\t\tlast = last.next;\n\t\t\t\t}\n\t\t\t\tvar waitATick = {\n\t\t\t\t\ttype: \"waitATick\",\n\t\t\t\t\top: function () {\n\t\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tresolve(runtime.findNext(waitATick));\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tlast.next = waitATick;\n\t\t\t}\n\t\t\tif (tokens.hasMore()) {\n\t\t\t\ttokens.requireToken(\"end\");\n\t\t\t}\n\n\t\t\tif (identifier == null) {\n\t\t\t\tidentifier = \"_implicit_repeat_\" + innerStartToken.start;\n\t\t\t\tvar slot = identifier;\n\t\t\t} else {\n\t\t\t\tvar slot = identifier + \"_\" + innerStartToken.start;\n\t\t\t}\n\n\t\t\tvar repeatCmd = {\n\t\t\t\tidentifier: identifier,\n\t\t\t\tindexIdentifier: indexIdentifier,\n\t\t\t\tslot: slot,\n\t\t\t\texpression: expression,\n\t\t\t\tforever: forever,\n\t\t\t\ttimes: times,\n\t\t\t\tuntil: isUntil,\n\t\t\t\tevent: evt,\n\t\t\t\ton: on,\n\t\t\t\twhileExpr: whileExpr,\n\t\t\t\tresolveNext: function () {\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tloop: loop,\n\t\t\t\targs: [whileExpr],\n\t\t\t\top: function (context, whileValue) {\n\t\t\t\t\tvar iteratorInfo = context.meta.iterators[slot];\n\t\t\t\t\tvar keepLooping = false;\n\t\t\t\t\tvar loopVal = null;\n\t\t\t\t\tif (this.forever) {\n\t\t\t\t\t\tkeepLooping = true;\n\t\t\t\t\t} else if (this.until) {\n\t\t\t\t\t\tif (evt) {\n\t\t\t\t\t\t\tkeepLooping = context.meta.iterators[slot].eventFired === false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tkeepLooping = whileValue !== true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (whileExpr) {\n\t\t\t\t\t\tkeepLooping = whileValue;\n\t\t\t\t\t} else if (times) {\n\t\t\t\t\t\tkeepLooping = iteratorInfo.index < this.times;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar nextValFromIterator = iteratorInfo.iterator.next();\n\t\t\t\t\t\tkeepLooping = !nextValFromIterator.done;\n\t\t\t\t\t\tloopVal = nextValFromIterator.value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (keepLooping) {\n\t\t\t\t\t\tif (iteratorInfo.value) {\n\t\t\t\t\t\t\tcontext.result = context[identifier] = loopVal;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.result = iteratorInfo.index;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (indexIdentifier) {\n\t\t\t\t\t\t\tcontext[indexIdentifier] = iteratorInfo.index;\n\t\t\t\t\t\t}\n\t\t\t\t\t\titeratorInfo.index++;\n\t\t\t\t\t\treturn loop;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.meta.iterators[slot] = null;\n\t\t\t\t\t\treturn runtime.findNext(this.parent, context);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\tparser.setParent(loop, repeatCmd);\n\t\t\tvar repeatInit = {\n\t\t\t\tname: \"repeatInit\",\n\t\t\t\targs: [expression, evt, on],\n\t\t\t\top: function (context, value, event, on) {\n\t\t\t\t\tvar iteratorInfo = {\n\t\t\t\t\t\tindex: 0,\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\teventFired: false,\n\t\t\t\t\t};\n\t\t\t\t\tcontext.meta.iterators[slot] = iteratorInfo;\n\t\t\t\t\tif (value && value[Symbol.iterator]) {\n\t\t\t\t\t\titeratorInfo.iterator = value[Symbol.iterator]();\n\t\t\t\t\t}\n\t\t\t\t\tif (evt) {\n\t\t\t\t\t\tvar target = on || context.me;\n\t\t\t\t\t\ttarget.addEventListener(\n\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\tfunction (e) {\n\t\t\t\t\t\t\t\tcontext.meta.iterators[slot].eventFired = true;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ once: true }\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn repeatCmd; // continue to loop\n\t\t\t\t},\n\t\t\t\texecute: function (context) {\n\t\t\t\t\treturn runtime.unifiedExec(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\tparser.setParent(repeatCmd, repeatInit);\n\t\t\treturn repeatInit;\n\t\t};\n\n\t\t_parser.addCommand(\"repeat\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchToken(\"repeat\")) {\n\t\t\t\treturn parseRepeatExpression(parser, tokens, runtime, false);\n\t\t\t}\n\t\t});\n\n\t\t_parser.addCommand(\"for\", function (parser, runtime, tokens) {\n\t\t\tif (tokens.matchToken(\"for\")) {\n\t\t\t\treturn parseRepeatExpression(parser, tokens, runtime, true);\n\t\t\t}\n\t\t});\n\n\t\t_parser.addGrammarElement(\"stringLike\", function (parser, runtime, tokens) {\n\t\t\treturn _parser.parseAnyOf([\"string\", \"nakedString\"], tokens);\n\t\t});\n\n\t\t_parser.addCommand(\"append\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"append\")) return;\n\t\t\tvar target = null;\n\t\t\tvar prop = null;\n\n\t\t\tvar value = parser.requireElement(\"expression\", tokens);\n\n\t\t\tif (tokens.matchToken(\"to\")) {\n\t\t\t\ttarget = parser.requireElement(\"expression\", tokens);\n\t\t\t}\n\n\t\t\tif (target == null) {\n\t\t\t\tprop = \"result\";\n\t\t\t} else if (target.type === \"symbol\") {\n\t\t\t\tprop = target.name;\n\t\t\t} else if (target.type === \"propertyAccess\") {\n\t\t\t\tprop = target.prop.value;\n\t\t\t} else {\n\t\t\t\tthrow \"Unable to append to \" + target.type;\n\t\t\t}\n\n\t\t\tvar command = {\n\t\t\t\tvalue: value,\n\t\t\t\ttarget: target,\n\t\t\t\targs: [value],\n\t\t\t\top: function (context, value) {\n\t\t\t\t\tif (Array.isArray(context[prop])) {\n\t\t\t\t\t\tcontext[prop].push(value);\n\t\t\t\t\t} else if (context[prop] instanceof Element) {\n\t\t\t\t\t\tif (typeof value == \"string\") {\n\t\t\t\t\t\t\tcontext[prop].innerHTML += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow \"Don't know how to append non-strings to an HTML Element yet.\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext[prop] += value;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t},\n\t\t\t\texecute: function (context) {\n\t\t\t\t\treturn runtime.unifiedExec(this, context/*, value, target*/);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn command;\n\t\t});\n\n\t\t_parser.addCommand(\"increment\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"increment\")) return;\n\t\t\tvar amount;\n\n\t\t\t// This is optional.  Defaults to \"result\"\n\t\t\tvar target = parser.parseElement(\"assignableExpression\", tokens);\n\n\t\t\t// This is optional. Defaults to 1.\n\t\t\tif (tokens.matchToken(\"by\")) {\n\t\t\t\tamount = parser.requireElement(\"expression\", tokens);\n\t\t\t}\n\n\t\t\tvar command = {\n\t\t\t\ttarget: target,\n\t\t\t\targs: [target, amount],\n\t\t\t\top: function (context, targetValue, amount) {\n\t\t\t\t\ttargetValue = targetValue ? parseFloat(targetValue) : 0;\n\t\t\t\t\tamount = amount ? parseFloat(amount) : 1;\n\t\t\t\t\tvar newValue = targetValue + amount;\n\t\t\t\t\tvar setter = makeSetter(parser, runtime, tokens, target, newValue);\n\t\t\t\t\tcontext.result = newValue;\n\t\t\t\t\tsetter.parent = this;\n\t\t\t\t\treturn setter;\n\t\t\t\t},\n\t\t\t\texecute: function (context) {\n\t\t\t\t\treturn runtime.unifiedExec(this, context/* , target, amount */);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn command;\n\t\t});\n\n\t\t_parser.addCommand(\"decrement\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"decrement\")) return;\n\t\t\tvar amount;\n\n\t\t\t// This is optional.  Defaults to \"result\"\n\t\t\tvar target = parser.parseElement(\"assignableExpression\", tokens);\n\n\t\t\t// This is optional. Defaults to 1.\n\t\t\tif (tokens.matchToken(\"by\")) {\n\t\t\t\tamount = parser.requireElement(\"expression\", tokens);\n\t\t\t}\n\n\t\t\tvar command = {\n\t\t\t\ttarget: target,\n\t\t\t\targs: [target, amount],\n\t\t\t\top: function (context, targetValue, amount) {\n\t\t\t\t\ttargetValue = targetValue ? parseFloat(targetValue) : 0;\n\t\t\t\t\tamount = amount ? parseFloat(amount) : 1;\n\t\t\t\t\tvar newValue = targetValue - amount;\n\t\t\t\t\tvar setter = makeSetter(parser, runtime, tokens, target, newValue);\n\t\t\t\t\tcontext.result = newValue;\n\t\t\t\t\tsetter.parent = this;\n\t\t\t\t\treturn setter;\n\t\t\t\t},\n\t\t\t\texecute: function (context) {\n\t\t\t\t\treturn runtime.unifiedExec(this, context/*, target, amount*/);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn command;\n\t\t});\n\n\t\t_parser.addCommand(\"fetch\", function (parser, runtime, tokens) {\n\t\t\tif (!tokens.matchToken(\"fetch\")) return;\n\t\t\tvar url = parser.requireElement(\"stringLike\", tokens);\n\t\t\tvar args = parser.parseElement(\"objectLiteral\", tokens);\n\n\t\t\tvar type = \"text\";\n\t\t\tvar conversion;\n\t\t\tif (tokens.matchToken(\"as\")) {\n\t\t\t\ttokens.matchToken(\"a\") || tokens.matchToken(\"an\");\n\t\t\t\tif (tokens.matchToken(\"json\") || tokens.matchToken(\"Object\")) {\n\t\t\t\t\ttype = \"json\";\n\t\t\t\t} else if (tokens.matchToken(\"response\")) {\n\t\t\t\t\ttype = \"response\";\n\t\t\t\t} else if (tokens.matchToken(\"html\")) {\n\t\t\t\t\ttype = \"html\";\n\t\t\t\t} else if (tokens.matchToken(\"text\")) {\n\t\t\t\t\t// default, ignore\n\t\t\t\t} else {\n\t\t\t\t\tconversion = parser.requireElement(\"dotOrColonPath\", tokens).evaluate();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {GrammarElement} */\n\t\t\tvar fetchCmd = {\n\t\t\t\turl: url,\n\t\t\t\targExpressions: args,\n\t\t\t\targs: [url, args],\n\t\t\t\top: function (context, url, args) {\n\t\t\t\t\tvar detail = args || {};\n\t\t\t\t\tdetail[\"sentBy\"] = context.me;\n\t\t\t\t\truntime.triggerEvent(context.me, \"hyperscript:beforeFetch\", detail);\n\t\t\t\t\targs = detail;\n\t\t\t\t\treturn fetch(url, args)\n\t\t\t\t\t\t.then(function (resp) {\n\t\t\t\t\t\t\tif (type === \"response\") {\n\t\t\t\t\t\t\t\tcontext.result = resp;\n\t\t\t\t\t\t\t\treturn runtime.findNext(fetchCmd, context);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (type === \"json\") {\n\t\t\t\t\t\t\t\treturn resp.json().then(function (result) {\n\t\t\t\t\t\t\t\t\tcontext.result = result;\n\t\t\t\t\t\t\t\t\treturn runtime.findNext(fetchCmd, context);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn resp.text().then(function (result) {\n\t\t\t\t\t\t\t\tif (conversion) result = runtime.convertValue(result, conversion);\n\n\t\t\t\t\t\t\t\tif (type === \"html\") result = runtime.convertValue(result, \"Fragment\");\n\n\t\t\t\t\t\t\t\tcontext.result = result;\n\t\t\t\t\t\t\t\treturn runtime.findNext(fetchCmd, context);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(function (reason) {\n\t\t\t\t\t\t\truntime.triggerEvent(context.me, \"fetch:error\", {\n\t\t\t\t\t\t\t\treason: reason,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthrow reason;\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn fetchCmd;\n\t\t});\n\t}\n\n\t//====================================================================\n\t// Initialization\n\t//====================================================================\n\tfunction ready(fn) {\n\t\tif (document.readyState !== \"loading\") {\n\t\t\tsetTimeout(fn);\n\t\t} else {\n\t\t\tdocument.addEventListener(\"DOMContentLoaded\", fn);\n\t\t}\n\t}\n\n\tfunction getMetaConfig() {\n\t\t/** @type {HTMLMetaElement} */\n\t\tvar element = document.querySelector('meta[name=\"htmx-config\"]');\n\t\tif (element) {\n\t\t\treturn parseJSON(element.content);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tfunction mergeMetaConfig() {\n\t\tvar metaConfig = getMetaConfig();\n\t\tif (metaConfig) {\n\t\t\t_hyperscript.config = mergeObjects(_hyperscript.config, metaConfig);\n\t\t}\n\t}\n\n\tif (\"document\" in globalScope) {\n\t\t/** @type {HTMLScriptElement[]} */\n\t\tvar scripts = Array.from(document.querySelectorAll(\"script[type='text/hyperscript'][src]\"))\n\t\tPromise.all(\n\t\t\tscripts.map(function (script) {\n\t\t\t\treturn fetch(script.src)\n\t\t\t\t\t.then(function (res) {\n\t\t\t\t\t\treturn res.text();\n\t\t\t\t\t})\n\t\t\t\t\t.then(function (code) {\n\t\t\t\t\t\treturn _runtime.evaluate(code);\n\t\t\t\t\t});\n\t\t\t})\n\t\t).then(function () {\n\t\t\tready(function () {\n\t\t\t\tmergeMetaConfig();\n\t\t\t\t_runtime.processNode(document.documentElement);\n\t\t\t\tdocument.addEventListener(\"htmx:load\", function (/** @type {CustomEvent} */ evt) {\n\t\t\t\t\t_runtime.processNode(evt.detail.elt);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t//====================================================================\n\t// API\n\t//====================================================================\n\t/** @type {HyperscriptObject} */\n\texport default _hyperscript = mergeObjects(\n\t\tfunction (str, ctx) {\n\t\t\treturn _runtime.evaluate(str, ctx); //OK\n\t\t},\n\t\t{\n\t\t\tinternals: {\n\t\t\t\tlexer: _lexer,\n\t\t\t\tparser: _parser,\n\t\t\t\truntime: _runtime,\n\t\t\t},\n\t\t\tElementCollection: ElementCollection,\n\t\t\taddFeature: function (keyword, definition) {\n\t\t\t\t_parser.addFeature(keyword, definition);\n\t\t\t},\n\t\t\taddCommand: function (keyword, definition) {\n\t\t\t\t_parser.addCommand(keyword, definition);\n\t\t\t},\n\t\t\taddLeafExpression: function (name, definition) {\n\t\t\t\t_parser.addLeafExpression(name, definition);\n\t\t\t},\n\t\t\taddIndirectExpression: function (name, definition) {\n\t\t\t\t_parser.addIndirectExpression(name, definition);\n\t\t\t},\n\t\t\tevaluate: _runtime.evaluate.bind(_runtime),\n\t\t\tparse: _runtime.parse.bind(_runtime),\n\t\t\tprocessNode: _runtime.processNode.bind(_runtime),\n\t\t\tconfig: {\n\t\t\t\tattributes: \"_, script, data-script\",\n\t\t\t\tdefaultTransition: \"all 500ms ease-in\",\n\t\t\t\tdisableSelector: \"[disable-scripting], [data-disable-scripting]\",\n\t\t\t\tconversions: CONVERSIONS,\n\t\t\t},\n\t\t}\n\t);\n","///=========================================================================\n/// This module provides the core web functionality for hyperscript\n///=========================================================================\n\nimport { mergeObjects } from \"./utils\"\n\n/**\n * @param {HyperscriptObject} _hyperscript\n */\nexport default _hyperscript => {\n\t_hyperscript.addCommand(\"settle\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"settle\")) {\n\t\t\tif (!parser.commandBoundary(tokens.currentToken())) {\n\t\t\t\tvar on = parser.requireElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\tvar on = parser.requireElement(\"implicitMeTarget\", tokens);\n\t\t\t}\n\n\t\t\tvar settleCommand = {\n\t\t\t\ttype: \"settleCmd\",\n\t\t\t\targs: [on],\n\t\t\t\top: function (context, on) {\n\t\t\t\t\tvar resolve = null;\n\t\t\t\t\tvar resolved = false;\n\t\t\t\t\tvar transitionStarted = false;\n\n\t\t\t\t\tvar promise = new Promise(function (r) {\n\t\t\t\t\t\tresolve = r;\n\t\t\t\t\t});\n\n\t\t\t\t\t// listen for a transition begin\n\t\t\t\t\ton.addEventListener(\n\t\t\t\t\t\t\"transitionstart\",\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\ttransitionStarted = true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ once: true }\n\t\t\t\t\t);\n\n\t\t\t\t\t// if no transition begins in 500ms, cancel\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tif (!transitionStarted && !resolved) {\n\t\t\t\t\t\t\tresolve(runtime.findNext(settleCommand, context));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 500);\n\n\t\t\t\t\t// continue on a transition emd\n\t\t\t\t\ton.addEventListener(\n\t\t\t\t\t\t\"transitionend\",\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tif (!resolved) {\n\t\t\t\t\t\t\t\tresolve(runtime.findNext(settleCommand, context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ once: true }\n\t\t\t\t\t);\n\t\t\t\t\treturn promise;\n\t\t\t\t},\n\t\t\t\texecute: function (context) {\n\t\t\t\t\treturn runtime.unifiedExec(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn settleCommand;\n\t\t}\n\t});\n\n\t_hyperscript.addCommand(\"add\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"add\")) {\n\t\t\tvar classRef = parser.parseElement(\"classRef\", tokens);\n\t\t\tvar attributeRef = null;\n\t\t\tvar cssDeclaration = null;\n\t\t\tif (classRef == null) {\n\t\t\t\tattributeRef = parser.parseElement(\"attributeRef\", tokens);\n\t\t\t\tif (attributeRef == null) {\n\t\t\t\t\tcssDeclaration = parser.parseElement(\"styleLiteral\", tokens);\n\t\t\t\t\tif (cssDeclaration == null) {\n\t\t\t\t\t\tparser.raiseParseError(tokens, \"Expected either a class reference or attribute expression\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar classRefs = [classRef];\n\t\t\t\twhile ((classRef = parser.parseElement(\"classRef\", tokens))) {\n\t\t\t\t\tclassRefs.push(classRef);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tokens.matchToken(\"to\")) {\n\t\t\t\tvar to = parser.requireElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\tvar to = parser.parseElement(\"implicitMeTarget\", tokens);\n\t\t\t}\n\n\t\t\tif (classRefs) {\n\t\t\t\treturn {\n\t\t\t\t\tclassRefs: classRefs,\n\t\t\t\t\tto: to,\n\t\t\t\t\targs: [to, classRefs],\n\t\t\t\t\top: function (context, to, classRefs) {\n\t\t\t\t\t\truntime.forEach(classRefs, function (classRef) {\n\t\t\t\t\t\t\truntime.forEach(to, function (target) {\n\t\t\t\t\t\t\t\tif (target instanceof Element) target.classList.add(classRef.className);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else if (attributeRef) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"addCmd\",\n\t\t\t\t\tattributeRef: attributeRef,\n\t\t\t\t\tto: to,\n\t\t\t\t\targs: [to],\n\t\t\t\t\top: function (context, to, attrRef) {\n\t\t\t\t\t\truntime.forEach(to, function (target) {\n\t\t\t\t\t\t\ttarget.setAttribute(attributeRef.name, attributeRef.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t\t},\n\t\t\t\t\texecute: function (ctx) {\n\t\t\t\t\t\treturn runtime.unifiedExec(this, ctx);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"addCmd\",\n\t\t\t\t\tcssDeclaration: cssDeclaration,\n\t\t\t\t\tto: to,\n\t\t\t\t\targs: [to, cssDeclaration],\n\t\t\t\t\top: function (context, to, css) {\n\t\t\t\t\t\truntime.forEach(to, function (target) {\n\t\t\t\t\t\t\ttarget.style.cssText += css;\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t\t},\n\t\t\t\t\texecute: function (ctx) {\n\t\t\t\t\t\treturn runtime.unifiedExec(this, ctx);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t});\n\n\t_hyperscript.internals.parser.addGrammarElement(\"styleLiteral\", function (parser, runtime, tokens) {\n\t\tif (!tokens.matchOpToken(\"{\")) return;\n\n\t\tvar stringParts = [\"\"]\n\t\tvar exprs = []\n\n\t\twhile (tokens.hasMore()) {\n\t\t\tif (tokens.matchOpToken(\"\\\\\")) {\n\t\t\t\ttokens.consumeToken();\n\t\t\t} else if (tokens.matchOpToken(\"}\")) {\n\t\t\t\tbreak;\n\t\t\t} else if (tokens.matchToken(\"$\")) {\n\t\t\t\tvar opencurly = tokens.matchOpToken(\"{\");\n\t\t\t\tvar expr = parser.parseElement(\"expression\", tokens);\n\t\t\t\tif (opencurly) tokens.requireOpToken(\"}\");\n\n\t\t\t\texprs.push(expr)\n\t\t\t\tstringParts.push(\"\")\n\t\t\t} else {\n\t\t\t\tvar tok = tokens.consumeToken();\n\t\t\t\tstringParts[stringParts.length-1] += tokens.source.substring(tok.start, tok.end);\n\t\t\t}\n\n\t\t\tstringParts[stringParts.length-1] += tokens.lastWhitespace();\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"styleLiteral\",\n\t\t\targs: [exprs],\n\t\t\top: function (ctx, exprs) {\n\t\t\t\tvar rv = \"\";\n\n\t\t\t\tstringParts.forEach(function (part, idx) {\n\t\t\t\t\trv += part;\n\t\t\t\t\tif (idx in exprs) rv += exprs[idx];\n\t\t\t\t});\n\n\t\t\t\treturn rv;\n\t\t\t},\n\t\t\tevaluate: function(ctx) {\n\t\t\t\treturn runtime.unifiedEval(this, ctx);\n\t\t\t}\n\t\t}\n\t})\n\n\t_hyperscript.addCommand(\"remove\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"remove\")) {\n\t\t\tvar classRef = parser.parseElement(\"classRef\", tokens);\n\t\t\tvar attributeRef = null;\n\t\t\tvar elementExpr = null;\n\t\t\tif (classRef == null) {\n\t\t\t\tattributeRef = parser.parseElement(\"attributeRef\", tokens);\n\t\t\t\tif (attributeRef == null) {\n\t\t\t\t\telementExpr = parser.parseElement(\"expression\", tokens);\n\t\t\t\t\tif (elementExpr == null) {\n\t\t\t\t\t\tparser.raiseParseError(\n\t\t\t\t\t\t\ttokens,\n\t\t\t\t\t\t\t\"Expected either a class reference, attribute expression or value expression\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar classRefs = [classRef];\n\t\t\t\twhile ((classRef = parser.parseElement(\"classRef\", tokens))) {\n\t\t\t\t\tclassRefs.push(classRef);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tokens.matchToken(\"from\")) {\n\t\t\t\tvar from = parser.requireElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\tvar from = parser.requireElement(\"implicitMeTarget\", tokens);\n\t\t\t}\n\n\t\t\tif (elementExpr) {\n\t\t\t\treturn {\n\t\t\t\t\telementExpr: elementExpr,\n\t\t\t\t\tfrom: from,\n\t\t\t\t\targs: [elementExpr],\n\t\t\t\t\top: function (context, element) {\n\t\t\t\t\t\truntime.forEach(element, function (target) {\n\t\t\t\t\t\t\tif (target.parentElement) {\n\t\t\t\t\t\t\t\ttarget.parentElement.removeChild(target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tclassRefs: classRefs,\n\t\t\t\t\tattributeRef: attributeRef,\n\t\t\t\t\telementExpr: elementExpr,\n\t\t\t\t\tfrom: from,\n\t\t\t\t\targs: [classRefs, from],\n\t\t\t\t\top: function (context, classRefs, from) {\n\t\t\t\t\t\tif (classRefs) {\n\t\t\t\t\t\t\truntime.forEach(classRefs, function (classRef) {\n\t\t\t\t\t\t\t\truntime.implicitLoop(from, function (target) {\n\t\t\t\t\t\t\t\t\ttarget.classList.remove(classRef.className);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\truntime.forEach(from, function (target) {\n\t\t\t\t\t\t\t\ttarget.removeAttribute(attributeRef.name);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t});\n\n\t_hyperscript.addCommand(\"toggle\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"toggle\")) {\n\t\t\tif (tokens.matchToken(\"between\")) {\n\t\t\t\tvar between = true;\n\t\t\t\tvar classRef = parser.parseElement(\"classRef\", tokens);\n\t\t\t\ttokens.requireToken(\"and\");\n\t\t\t\tvar classRef2 = parser.requireElement(\"classRef\", tokens);\n\t\t\t} else {\n\t\t\t\tvar classRef = parser.parseElement(\"classRef\", tokens);\n\t\t\t\tvar attributeRef = null;\n\t\t\t\tif (classRef == null) {\n\t\t\t\t\tattributeRef = parser.parseElement(\"attributeRef\", tokens);\n\t\t\t\t\tif (attributeRef == null) {\n\t\t\t\t\t\tparser.raiseParseError(tokens, \"Expected either a class reference or attribute expression\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar classRefs = [classRef];\n\t\t\t\t\twhile ((classRef = parser.parseElement(\"classRef\", tokens))) {\n\t\t\t\t\t\tclassRefs.push(classRef);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tokens.matchToken(\"on\")) {\n\t\t\t\tvar on = parser.requireElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\tvar on = parser.requireElement(\"implicitMeTarget\", tokens);\n\t\t\t}\n\n\t\t\tif (tokens.matchToken(\"for\")) {\n\t\t\t\tvar time = parser.requireElement(\"timeExpression\", tokens);\n\t\t\t} else if (tokens.matchToken(\"until\")) {\n\t\t\t\tvar evt = parser.requireElement(\"dotOrColonPath\", tokens, \"Expected event name\");\n\t\t\t\tif (tokens.matchToken(\"from\")) {\n\t\t\t\t\tvar from = parser.requireElement(\"expression\", tokens);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar toggleCmd = {\n\t\t\t\tclassRef: classRef,\n\t\t\t\tclassRef2: classRef2,\n\t\t\t\tclassRefs: classRefs,\n\t\t\t\tattributeRef: attributeRef,\n\t\t\t\ton: on,\n\t\t\t\ttime: time,\n\t\t\t\tevt: evt,\n\t\t\t\tfrom: from,\n\t\t\t\ttoggle: function (on, classRef, classRef2, classRefs) {\n\t\t\t\t\tif (between) {\n\t\t\t\t\t\truntime.forEach(on, function (target) {\n\t\t\t\t\t\t\tif (target.classList.contains(classRef.className)) {\n\t\t\t\t\t\t\t\ttarget.classList.remove(classRef.className);\n\t\t\t\t\t\t\t\ttarget.classList.add(classRef2.className);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.classList.add(classRef.className);\n\t\t\t\t\t\t\t\ttarget.classList.remove(classRef2.className);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (classRefs) {\n\t\t\t\t\t\truntime.forEach(classRefs, function (classRef) {\n\t\t\t\t\t\t\truntime.forEach(on, function (target) {\n\t\t\t\t\t\t\t\ttarget.classList.toggle(classRef.className);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\truntime.forEach(on, function (target) {\n\t\t\t\t\t\t\tif (target.hasAttribute(attributeRef.name)) {\n\t\t\t\t\t\t\t\ttarget.removeAttribute(attributeRef.name);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.setAttribute(attributeRef.name, attributeRef.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\targs: [on, time, evt, from, classRef, classRef2, classRefs],\n\t\t\t\top: function (context, on, time, evt, from, classRef, classRef2, classRefs) {\n\t\t\t\t\tif (time) {\n\t\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\t\ttoggleCmd.toggle(on, classRef, classRef2, classRefs);\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\ttoggleCmd.toggle(on, classRef, classRef2, classRefs);\n\t\t\t\t\t\t\t\tresolve(runtime.findNext(toggleCmd, context));\n\t\t\t\t\t\t\t}, time);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (evt) {\n\t\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\t\tvar target = from || context.me;\n\t\t\t\t\t\t\ttarget.addEventListener(\n\t\t\t\t\t\t\t\tevt,\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\ttoggleCmd.toggle(on, classRef, classRef2, classRefs);\n\t\t\t\t\t\t\t\t\tresolve(runtime.findNext(toggleCmd, context));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ once: true }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttoggleCmd.toggle(on, classRef, classRef2, classRefs);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.toggle(on, classRef, classRef2, classRefs);\n\t\t\t\t\t\treturn runtime.findNext(toggleCmd, context);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn toggleCmd;\n\t\t}\n\t});\n\n\tvar HIDE_SHOW_STRATEGIES = {\n\t\tdisplay: function (op, element, arg) {\n\t\t\tif (arg) {\n\t\t\t\telement.style.display = arg;\n\t\t\t} else if (op === \"hide\") {\n\t\t\t\telement.style.display = \"none\";\n\t\t\t} else {\n\t\t\t\telement.style.display = \"block\";\n\t\t\t}\n\t\t},\n\t\tvisibility: function (op, element, arg) {\n\t\t\tif (arg) {\n\t\t\t\telement.style.visibility = arg;\n\t\t\t} else if (op === \"hide\") {\n\t\t\t\telement.style.visibility = \"hidden\";\n\t\t\t} else {\n\t\t\t\telement.style.visibility = \"visible\";\n\t\t\t}\n\t\t},\n\t\topacity: function (op, element, arg) {\n\t\t\tif (arg) {\n\t\t\t\telement.style.opacity = arg;\n\t\t\t} else if (op === \"hide\") {\n\t\t\t\telement.style.opacity = \"0\";\n\t\t\t} else {\n\t\t\t\telement.style.opacity = \"1\";\n\t\t\t}\n\t\t},\n\t};\n\n\tvar parseShowHideTarget = function (parser, runtime, tokens) {\n\t\tvar target;\n\t\tvar currentTokenValue = tokens.currentToken();\n\t\tif (currentTokenValue.value === \"with\" || parser.commandBoundary(currentTokenValue)) {\n\t\t\ttarget = parser.parseElement(\"implicitMeTarget\", tokens);\n\t\t} else {\n\t\t\ttarget = parser.parseElement(\"expression\", tokens);\n\t\t}\n\t\treturn target;\n\t};\n\n\tvar resolveStrategy = function (parser, tokens, name) {\n\t\tvar configDefault = _hyperscript.config.defaultHideShowStrategy;\n\t\tvar strategies = HIDE_SHOW_STRATEGIES;\n\t\tif (_hyperscript.config.hideShowStrategies) {\n\t\t\tstrategies = mergeObjects(strategies, _hyperscript.config.hideShowStrategies); // merge in user provided strategies\n\t\t}\n\t\tname = name || configDefault || \"display\";\n\t\tvar value = strategies[name];\n\t\tif (value == null) {\n\t\t\tparser.raiseParseError(tokens, \"Unknown show/hide strategy : \" + name);\n\t\t}\n\t\treturn value;\n\t};\n\n\t_hyperscript.addCommand(\"hide\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"hide\")) {\n\t\t\tvar target = parseShowHideTarget(parser, runtime, tokens);\n\n\t\t\tvar name = null;\n\t\t\tif (tokens.matchToken(\"with\")) {\n\t\t\t\tname = tokens.requireTokenType(\"IDENTIFIER\").value;\n\t\t\t}\n\t\t\tvar hideShowStrategy = resolveStrategy(parser, tokens, name);\n\n\t\t\treturn {\n\t\t\t\ttarget: target,\n\t\t\t\targs: [target],\n\t\t\t\top: function (ctx, target) {\n\t\t\t\t\truntime.forEach(target, function (elt) {\n\t\t\t\t\t\thideShowStrategy(\"hide\", elt);\n\t\t\t\t\t});\n\t\t\t\t\treturn runtime.findNext(this, ctx);\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t});\n\n\t_hyperscript.addCommand(\"show\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"show\")) {\n\t\t\tvar target = parseShowHideTarget(parser, runtime, tokens);\n\n\t\t\tvar name = null;\n\t\t\tif (tokens.matchToken(\"with\")) {\n\t\t\t\tname = tokens.requireTokenType(\"IDENTIFIER\").value;\n\t\t\t}\n\t\t\tvar arg = null;\n\t\t\tif (tokens.matchOpToken(\":\")) {\n\t\t\t\tvar tokenArr = tokens.consumeUntilWhitespace();\n\t\t\t\ttokens.matchTokenType(\"WHITESPACE\");\n\t\t\t\targ = tokenArr\n\t\t\t\t\t.map(function (t) {\n\t\t\t\t\t\treturn t.value;\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\");\n\t\t\t}\n\t\t\tvar hideShowStrategy = resolveStrategy(parser, tokens, name);\n\n\t\t\treturn {\n\t\t\t\ttarget: target,\n\t\t\t\targs: [target],\n\t\t\t\top: function (ctx, target) {\n\t\t\t\t\truntime.forEach(target, function (elt) {\n\t\t\t\t\t\thideShowStrategy(\"show\", elt, arg);\n\t\t\t\t\t});\n\t\t\t\t\treturn runtime.findNext(this, ctx);\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t});\n\n\t_hyperscript.addCommand(\"trigger\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"trigger\")) {\n\t\t\tvar eventName = parser.requireElement(\"eventName\", tokens);\n\t\t\tvar details = parser.parseElement(\"namedArgumentList\", tokens);\n\n\t\t\tvar triggerCmd = {\n\t\t\t\teventName: eventName,\n\t\t\t\tdetails: details,\n\t\t\t\targs: [eventName, details],\n\t\t\t\top: function (context, eventNameStr, details) {\n\t\t\t\t\truntime.triggerEvent(context.me, eventNameStr, details ? details : {});\n\t\t\t\t\treturn runtime.findNext(triggerCmd, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn triggerCmd;\n\t\t}\n\t});\n\n\t_hyperscript.addCommand(\"take\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"take\")) {\n\t\t\tvar classRef = parser.parseElement(\"classRef\", tokens);\n\n\t\t\tif (tokens.matchToken(\"from\")) {\n\t\t\t\tvar from = parser.requireElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\tvar from = classRef;\n\t\t\t}\n\n\t\t\tif (tokens.matchToken(\"for\")) {\n\t\t\t\tvar forElt = parser.requireElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\tvar forElt = parser.requireElement(\"implicitMeTarget\", tokens);\n\t\t\t}\n\n\t\t\tvar takeCmd = {\n\t\t\t\tclassRef: classRef,\n\t\t\t\tfrom: from,\n\t\t\t\tforElt: forElt,\n\t\t\t\targs: [classRef, from, forElt],\n\t\t\t\top: function (context, eltColl, from, forElt) {\n\t\t\t\t\tvar clazz = eltColl.className;\n\t\t\t\t\truntime.forEach(from, function (target) {\n\t\t\t\t\t\ttarget.classList.remove(clazz);\n\t\t\t\t\t});\n\t\t\t\t\truntime.forEach(forElt, function (target) {\n\t\t\t\t\t\ttarget.classList.add(clazz);\n\t\t\t\t\t});\n\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn takeCmd;\n\t\t}\n\t});\n\n\tfunction putInto(runtime, context, prop, valueToPut) {\n\t\tif (prop) {\n\t\t\tvar value = runtime.resolveSymbol(prop, context);\n\t\t} else {\n\t\t\tvar value = context;\n\t\t}\n\t\tif (value instanceof Element || value instanceof HTMLDocument) {\n\t\t\twhile (value.firstChild) value.removeChild(value.firstChild);\n\t\t\tvalue.append(_hyperscript.internals.runtime.convertValue(valueToPut, \"Fragment\"));\n\t\t} else {\n\t\t\tif (prop) {\n\t\t\t\truntime.setSymbol(prop, context, null, valueToPut);\n\t\t\t} else {\n\t\t\t\tthrow \"Don't know how to put a value into \" + typeof context;\n\t\t\t}\n\t\t}\n\t}\n\n\t_hyperscript.addCommand(\"put\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"put\")) {\n\t\t\tvar value = parser.requireElement(\"expression\", tokens);\n\n\t\t\tvar operationToken = tokens.matchAnyToken(\"into\", \"before\", \"after\");\n\n\t\t\tif (operationToken == null && tokens.matchToken(\"at\")) {\n\t\t\t\ttokens.matchToken(\"the\"); // optional \"the\"\n\t\t\t\toperationToken = tokens.matchAnyToken(\"start\", \"end\");\n\t\t\t\ttokens.requireToken(\"of\");\n\t\t\t}\n\n\t\t\tif (operationToken == null) {\n\t\t\t\tparser.raiseParseError(tokens, \"Expected one of 'into', 'before', 'at start of', 'at end of', 'after'\");\n\t\t\t}\n\t\t\tvar target = parser.requireElement(\"expression\", tokens);\n\n\t\t\tvar operation = operationToken.value;\n\n\t\t\tvar symbolWrite = false;\n\t\t\tvar root = null;\n\t\t\tvar prop = null;\n\t\t\tif (target.prop && target.root && operation === \"into\") {\n\t\t\t\tprop = target.prop.value;\n\t\t\t\troot = target.root;\n\t\t\t} else if (target.type === \"symbol\" && operation === \"into\") {\n\t\t\t\tsymbolWrite = true;\n\t\t\t\tprop = target.name;\n\t\t\t} else if (target.type === \"attributeRef\" && operation === \"into\") {\n\t\t\t\tvar attributeWrite = true;\n\t\t\t\tprop = target.name;\n\t\t\t\troot = parser.requireElement(\"implicitMeTarget\", tokens);\n\t\t\t} else if (target.type === \"attributeRefAccess\" && operation === \"into\") {\n\t\t\t\tvar attributeWrite = true;\n\t\t\t\tprop = target.attribute.name;\n\t\t\t\troot = target.root;\n\t\t\t} else {\n\t\t\t\troot = target;\n\t\t\t}\n\n\t\t\tvar putCmd = {\n\t\t\t\ttarget: target,\n\t\t\t\toperation: operation,\n\t\t\t\tsymbolWrite: symbolWrite,\n\t\t\t\tvalue: value,\n\t\t\t\targs: [root, value],\n\t\t\t\top: function (context, root, valueToPut) {\n\t\t\t\t\tif (symbolWrite) {\n\t\t\t\t\t\tputInto(runtime, context, prop, valueToPut);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (operation === \"into\") {\n\t\t\t\t\t\t\tif (attributeWrite) {\n\t\t\t\t\t\t\t\truntime.implicitLoop(root, function (elt) {\n\t\t\t\t\t\t\t\t\telt.setAttribute(prop, valueToPut);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\truntime.implicitLoop(root, function (elt) {\n\t\t\t\t\t\t\t\t\tputInto(runtime, elt, prop, valueToPut);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar op =\n\t\t\t\t\t\t\t\toperation === \"before\"\n\t\t\t\t\t\t\t\t\t? Element.prototype.before\n\t\t\t\t\t\t\t\t\t: operation === \"after\"\n\t\t\t\t\t\t\t\t\t? Element.prototype.after\n\t\t\t\t\t\t\t\t\t: operation === \"start\"\n\t\t\t\t\t\t\t\t\t? Element.prototype.prepend\n\t\t\t\t\t\t\t\t\t: operation === \"end\"\n\t\t\t\t\t\t\t\t\t? Element.prototype.append\n\t\t\t\t\t\t\t\t\t: Element.prototype.append; // unreachable\n\n\t\t\t\t\t\t\truntime.implicitLoop(root, function (elt) {\n\t\t\t\t\t\t\t\top.call(\n\t\t\t\t\t\t\t\t\telt,\n\t\t\t\t\t\t\t\t\tvalueToPut instanceof Node\n\t\t\t\t\t\t\t\t\t\t? valueToPut\n\t\t\t\t\t\t\t\t\t\t: runtime.convertValue(valueToPut, \"Fragment\")\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn runtime.findNext(this, context);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn putCmd;\n\t\t}\n\t});\n\n\tfunction parsePseudopossessiveTarget(parser, runtime, tokens) {\n\t\tvar targets;\n\t\tif (\n\t\t\ttokens.matchToken(\"the\") ||\n\t\t\ttokens.matchToken(\"element\") ||\n\t\t\ttokens.matchToken(\"elements\") ||\n\t\t\ttokens.currentToken().type === \"CLASS_REF\" ||\n\t\t\ttokens.currentToken().type === \"ID_REF\" ||\n\t\t\t(tokens.currentToken().op && tokens.currentToken().value === \"<\")\n\t\t) {\n\t\t\tparser.possessivesDisabled = true;\n\t\t\ttry {\n\t\t\t\ttargets = parser.parseElement(\"expression\", tokens);\n\t\t\t} finally {\n\t\t\t\tdelete parser.possessivesDisabled;\n\t\t\t}\n\t\t\t// optional possessive\n\t\t\tif (tokens.matchOpToken(\"'\")) {\n\t\t\t\ttokens.requireToken(\"s\");\n\t\t\t}\n\t\t} else if (tokens.currentToken().type === \"IDENTIFIER\" && tokens.currentToken().value === \"its\") {\n\t\t\tvar identifier = tokens.matchToken(\"its\");\n\t\t\ttargets = {\n\t\t\t\ttype: \"pseudopossessiveIts\",\n\t\t\t\ttoken: identifier,\n\t\t\t\tname: identifier.value,\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.resolveSymbol(\"it\", context);\n\t\t\t\t},\n\t\t\t};\n\t\t} else {\n\t\t\ttokens.matchToken(\"my\") || tokens.matchToken(\"me\"); // consume optional 'my'\n\t\t\ttargets = parser.parseElement(\"implicitMeTarget\", tokens);\n\t\t}\n\t\treturn targets;\n\t}\n\n\t_hyperscript.addCommand(\"transition\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"transition\")) {\n\t\t\tvar targets = parsePseudopossessiveTarget(parser, runtime, tokens);\n\n\t\t\tvar properties = [];\n\t\t\tvar from = [];\n\t\t\tvar to = [];\n\t\t\tvar currentToken = tokens.currentToken();\n\t\t\twhile (\n\t\t\t\t!parser.commandBoundary(currentToken) &&\n\t\t\t\tcurrentToken.value !== \"over\" &&\n\t\t\t\tcurrentToken.value !== \"using\"\n\t\t\t) {\n\t\t\t\tproperties.push(parser.requireElement(\"stringLike\", tokens));\n\n\t\t\t\tif (tokens.matchToken(\"from\")) {\n\t\t\t\t\tfrom.push(parser.requireElement(\"stringLike\", tokens));\n\t\t\t\t} else {\n\t\t\t\t\tfrom.push(null);\n\t\t\t\t}\n\t\t\t\ttokens.requireToken(\"to\");\n\t\t\t\tto.push(parser.requireElement(\"stringLike\", tokens));\n\t\t\t\tcurrentToken = tokens.currentToken();\n\t\t\t}\n\t\t\tif (tokens.matchToken(\"over\")) {\n\t\t\t\tvar over = parser.requireElement(\"timeExpression\", tokens);\n\t\t\t} else if (tokens.matchToken(\"using\")) {\n\t\t\t\tvar using = parser.requireElement(\"expression\", tokens);\n\t\t\t}\n\n\t\t\tvar transition = {\n\t\t\t\tto: to,\n\t\t\t\targs: [targets, properties, from, to, using, over],\n\t\t\t\top: function (context, targets, properties, from, to, using, over) {\n\t\t\t\t\tvar promises = [];\n\t\t\t\t\truntime.forEach(targets, function (target) {\n\t\t\t\t\t\tvar promise = new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\tvar initialTransition = target.style.transition;\n\t\t\t\t\t\t\tif (over) {\n\t\t\t\t\t\t\t\ttarget.style.transition = \"all \" + over + \"ms ease-in\";\n\t\t\t\t\t\t\t} else if (using) {\n\t\t\t\t\t\t\t\ttarget.style.transition = using;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.style.transition = _hyperscript.config.defaultTransition;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar internalData = runtime.getInternalData(target);\n\t\t\t\t\t\t\tvar computedStyles = getComputedStyle(target);\n\n\t\t\t\t\t\t\tvar initialStyles = {};\n\t\t\t\t\t\t\tfor (var i = 0; i < computedStyles.length; i++) {\n\t\t\t\t\t\t\t\tvar name = computedStyles[i];\n\t\t\t\t\t\t\t\tvar initialValue = computedStyles[name];\n\t\t\t\t\t\t\t\tinitialStyles[name] = initialValue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// store intitial values\n\t\t\t\t\t\t\tif (!internalData.initalStyles) {\n\t\t\t\t\t\t\t\tinternalData.initalStyles = initialStyles;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor (var i = 0; i < properties.length; i++) {\n\t\t\t\t\t\t\t\tvar property = properties[i];\n\t\t\t\t\t\t\t\tvar fromVal = from[i];\n\t\t\t\t\t\t\t\tif (fromVal == \"computed\" || fromVal == null) {\n\t\t\t\t\t\t\t\t\ttarget.style[property] = initialStyles[property];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttarget.style[property] = fromVal;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// console.log(\"transition started\", transition);\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tvar autoProps = [];\n\t\t\t\t\t\t\t\tfor (var i = 0; i < properties.length; i++) {\n\t\t\t\t\t\t\t\t\tvar property = properties[i];\n\t\t\t\t\t\t\t\t\tvar toVal = to[i];\n\t\t\t\t\t\t\t\t\tif (toVal == \"initial\") {\n\t\t\t\t\t\t\t\t\t\tvar propertyValue = internalData.initalStyles[property];\n\t\t\t\t\t\t\t\t\t\ttarget.style[property] = propertyValue;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttarget.style[property] = toVal;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// console.log(\"set\", property, \"to\", target.style[property], \"on\", target, \"value passed in : \", toVal);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget.addEventListener(\n\t\t\t\t\t\t\t\t\t\"transitionend\",\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t// console.log(\"transition ended\", transition);\n\t\t\t\t\t\t\t\t\t\ttarget.style.transition = initialTransition;\n\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ once: true }\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}, 5);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpromises.push(promise);\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.all(promises).then(function () {\n\t\t\t\t\t\treturn runtime.findNext(transition, context);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn transition;\n\t\t}\n\t});\n\n\t_hyperscript.addCommand(\"measure\", function (parser, runtime, tokens) {\n\t\tif (!tokens.matchToken(\"measure\")) return;\n\n\t\tvar target = parsePseudopossessiveTarget(parser, runtime, tokens);\n\n\t\tvar propsToMeasure = [];\n\t\tif (!parser.commandBoundary(tokens.currentToken()))\n\t\t\tdo {\n\t\t\t\tpropsToMeasure.push(tokens.matchTokenType(\"IDENTIFIER\").value);\n\t\t\t} while (tokens.matchOpToken(\",\"));\n\n\t\treturn {\n\t\t\tproperties: propsToMeasure,\n\t\t\targs: [target],\n\t\t\top: function (ctx, target) {\n\t\t\t\tif (0 in target) target = target[0]; // not measuring multiple elts\n\t\t\t\tvar rect = target.getBoundingClientRect();\n\t\t\t\tvar scroll = {\n\t\t\t\t\ttop: target.scrollTop,\n\t\t\t\t\tleft: target.scrollLeft,\n\t\t\t\t\ttopMax: target.scrollTopMax,\n\t\t\t\t\tleftMax: target.scrollLeftMax,\n\t\t\t\t\theight: target.scrollHeight,\n\t\t\t\t\twidth: target.scrollWidth,\n\t\t\t\t};\n\n\t\t\t\tctx.result = {\n\t\t\t\t\tx: rect.x,\n\t\t\t\t\ty: rect.y,\n\t\t\t\t\tleft: rect.left,\n\t\t\t\t\ttop: rect.top,\n\t\t\t\t\tright: rect.right,\n\t\t\t\t\tbottom: rect.bottom,\n\t\t\t\t\twidth: rect.width,\n\t\t\t\t\theight: rect.height,\n\t\t\t\t\tbounds: rect,\n\n\t\t\t\t\tscrollLeft: scroll.left,\n\t\t\t\t\tscrollTop: scroll.top,\n\t\t\t\t\tscrollLeftMax: scroll.leftMax,\n\t\t\t\t\tscrollTopMax: scroll.topMax,\n\t\t\t\t\tscrollWidth: scroll.width,\n\t\t\t\t\tscrollHeight: scroll.height,\n\t\t\t\t\tscroll: scroll,\n\t\t\t\t};\n\n\t\t\t\truntime.forEach(propsToMeasure, function (prop) {\n\t\t\t\t\tif (prop in ctx.result) ctx[prop] = ctx.result[prop];\n\t\t\t\t\telse throw \"No such measurement as \" + prop;\n\t\t\t\t});\n\n\t\t\t\treturn runtime.findNext(this, ctx);\n\t\t\t},\n\t\t};\n\t});\n\n\t_hyperscript.addLeafExpression(\"closestExpr\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"closest\")) {\n\t\t\tif (tokens.matchToken(\"parent\")) {\n\t\t\t\tvar parentSearch = true;\n\t\t\t}\n\n\t\t\tvar css = null;\n\t\t\tif (tokens.currentToken().type === \"ATTRIBUTE_REF\") {\n\t\t\t\tvar attributeRef = parser.parseElement(\"attributeRefAccess\", tokens, null);\n\t\t\t\tcss = \"[\" + attributeRef.attribute.name + \"]\";\n\t\t\t}\n\n\t\t\tif (css == null) {\n\t\t\t\tvar expr = parser.parseElement(\"expression\", tokens);\n\t\t\t\tif (expr.css == null) {\n\t\t\t\t\tparser.raiseParseError(tokens, \"Expected a CSS expression\");\n\t\t\t\t} else {\n\t\t\t\t\tcss = expr.css;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tokens.matchToken(\"to\")) {\n\t\t\t\tvar to = parser.parseElement(\"expression\", tokens);\n\t\t\t} else {\n\t\t\t\tvar to = parser.parseElement(\"implicitMeTarget\", tokens);\n\t\t\t}\n\n\t\t\tvar closestExpr = {\n\t\t\t\ttype: \"closestExpr\",\n\t\t\t\tparentSearch: parentSearch,\n\t\t\t\texpr: expr,\n\t\t\t\tcss: css,\n\t\t\t\tto: to,\n\t\t\t\targs: [to],\n\t\t\t\top: function (ctx, to) {\n\t\t\t\t\tif (to == null || !(to instanceof Element)) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (parentSearch) {\n\t\t\t\t\t\t\tvar node = to.parentElement ? to.parentElement.closest(css) : null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar node = to.closest(css);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tevaluate: function (context) {\n\t\t\t\t\treturn runtime.unifiedEval(this, context);\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tif (attributeRef) {\n\t\t\t\tattributeRef.root = closestExpr;\n\t\t\t\tattributeRef.args = [closestExpr];\n\t\t\t\treturn attributeRef;\n\t\t\t} else {\n\t\t\t\treturn closestExpr;\n\t\t\t}\n\t\t}\n\t});\n\n\t_hyperscript.addCommand(\"go\", function (parser, runtime, tokens) {\n\t\tif (tokens.matchToken(\"go\")) {\n\t\t\tif (tokens.matchToken(\"back\")) {\n\t\t\t\tvar back = true;\n\t\t\t} else {\n\t\t\t\ttokens.matchToken(\"to\");\n\t\t\t\tif (tokens.matchToken(\"url\")) {\n\t\t\t\t\tvar target = parser.requireElement(\"stringLike\", tokens);\n\t\t\t\t\tvar url = true;\n\t\t\t\t\tif (tokens.matchToken(\"in\")) {\n\t\t\t\t\t\ttokens.requireToken(\"new\");\n\t\t\t\t\t\ttokens.requireToken(\"window\");\n\t\t\t\t\t\tvar newWindow = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttokens.matchToken(\"the\"); // optional the\n\t\t\t\t\tvar verticalPosition = tokens.matchAnyToken(\"top\", \"bottom\", \"middle\");\n\t\t\t\t\tvar horizontalPosition = tokens.matchAnyToken(\"left\", \"center\", \"right\");\n\t\t\t\t\tif (verticalPosition || horizontalPosition) {\n\t\t\t\t\t\ttokens.requireToken(\"of\");\n\t\t\t\t\t}\n\t\t\t\t\tvar target = parser.requireElement(\"expression\", tokens);\n\t\t\t\t\tvar smoothness = tokens.matchAnyToken(\"smoothly\", \"instantly\");\n\n\t\t\t\t\tvar scrollOptions = {};\n\t\t\t\t\tif (verticalPosition) {\n\t\t\t\t\t\tif (verticalPosition.value === \"top\") {\n\t\t\t\t\t\t\tscrollOptions.block = \"start\";\n\t\t\t\t\t\t} else if (verticalPosition.value === \"bottom\") {\n\t\t\t\t\t\t\tscrollOptions.block = \"end\";\n\t\t\t\t\t\t} else if (verticalPosition.value === \"middle\") {\n\t\t\t\t\t\t\tscrollOptions.block = \"center\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (horizontalPosition) {\n\t\t\t\t\t\tif (horizontalPosition.value === \"left\") {\n\t\t\t\t\t\t\tscrollOptions.inline = \"start\";\n\t\t\t\t\t\t} else if (horizontalPosition.value === \"center\") {\n\t\t\t\t\t\t\tscrollOptions.inline = \"center\";\n\t\t\t\t\t\t} else if (horizontalPosition.value === \"right\") {\n\t\t\t\t\t\t\tscrollOptions.inline = \"end\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (smoothness) {\n\t\t\t\t\t\tif (smoothness.value === \"smoothly\") {\n\t\t\t\t\t\t\tscrollOptions.behavior = \"smooth\";\n\t\t\t\t\t\t} else if (smoothness.value === \"instantly\") {\n\t\t\t\t\t\t\tscrollOptions.behavior = \"instant\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar goCmd = {\n\t\t\t\ttarget: target,\n\t\t\t\targs: [target],\n\t\t\t\top: function (ctx, to) {\n\t\t\t\t\tif (back) {\n\t\t\t\t\t\twindow.history.back();\n\t\t\t\t\t} else if (url) {\n\t\t\t\t\t\tif (to) {\n\t\t\t\t\t\t\tif (to.indexOf(\"#\") === 0 && !newWindow) {\n\t\t\t\t\t\t\t\twindow.location.href = to;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twindow.open(to, newWindow ? \"_blank\" : null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\truntime.forEach(to, function (target) {\n\t\t\t\t\t\t\ttarget.scrollIntoView(scrollOptions);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn runtime.findNext(goCmd);\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn goCmd;\n\t\t}\n\t});\n\n\t_hyperscript.config.conversions[\"Values\"] = function (/** @type {Node | NodeList} */ node) {\n\t\t/** @type Object<string,string | string[]> */\n\t\tvar result = {};\n\n\t\tvar implicitLoop = _hyperscript.internals.runtime.implicitLoop;\n\n\t\timplicitLoop(node, function (/** @type HTMLInputElement */ node) {\n\t\t\t// Try to get a value directly from this node\n\t\t\tvar input = getInputInfo(node);\n\n\t\t\tif (input !== undefined) {\n\t\t\t\tresult[input.name] = input.value;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, try to query all child elements of this node that *should* contain values.\n\t\t\tif (node.querySelectorAll != undefined) {\n\t\t\t\tvar children = node.querySelectorAll(\"input,select,textarea\");\n\t\t\t\tchildren.forEach(appendValue);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\n\t\t/**\n\t\t * @param {HTMLInputElement} node\n\t\t */\n\t\tfunction appendValue(node) {\n\t\t\tvar info = getInputInfo(node);\n\n\t\t\tif (info == undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If there is no value already stored in this space.\n\t\t\tif (result[info.name] == undefined) {\n\t\t\t\tresult[info.name] = info.value;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Array.isArray(result[info.name]) && Array.isArray(info.value)) {\n\t\t\t\tresult[info.name] = [].concat(result[info.name], info.value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {HTMLInputElement} node\n\t\t * @returns {{name:string, value:string | string[]} | undefined}\n\t\t */\n\t\tfunction getInputInfo(node) {\n\t\t\ttry {\n\t\t\t\t/** @type {{name: string, value: string | string[]}}*/\n\t\t\t\tvar result = {\n\t\t\t\t\tname: node.name,\n\t\t\t\t\tvalue: node.value,\n\t\t\t\t};\n\n\t\t\t\tif (result.name == undefined || result.value == undefined) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tif (node.type == \"radio\" && node.checked == false) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tif (node.type == \"checkbox\") {\n\t\t\t\t\tif (node.checked == false) {\n\t\t\t\t\t\tresult.value = undefined;\n\t\t\t\t\t} else if (typeof result.value === \"string\") {\n\t\t\t\t\t\tresult.value = [result.value];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (node.type == \"select-multiple\") {\n\t\t\t\t\t/** @type {NodeListOf<HTMLSelectElement>} */\n\t\t\t\t\tvar selected = node.querySelectorAll(\"option[selected]\");\n\n\t\t\t\t\tresult.value = [];\n\t\t\t\t\tfor (var index = 0; index < selected.length; index++) {\n\t\t\t\t\t\tresult.value.push(selected[index].value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} catch (e) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t};\n\n\t_hyperscript.config.conversions[\"HTML\"] = function (value) {\n\t\tvar toHTML = /** @returns {string}*/ function (/** @type any*/ value) {\n\t\t\tif (value instanceof Array) {\n\t\t\t\treturn value\n\t\t\t\t\t.map(function (item) {\n\t\t\t\t\t\treturn toHTML(item);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\");\n\t\t\t}\n\n\t\t\tif (value instanceof HTMLElement) {\n\t\t\t\treturn value.outerHTML;\n\t\t\t}\n\n\t\t\tif (value instanceof NodeList) {\n\t\t\t\tvar result = \"\";\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tvar node = value[i];\n\t\t\t\t\tif (node instanceof HTMLElement) {\n\t\t\t\t\t\tresult += node.outerHTML;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tif (value.toString) {\n\t\t\t\treturn value.toString();\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t};\n\n\t\treturn toHTML(value);\n\t};\n\n\t_hyperscript.config.conversions[\"Fragment\"] = function (val) {\n\t\tvar frag = document.createDocumentFragment();\n\t\t_hyperscript.internals.runtime.implicitLoop(val, function (val) {\n\t\t\tif (val instanceof Node) frag.append(val);\n\t\t\telse {\n\t\t\t\tvar temp = document.createElement(\"template\");\n\t\t\t\ttemp.innerHTML = val;\n\t\t\t\tfrag.append(temp.content);\n\t\t\t}\n\t\t});\n\t\treturn frag;\n\t};\n}\n","\nimport _hyperscript from \"../lib/core\"\n\nimport web from \"../lib/web\"\n\nweb(_hyperscript)\n\nexport default _hyperscript\n"],"names":["mergeObjects","obj1","obj2","key","hasOwnProperty","getOrInitObject","root","prop","value","newObj","varargConstructor","Cls","args","bind","apply","concat","_hyperscript","globalScope","globalThis","ElementCollection","constructor","css","relativeToElement","this","_css","_runtime","escapeSelector","className","substr","id","Symbol","iterator","getRootNode","querySelectorAll","_lexer","OP_TABLE","$","isValidCSSClassChar","c","isAlpha","isNumeric","isValidCSSIDChar","isWhitespace","isNewline","isIdentifierChar","dollarIsOp","makeTokensObject","tokens","consumed","source","consumeWhitespace","_lastConsumed","token","type","push","shift","raiseError","error","_parser","raiseParseError","matchOpToken","currentToken","op","consumeToken","matchTokenType","type1","type2","type3","type4","indexOf","matchToken","follows","match","consumeUntil","tokenList","n","dontIgnoreWhitespace","i","pushFollow","str","popFollow","pop","clearFollow","tmp","restoreFollow","f","matchAnyToken","op1","op2","op3","arguments","length","opToken","matchAnyOpToken","requireOpToken","requireTokenType","JSON","stringify","requireToken","list","hasMore","lastMatch","consumeUntilWhitespace","lastWhitespace","sourceFor","substring","startToken","start","endToken","end","lineFor","split","line","isValidSingleQuoteStringStart","previousToken","tokenize","string","template","position","column","lastToken","templateBraceCount","inTemplate","currentChar","nextChar","consumeComment","possiblePrecedingSymbol","consumeAttributeReference","consumeShortAttributeReference","consumeIdentifier","consumeNumber","consumeOp","makeToken","consumeChar","Error","consumeString","consumeIdReference","consumeClassReference","classRef","attributeRef","idRef","identifier","number","makeOpToken","startChar","charAt","whitespace","GRAMMAR","COMMANDS","FEATURES","LEAF_EXPRESSIONS","INDIRECT_EXPRESSIONS","initElt","parseElement","programSource","elementDefinition","requireElement","message","result","parseAnyOf","types","expression","addGrammarElement","name","definition","lines","contextLine","repeat","createParserContext","commandStart","featureStart","parser","runtime","featureElement","featureDefinition","commandElement","commandDefinition","cmd","next","indirect","unless","context","conditional","execute","unifiedExec","parent","leaf","setParent","elt","commandBoundary","parseHyperScript","addCommand","keyword","commandGrammarType","commandDefinitionWrapper","meta","command","addFeature","featureGrammarType","featureDefinitionWrapper","addLeafExpression","addIndirectExpression","parseStringTemplate","returnArr","startingBrace","CONVERSIONS","dynamicResolvers","String","val","toString","Int","parseInt","Float","parseFloat","Number","console","log","Date","Array","from","Object","parse","matchesSelector","selector","matchesFunction","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","call","triggerEvent","eventName","detail","event","evt","Event","bubbles","cancelable","document","createEvent","initCustomEvent","makeEvent","dispatchEvent","isArrayLike","isArray","NodeList","shouldAutoIterate","forEach","func","isIterable","nth","ARRAY_SENTINEL","array_sentinel","unwrapAsyncs","values","asyncWrapper","j","valueElement","HALT","ctx","unifiedEval","e","registerHyperTrace","errorHandler","handlingError","errorSymmbol","reject","then","resolvedNext","catch","reason","async","wrappedAsyncs","argument","arr","element","evaluate","Promise","resolve","linearized","arg","linearize","all","valueArray","delinearize","_scriptAttrs","getScriptAttributes","config","attributes","replace","getScript","scriptAttribute","hasAttribute","getAttribute","HTMLScriptElement","innerText","hyperscriptFeaturesMap","WeakMap","getHyperscriptFeatures","hyperscriptFeatures","get","set","addFeatures","owner","parentElement","makeContext","feature","hyperscriptTarget","lexer","iterators","me","target","body","src","commandList","last","initElement","closest","disableSelector","internalData","getInternalData","initialized","script","hyperScript","setTimeout","hyperscript","stack","internalDataMap","getElementScope","scopeName","behavior","typeCheck","typeString","nullOk","prototype","slice","implicitLoop","x","processNode","getScriptSelector","HyperscriptModule","EventTarget","mod","super","module","map","attribute","join","resolveSymbol","fromMetaContext","fromContext","setSymbol","elementScope","findNext","resolveNext","convertValue","converted","dynamicResolver","undefined","converter","resolveProperty","property","component","componentValue","assignToNamespace","nameSpace","propertyName","newRoot","thrown","trace","caller","traceMap","Map","print","logger","maxLen","Math","max","displayName","traceElt","padEnd","getHyperTrace","nullCheck","isEmpty","node","rv","Document","ShadowRoot","hyperscriptUrl","import","url","expr","stringToken","rawValue","innerTokens","returnStr","tokenArr","t","numberToken","elementId","templateValue","getElementById","TemplatedQueryElementCollection","templateParts","elements","filter","Element","el","dataset","hsQueryId","removeAttribute","queryTokens","queryValue","outerVal","innerValue","beingTold","keyExpressions","valueExpressions","keys","returnVal","fields","_namedArgList_","symbolType","booleanLiteral","arg1","time","factor","_context","rootVal","childOfUrRoot","urRoot","propertyAccess","possessivesDisabled","apostrophe","query","targetElt","results","rootElt","conversion","functionCall","argExressions","rootRoot","hyperfunc","argVals","_ctx","andBefore","andAfter","firstIndex","secondIndex","arrayIndex","typeName","scanForwardArray","array","wrap","first","forwardSearch","thing","withinElt","inSearch","inElt","wrapping","operator","reverse","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","scanForwardQuery","DOCUMENT_POSITION_FOLLOWING","scanBackwardsQuery","rhs","rhsVal","children","floor","random","mathOp","initialMathOp","lhs","lhsVal","comparisonToken","hasRightValue","contains","logicalOp","initialLogicalOp","features","install","parseEventArgs","every","events","startCountToken","startCount","endCountToken","endCount","unbounded","intersectionSpec","mutationSpec","elsewhere","inExpr","debounceTime","throttleTime","execCount","on","debounced","lastExec","queue","queueLast","queueFirst","queueNone","implicitReturn","onFeature","executing","queued","err","hypertrace","eventSpec","targets","MutationObserver","mutationList","observer","observe","IntersectionObserver","entries","entry","isIntersecting","addEventListener","listener","isConnected","removeEventListener","initialCtx","inElement","clearTimeout","now","nameVal","funcName","errorSymbol","functionFeature","argumentVal","callingCommand","promise","theResolve","theReject","returned","returnValue","hypername","initFeature","path","formalParams","hs","innerArgs","installFeature","behaviorPath","behaviorNamespace","Function","jsSourceStart","jsLastToken","funcNames","expectFunctionDeclaration","peek","exposedFunctionNames","jsSource","jsBody","function","inputs","inp","input","actualResult","slot","tellCmd","index","originalBeingTold","lookahead","resolved","eventInfo","once","timeValue","separator","details","to","sendCmd","parseReturnFunction","returnAValue","returnCmd","keepExecuting","bubbling","haltDefault","exit","stopPropagation","preventDefault","exprs","withExpr","logCmd","throwCmd","parseCallOrGet","callCmd","tagname","classes","re","exec","trim","createElement","classList","add","functionName","pseudoCommand","makeSetter","symbolWrite","attributeWrite","setCmd","valueToSet","setAttribute","setter","defaultCmd","obj","objectLiteral","trueBranch","falseBranch","ifCmd","exprValue","parseRepeatExpression","startedWithForToken","innerStartToken","identifierToken","whileExpr","isUntil","times","forever","indexIdentifier","loop","waitATick","repeatCmd","until","whileValue","iteratorInfo","keepLooping","loopVal","eventFired","nextValFromIterator","done","repeatInit","innerHTML","amount","targetValue","newValue","fetchCmd","argExpressions","fetch","resp","json","text","scripts","res","code","fn","metaConfig","querySelector","jString","msg","parseJSON","content","documentElement","readyState","internals","defaultTransition","conversions","settleCommand","transitionStarted","r","cssDeclaration","classRefs","attrRef","style","cssText","stringParts","opencurly","tok","part","idx","elementExpr","removeChild","remove","between","classRef2","toggleCmd","toggle","HIDE_SHOW_STRATEGIES","display","visibility","opacity","parseShowHideTarget","currentTokenValue","resolveStrategy","configDefault","defaultHideShowStrategy","strategies","hideShowStrategies","putInto","valueToPut","HTMLDocument","firstChild","append","parsePseudopossessiveTarget","hideShowStrategy","triggerCmd","eventNameStr","forElt","takeCmd","eltColl","clazz","operationToken","operation","putCmd","before","after","prepend","properties","over","using","transition","promises","initialTransition","computedStyles","getComputedStyle","initialStyles","initalStyles","fromVal","toVal","propsToMeasure","rect","getBoundingClientRect","scroll","top","scrollTop","left","scrollLeft","topMax","scrollTopMax","leftMax","scrollLeftMax","height","scrollHeight","width","scrollWidth","y","right","bottom","bounds","parentSearch","closestExpr","back","newWindow","verticalPosition","horizontalPosition","smoothness","scrollOptions","block","inline","goCmd","window","history","open","location","href","scrollIntoView","getInputInfo","appendValue","info","checked","selected","toHTML","item","HTMLElement","outerHTML","frag","createDocumentFragment","temp","web"],"mappings":"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"}